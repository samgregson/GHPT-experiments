{
  "Components":
  [
    {
      "Name": "Cull Pattern",
      "Description": "Cull (remove) elements in a list using a repeating bit mask.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "List", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Cull Pattern", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "List", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Query Model Environments",
      "Description": "Query a Rhino document for all available render environments",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Name", "DataType": "Text Pattern", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Environments",
          "DataType": "Model Environment",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "Brep Edges",
      "Description": "Extract the edge curves of a brep.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Brep", "DataType": "Brep", "IsOptional": false }],
      "Outputs": [
        { "Name": "Naked", "DataType": "Curve", "IsOptional": false },
        { "Name": "Interior", "DataType": "Curve", "IsOptional": false },
        { "Name": "Non-Manifold", "DataType": "Curve", "IsOptional": false }
      ]
    },
    {
      "Name": "Char Sequence",
      "Description": "Create a sequence of textual characters.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "Char Pool", "DataType": "Text", "IsOptional": false },
        { "Name": "Format", "DataType": "Text", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Sequence", "DataType": "Text", "IsOptional": false }]
    },
    {
      "Name": "Mesh Inclusion",
      "Description": "Test a point for Mesh inclusion",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Strict", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Inside", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Query Annotation Styles",
      "Description": "Query a Rhino document for all available annotation styles",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Name", "DataType": "Text Pattern", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Annotation Styles",
          "DataType": "Model Annotation Style",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "Cylinder",
      "Description": "Create a cylindrical surface.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Base", "DataType": "Plane", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Cylinder", "DataType": "Surface", "IsOptional": false }
      ]
    },
    {
      "Name": "Sanity XForm",
      "Description": "Apply a sanity transformation to f a r - a w a y, tiny or HUGE geometry",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Wackometry", "DataType": "Geometry", "IsOptional": false }
      ]
    },
    {
      "Name": "Pick'n'Choose",
      "Description": "Pick and choose from a set of input data.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Pattern", "DataType": "Integer", "IsOptional": false },
        { "Name": "Stream 0", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream 1", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Cone",
      "Description": "Create a conical surface",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Base", "DataType": "Plane", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Cone", "DataType": "Surface", "IsOptional": false },
        { "Name": "Tip", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Split Brep Multiple",
      "Description": "Split one brep with a bunch of others.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Brep", "DataType": "Brep", "IsOptional": false },
        { "Name": "Cutters", "DataType": "Brep", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Result", "DataType": "Brep", "IsOptional": false }]
    },
    {
      "Name": "Gate And",
      "Description": "Perform boolean conjunction (AND gate).",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "A", "DataType": "Boolean", "IsOptional": true },
        { "Name": "B", "DataType": "Boolean", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Text Split",
      "Description": "Split some text into fragments using separators",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Text", "DataType": "Text", "IsOptional": false },
        { "Name": "Separators", "DataType": "Text", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Result", "DataType": "Text", "IsOptional": false }]
    },
    {
      "Name": "SubD Edge Tags",
      "Description": "Set the edge tags of a SubD shape.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "SubD", "DataType": "SubD", "IsOptional": false },
        { "Name": "Edge Tag", "DataType": "Text", "IsOptional": false },
        { "Name": "Edge IDs", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "SubD", "DataType": "SubD", "IsOptional": false }]
    },
    {
      "Name": "Cloud Display",
      "Description": "Draw a collection of points as a fuzzy cloud",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": true },
        { "Name": "Colours", "DataType": "Colour", "IsOptional": true },
        { "Name": "Size", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": []
    },
    {
      "Name": "Project Along",
      "Description": "Project an object onto a plane along a direction.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Direction", "DataType": "Vector", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Clean Tree",
      "Description": "Removed all null and invalid items from a data tree.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Remove Nulls", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Remove Invalid", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Remove Empty", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Tree", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Tree", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "VB Script",
      "Description": "A VB.NET scriptable component",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "x", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "y", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "out", "DataType": "Text", "IsOptional": false },
        { "Name": "A", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Mesh Depth",
      "Description": "Validate the depth of a mesh.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Minimum", "DataType": "Number", "IsOptional": false },
        { "Name": "Maximum", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Valid", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Text Fragment",
      "Description": "Extract a fragment (subset) of some text",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Text", "DataType": "Text", "IsOptional": false },
        { "Name": "Start", "DataType": "Integer", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Fragment", "DataType": "Text", "IsOptional": false }]
    },
    {
      "Name": "Tensor Display",
      "Description": "Display the tensor vectors of a field section",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Field", "DataType": "Field", "IsOptional": false },
        { "Name": "Section", "DataType": "Rectangle", "IsOptional": false },
        { "Name": "Samples", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": []
    },
    {
      "Name": "Annotation Text Overrides",
      "Description": "Manage annotation text attributes",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Annotation", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Text", "DataType": "Text", "IsOptional": true },
        { "Name": "View Oriented", "DataType": "Boolean", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Annotation", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Text", "DataType": "Text", "IsOptional": false },
        { "Name": "View Oriented", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Angle Dimension (Lines)",
      "Description": "Angle Dimension From Lines",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Angle Dimension",
          "DataType": "Angular Dimension",
          "IsOptional": true
        },
        { "Name": "Line A", "DataType": "Line", "IsOptional": true },
        { "Name": "Line B", "DataType": "Line", "IsOptional": true },
        { "Name": "Dimension Location", "DataType": "Point", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Angle Dimension",
          "DataType": "Angular Dimension",
          "IsOptional": false
        },
        { "Name": "Line A", "DataType": "Line", "IsOptional": false },
        { "Name": "Line B", "DataType": "Line", "IsOptional": false },
        { "Name": "Dimension Location", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Curve | Self",
      "Description": "Solve all self intersection events for a curve.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Curve", "DataType": "Curve", "IsOptional": false }],
      "Outputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Params", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Split AHSL",
      "Description": "Split a colour into floating point {AHSL} channels",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Colour", "DataType": "Colour", "IsOptional": false }],
      "Outputs": [
        { "Name": "Alpha", "DataType": "Number", "IsOptional": false },
        { "Name": "Hue", "DataType": "Number", "IsOptional": false },
        { "Name": "Saturation", "DataType": "Number", "IsOptional": false },
        { "Name": "Luminance", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Mesh Sphere",
      "Description": "Create a mesh sphere.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Base", "DataType": "Plane", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false },
        { "Name": "U Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "V Count", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Point Order",
      "Description": "Displays the order of a list of points",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Points", "DataType": "Point", "IsOptional": true }],
      "Outputs": []
    },
    {
      "Name": "Numbers to Points",
      "Description": "Convert a list of numbers to a list of points",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Numbers", "DataType": "Number", "IsOptional": false },
        { "Name": "Mask", "DataType": "Coordinate Mask", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Points", "DataType": "Point", "IsOptional": false }]
    },
    {
      "Name": "Point in Curves",
      "Description": "Test a point for multiple closed curve containment.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Curves", "DataType": "Curve", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Relationship", "DataType": "Integer", "IsOptional": false },
        { "Name": "Index", "DataType": "Integer", "IsOptional": false },
        { "Name": "Point", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Face Boundaries",
      "Description": "Convert all mesh faces to polylines",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }],
      "Outputs": [
        { "Name": "Boundaries", "DataType": "Curve", "IsOptional": false }
      ]
    },
    {
      "Name": "Find Domain",
      "Description": "Find the first domain that contains a specific value",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Domains", "DataType": "Domain", "IsOptional": false },
        { "Name": "Number", "DataType": "Number", "IsOptional": false },
        { "Name": "Strict", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Index", "DataType": "Integer", "IsOptional": false },
        { "Name": "Neighbour", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Merge Multiple",
      "Description": "Merge multiple input streams into one",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Stream 0", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream 1", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Stream", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Bounding Box",
      "Description": "Solve oriented geometry bounding boxes.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Content", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Box", "DataType": "Box", "IsOptional": false },
        { "Name": "Box", "DataType": "Box", "IsOptional": false }
      ]
    },
    {
      "Name": "Construct Date",
      "Description": "Construct a date and time instance.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Year", "DataType": "Integer", "IsOptional": false },
        { "Name": "Month", "DataType": "Integer", "IsOptional": false },
        { "Name": "Day", "DataType": "Integer", "IsOptional": false },
        { "Name": "Hour", "DataType": "Integer", "IsOptional": false },
        { "Name": "Minute", "DataType": "Integer", "IsOptional": false },
        { "Name": "Second", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Date", "DataType": "Time", "IsOptional": false }]
    },
    {
      "Name": "Maximum",
      "Description": "Return the greater of two items.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "A", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "B", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Pi",
      "Description": "Returns a factor of Pi.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Factor", "DataType": "Number", "IsOptional": false }],
      "Outputs": [{ "Name": "Output", "DataType": "Number", "IsOptional": false }]
    },
    {
      "Name": "Degrees",
      "Description": "Convert an angle specified in radians to degrees",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Radians", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Degrees", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Curve | Line",
      "Description": "Solve intersection events for a curve and a line.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Line", "DataType": "Line", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Params", "DataType": "Number", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Transpose Matrix",
      "Description": "Transpose a matrix (swap rows and columns)",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Matrix", "DataType": "Matrix", "IsOptional": false }],
      "Outputs": [{ "Name": "Matrix", "DataType": "Matrix", "IsOptional": false }]
    },
    {
      "Name": "Curve Frames",
      "Description": "Generate a number of equally spaced curve frames.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Frames", "DataType": "Plane", "IsOptional": false },
        { "Name": "Parameters", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Surface Inflection",
      "Description": "Compute the inflection curves for a surface",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false },
        { "Name": "Tolerance", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Curves", "DataType": "Line", "IsOptional": false }]
    },
    {
      "Name": "Tangent",
      "Description": "Compute the tangent of a value",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Value", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Query Viewports",
      "Description": "Query a Rhino document for all available viewports",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Name", "DataType": "Text Pattern", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Viewports", "DataType": "Model Viewport", "IsOptional": false }
      ]
    },
    {
      "Name": "Region Slits",
      "Description": "Add slits to a collection of intersecting planar regions",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Regions", "DataType": "Curve", "IsOptional": false },
        { "Name": "Width", "DataType": "Number", "IsOptional": false },
        { "Name": "Gap", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Regions", "DataType": "Surface", "IsOptional": false },
        { "Name": "Topology", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Solid Union",
      "Description": "Perform a solid union on a set of Breps.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Breps", "DataType": "Brep", "IsOptional": false }],
      "Outputs": [{ "Name": "Result", "DataType": "Brep", "IsOptional": false }]
    },
    {
      "Name": "SubD Box",
      "Description": "Create a subdivision box",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Box", "DataType": "Box", "IsOptional": false },
        { "Name": "Density", "DataType": "Integer", "IsOptional": false },
        { "Name": "Creases", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "SubD", "DataType": "SubD", "IsOptional": false }]
    },
    {
      "Name": "Clamp",
      "Description": "Restrict a number between two numeric extremes.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Value", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Domain", "DataType": "Domain", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Clamped", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Trim Tree",
      "Description": "Reduce the complexity of a tree by merging the outermost branches.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Tree", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Depth", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Tree", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "End Points",
      "Description": "Extract the end points of a curve.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Curve", "DataType": "Curve", "IsOptional": false }],
      "Outputs": [
        { "Name": "Start", "DataType": "Point", "IsOptional": false },
        { "Name": "End", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Vector Display Ex",
      "Description": "Preview vectors in the viewport",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": true },
        { "Name": "Vector", "DataType": "Vector", "IsOptional": true },
        { "Name": "Colour", "DataType": "Colour", "IsOptional": true },
        { "Name": "Width", "DataType": "Integer", "IsOptional": true }
      ],
      "Outputs": []
    },
    {
      "Name": "Region Union",
      "Description": "Union of a set of planar closed curves (regions)",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curves", "DataType": "Curve", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Result", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Twisted Box",
      "Description": "Create a twisted box from corner points.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Corner A", "DataType": "Point", "IsOptional": false },
        { "Name": "Corner B", "DataType": "Point", "IsOptional": false },
        { "Name": "Corner C", "DataType": "Point", "IsOptional": false },
        { "Name": "Corner D", "DataType": "Point", "IsOptional": false },
        { "Name": "Corner E", "DataType": "Point", "IsOptional": false },
        { "Name": "Corner F", "DataType": "Point", "IsOptional": false },
        { "Name": "Corner G", "DataType": "Point", "IsOptional": false },
        { "Name": "Corner H", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Twisted Box", "DataType": "Twisted Box", "IsOptional": false }
      ]
    },
    {
      "Name": "Hexagonal",
      "Description": "2D grid with hexagonal cells",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Size", "DataType": "Number", "IsOptional": false },
        { "Name": "Extent X", "DataType": "Integer", "IsOptional": false },
        { "Name": "Extent Y", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Cells", "DataType": "Curve", "IsOptional": false },
        { "Name": "Points", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Text Join",
      "Description": "Join a collection of text fragments into one",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Text", "DataType": "Text", "IsOptional": false },
        { "Name": "Join", "DataType": "Text", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Result", "DataType": "Text", "IsOptional": false }]
    },
    {
      "Name": "Simplify Tree",
      "Description": "Simplify a data tree by removing the overlap shared amongst all branches.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Tree", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Front", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Tree", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Maelstrom",
      "Description": "Spirally deforms objects as if they were caught in a whirlpool",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "First", "DataType": "Number", "IsOptional": false },
        { "Name": "Second", "DataType": "Number", "IsOptional": false },
        { "Name": "Angle", "DataType": "Number", "IsOptional": false },
        { "Name": "Rigid", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false }
      ]
    },
    {
      "Name": "Tween Curve",
      "Description": "Tween between two curves.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve A", "DataType": "Curve", "IsOptional": false },
        { "Name": "Curve B", "DataType": "Curve", "IsOptional": false },
        { "Name": "Factor", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Tween", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Evaluate Box",
      "Description": "Evaluate a box in normalised {UVW} space.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Box", "DataType": "Box", "IsOptional": false },
        { "Name": "U parameter", "DataType": "Number", "IsOptional": false },
        { "Name": "V parameter", "DataType": "Number", "IsOptional": false },
        { "Name": "W parameter", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Include", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Angle Dimension (Arc)",
      "Description": "Angle Dimension From Arcs",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Angle Dimension",
          "DataType": "Angular Dimension",
          "IsOptional": true
        },
        { "Name": "Arc", "DataType": "Arc", "IsOptional": true },
        { "Name": "Offset", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Angle Dimension",
          "DataType": "Angular Dimension",
          "IsOptional": false
        },
        { "Name": "Arc", "DataType": "Arc", "IsOptional": false },
        { "Name": "Offset", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Blend Curve Pt",
      "Description": "Create a blend curve between two curves that intersects a point.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve A", "DataType": "Curve", "IsOptional": false },
        { "Name": "Curve B", "DataType": "Curve", "IsOptional": false },
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Continuity", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Blend", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Surface Points",
      "Description": "Get the control-points of a Nurbs Surface",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Weights", "DataType": "Number", "IsOptional": false },
        { "Name": "Greville", "DataType": "Point", "IsOptional": false },
        { "Name": "U Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "V Count", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Merge Group",
      "Description": "Merge two groups",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Group A", "DataType": "Group", "IsOptional": false },
        { "Name": "Group B", "DataType": "Group", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Group", "DataType": "Group", "IsOptional": false }]
    },
    {
      "Name": "Occlusion",
      "Description": "Solve occlusion for a collection of view rays and obstructions.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Samples", "DataType": "Point", "IsOptional": false },
        { "Name": "Obstructions", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Rays", "DataType": "Vector", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Hits", "DataType": "Integer", "IsOptional": false },
        { "Name": "Occlusion", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Orient Direction",
      "Description": "Orient an object using directional constraints only.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": true },
        { "Name": "Point A", "DataType": "Point", "IsOptional": false },
        { "Name": "Direction A", "DataType": "Vector", "IsOptional": false },
        { "Name": "Point B", "DataType": "Point", "IsOptional": false },
        { "Name": "Direction B", "DataType": "Vector", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Annotation Arrow Settings",
      "Description": "Annotation Style Arrow Settings",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Arrow Settings",
          "DataType": "Annotation Arrow Settings",
          "IsOptional": true
        },
        { "Name": "Arrow 1", "DataType": "Arrow Type", "IsOptional": true },
        { "Name": "Arrow 2", "DataType": "Arrow Type", "IsOptional": true },
        { "Name": "Arrow Size", "DataType": "Number", "IsOptional": true },
        { "Name": "Fit Arrow", "DataType": "Integer", "IsOptional": true },
        { "Name": "Dimension Inline", "DataType": "Boolean", "IsOptional": true },
        { "Name": "Leader Arrow", "DataType": "Arrow Type", "IsOptional": true },
        { "Name": "Leader Arrow Size", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Arrow Settings",
          "DataType": "Annotation Arrow Settings",
          "IsOptional": false
        },
        { "Name": "Arrow 1", "DataType": "Arrow Type", "IsOptional": false },
        { "Name": "Arrow 2", "DataType": "Arrow Type", "IsOptional": false },
        { "Name": "Arrow Size", "DataType": "Number", "IsOptional": false },
        { "Name": "Fit Arrow", "DataType": "Integer", "IsOptional": false },
        {
          "Name": "Dimension Inline",
          "DataType": "Boolean",
          "IsOptional": false
        },
        { "Name": "Leader Arrow", "DataType": "Arrow Type", "IsOptional": false },
        { "Name": "Leader Arrow Size", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Query Model Layers",
      "Description": "Query a Rhino document for all available layers",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Name", "DataType": "Text Pattern", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Layers", "DataType": "Model Layer", "IsOptional": false }
      ]
    },
    {
      "Name": "Colour CMYK",
      "Description": "Create a colour from floating point {CMYK} channels.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Cyan", "DataType": "Number", "IsOptional": false },
        { "Name": "Magenta", "DataType": "Number", "IsOptional": false },
        { "Name": "Yellow", "DataType": "Number", "IsOptional": false },
        { "Name": "Key", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Colour", "DataType": "Colour", "IsOptional": false }]
    },
    {
      "Name": "XY Plane",
      "Description": "World XY plane.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Origin", "DataType": "Point", "IsOptional": false }],
      "Outputs": [{ "Name": "Plane", "DataType": "Plane", "IsOptional": false }]
    },
    {
      "Name": "Rectangle Mapping",
      "Description": "Transform geometry from one rectangle into another.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": true },
        { "Name": "Source", "DataType": "Rectangle", "IsOptional": false },
        { "Name": "Target", "DataType": "Rectangle", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Model View",
      "Description": "Model View",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "View", "DataType": "View", "IsOptional": true },
        { "Name": "Title", "DataType": "Text", "IsOptional": true },
        { "Name": "Perspective", "DataType": "Boolean", "IsOptional": true },
        { "Name": "Location", "DataType": "Plane", "IsOptional": true },
        { "Name": "Target", "DataType": "Number", "IsOptional": true },
        { "Name": "X Extents", "DataType": "Domain", "IsOptional": true },
        { "Name": "Y Extents", "DataType": "Domain", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "View", "DataType": "View", "IsOptional": false },
        { "Name": "Title", "DataType": "Text", "IsOptional": false },
        { "Name": "Perspective", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Location", "DataType": "Plane", "IsOptional": false },
        { "Name": "Target", "DataType": "Number", "IsOptional": false },
        { "Name": "X Extents", "DataType": "Domain", "IsOptional": false },
        { "Name": "Y Extents", "DataType": "Domain", "IsOptional": false }
      ]
    },
    {
      "Name": "List Length",
      "Description": "Measure the length of a list.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "List", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Length", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Length Domain",
      "Description": "Measure the length of a curve subdomain.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Domain", "DataType": "Domain", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Length", "DataType": "Number", "IsOptional": false }]
    },
    {
      "Name": "Facet Dome",
      "Description": "Create a facetted dome",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Box", "DataType": "Box", "IsOptional": true },
        { "Name": "Radius", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Pattern", "DataType": "Curve", "IsOptional": false },
        { "Name": "Dome", "DataType": "Surface", "IsOptional": false }
      ]
    },
    {
      "Name": "Delete Consecutive",
      "Description": "Delete consecutive similar members in a set.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Set", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Wrap", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Set", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Mesh | Curve",
      "Description": "Mesh Curve intersection",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Faces", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Named Group",
      "Description": "Group a set of objects under a name",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Group", "DataType": "Group", "IsOptional": true },
        { "Name": "Objects", "DataType": "Geometry", "IsOptional": true },
        { "Name": "Name", "DataType": "Text", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Group", "DataType": "Group", "IsOptional": false },
        { "Name": "Objects", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Name", "DataType": "Text", "IsOptional": false }
      ]
    },
    {
      "Name": "Quad Remesh",
      "Description": "Perform quad-remeshing on a shape.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Guides", "DataType": "Curve", "IsOptional": true },
        {
          "Name": "Settings",
          "DataType": "Quad meshing settings",
          "IsOptional": false
        }
      ],
      "Outputs": [
        { "Name": "Quad result", "DataType": "Mesh", "IsOptional": false }
      ]
    },
    {
      "Name": "Rectangular",
      "Description": "2D grid with rectangular cells",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Size X", "DataType": "Number", "IsOptional": false },
        { "Name": "Size Y", "DataType": "Number", "IsOptional": false },
        { "Name": "Extent X", "DataType": "Integer", "IsOptional": false },
        { "Name": "Extent Y", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Cells", "DataType": "Rectangle", "IsOptional": false },
        { "Name": "Points", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Offset Curve",
      "Description": "Offset a curve with a specified distance.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Distance", "DataType": "Number", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": true },
        { "Name": "Corners", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Curve", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Brep Join",
      "Description": "Join a number of Breps together",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Breps", "DataType": "Brep", "IsOptional": false }],
      "Outputs": [
        { "Name": "Breps", "DataType": "Brep", "IsOptional": false },
        { "Name": "Closed", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Settings (Quality)",
      "Description": "Represents 'Smooth & slower' mesh settings.",
      "IsCoreComponent": true,
      "Inputs": [],
      "Outputs": [
        { "Name": "Settings", "DataType": "MeshParameters", "IsOptional": false }
      ]
    },
    {
      "Name": "Arc Dimension",
      "Description": "Create an angle annotation based on an arc.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Arc", "DataType": "Arc", "IsOptional": false },
        { "Name": "Offset", "DataType": "Number", "IsOptional": false },
        { "Name": "Text", "DataType": "Text", "IsOptional": false },
        { "Name": "Size", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": []
    },
    {
      "Name": "Mesh Quad",
      "Description": "Create a mesh quad.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Corner A", "DataType": "Integer", "IsOptional": false },
        { "Name": "Corner B", "DataType": "Integer", "IsOptional": false },
        { "Name": "Corner C", "DataType": "Integer", "IsOptional": false },
        { "Name": "Corner D", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Face", "DataType": "Mesh face", "IsOptional": false }
      ]
    },
    {
      "Name": "Directional Light",
      "Description": "Directional Light",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Directional Light", "DataType": "Light", "IsOptional": true },
        { "Name": "Location", "DataType": "Point", "IsOptional": true },
        { "Name": "Direction", "DataType": "Vector", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Directional Light", "DataType": "Light", "IsOptional": false },
        { "Name": "Location", "DataType": "Point", "IsOptional": false },
        { "Name": "Direction", "DataType": "Vector", "IsOptional": false }
      ]
    },
    {
      "Name": "Path Compare",
      "Description": "Compare a path to a mask pattern",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Path", "DataType": "Path", "IsOptional": false },
        { "Name": "Mask", "DataType": "Text", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Comparison", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Divide Distance",
      "Description": "Divide a curve with a preset distance between points",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Distance", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Tangents", "DataType": "Vector", "IsOptional": false },
        { "Name": "Parameters", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Delaunay Mesh",
      "Description": "Delaunay triangulation",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Area Moments",
      "Description": "Solve area moments for breps, meshes and planar closed curves.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Area", "DataType": "Number", "IsOptional": true },
        { "Name": "Centroid", "DataType": "Point", "IsOptional": true },
        { "Name": "Inertia", "DataType": "Vector", "IsOptional": true },
        { "Name": "Secondary", "DataType": "Vector", "IsOptional": true },
        { "Name": "Gyration", "DataType": "Vector", "IsOptional": true }
      ]
    },
    {
      "Name": "Key/Value Search",
      "Description": "Extract an item from a collection using a key-value match",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Keys", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Values", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Search", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Point List",
      "Description": "Displays the indices in lists of points",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": true },
        { "Name": "Tags", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Lines", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Size", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": []
    },
    {
      "Name": "Complex Components",
      "Description": "Extract the Real and Imaginary components from a complex number",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Complex", "DataType": "Complex", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Real", "DataType": "Number", "IsOptional": false },
        { "Name": "Imaginary", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "CoTangent",
      "Description": "Compute the co-tangent (reciprocal of the Tangent) of an angle.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Value", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Fit Line",
      "Description": "Fit a line to a collection of points.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Points", "DataType": "Point", "IsOptional": false }],
      "Outputs": [{ "Name": "Line", "DataType": "Line", "IsOptional": false }]
    },
    {
      "Name": "Nurbs Curve PWK",
      "Description": "Construct a nurbs curve from control points, weights and knots.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Weights", "DataType": "Number", "IsOptional": true },
        { "Name": "Knots", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false },
        { "Name": "Domain", "DataType": "Domain", "IsOptional": false }
      ]
    },
    {
      "Name": "Content Cache",
      "Description": "Push or Pull content to and from a Rhino model",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Content", "DataType": "Data", "IsOptional": true }],
      "Outputs": [{ "Name": "Result", "DataType": "Data", "IsOptional": false }]
    },
    {
      "Name": "Concatenate",
      "Description": "Concatenate some fragments of text",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Fragment A", "DataType": "Text", "IsOptional": true },
        { "Name": "Fragment B", "DataType": "Text", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Result", "DataType": "Text", "IsOptional": false }]
    },
    {
      "Name": "Angle Dimension (Points)",
      "Description": "Angle Dimension",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Angle Dimension",
          "DataType": "Angular Dimension",
          "IsOptional": true
        },
        { "Name": "Center", "DataType": "Point", "IsOptional": true },
        { "Name": "Point A", "DataType": "Point", "IsOptional": true },
        { "Name": "Point B", "DataType": "Point", "IsOptional": true },
        { "Name": "Dimension Location", "DataType": "Point", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Angle Dimension",
          "DataType": "Angular Dimension",
          "IsOptional": false
        },
        { "Name": "Center", "DataType": "Point", "IsOptional": false },
        { "Name": "Point A", "DataType": "Point", "IsOptional": false },
        { "Name": "Point B", "DataType": "Point", "IsOptional": false },
        { "Name": "Dimension Location", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Brep | Curve",
      "Description": "Solve intersection events for a Brep and a curve.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Brep", "DataType": "Brep", "IsOptional": false },
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Curves", "DataType": "Curve", "IsOptional": false },
        { "Name": "Points", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Divide Curve",
      "Description": "Divide a curve into equal length segments",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "Kinks", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Tangents", "DataType": "Vector", "IsOptional": false },
        { "Name": "Parameters", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Collision Many|Many",
      "Description": "Test for many|many collision between objects",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Colliders", "DataType": "Geometry", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Collision", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Indices", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "SubD Edges",
      "Description": "Extract all edge data from a SubD.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "SubD", "DataType": "SubD", "IsOptional": false }],
      "Outputs": [
        { "Name": "Line", "DataType": "Line", "IsOptional": false },
        { "Name": "Edge", "DataType": "Curve", "IsOptional": false },
        { "Name": "Tag", "DataType": "Text", "IsOptional": false },
        { "Name": "Id", "DataType": "Text", "IsOptional": false }
      ]
    },
    {
      "Name": "Zoom Extents",
      "Description": "Zoom view to show all objects",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "View", "DataType": "View", "IsOptional": false },
        { "Name": "Extents", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Border", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "View", "DataType": "View", "IsOptional": false },
        { "Name": "Extents", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Border", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Mesh | Mesh",
      "Description": "Mesh Mesh intersection",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Mesh A", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Mesh B", "DataType": "Mesh", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Intersections", "DataType": "Curve", "IsOptional": false }
      ]
    },
    {
      "Name": "Circumcentre",
      "Description": "Generate the triangle circumcentre from perpendicular bisectors.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point A", "DataType": "Point", "IsOptional": false },
        { "Name": "Point B", "DataType": "Point", "IsOptional": false },
        { "Name": "Point C", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Circumcentre", "DataType": "Point", "IsOptional": false },
        { "Name": "Bisector AB", "DataType": "Line", "IsOptional": false },
        { "Name": "Bisector BC", "DataType": "Line", "IsOptional": false },
        { "Name": "Bisector CA", "DataType": "Line", "IsOptional": false }
      ]
    },
    {
      "Name": "Square",
      "Description": "Compute the square of a value",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Value", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Flip Curve",
      "Description": "Flip a curve using an optional guide curve.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Guide", "DataType": "Curve", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Flag", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Merge 10",
      "Description": "Merge ten streams into one.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Stream A", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream B", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream C", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream D", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream E", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream F", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream G", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream H", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream I", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream J", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Stream", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Align Planes",
      "Description": "Align planes by minimizing their serial rotation.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Planes", "DataType": "Plane", "IsOptional": false },
        { "Name": "Master", "DataType": "Plane", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Planes", "DataType": "Plane", "IsOptional": false }]
    },
    {
      "Name": "Project",
      "Description": "Project an object onto a plane.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Point Cylindrical",
      "Description": "Create a point from cylindrical {angle,radius,elevation} coordinates.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Base plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Angle", "DataType": "Number", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false },
        { "Name": "Elevation", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Point", "DataType": "Point", "IsOptional": false }]
    },
    {
      "Name": "Deconstruct Arc",
      "Description": "Retrieve the base plane, radius and angle domain of an arc.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Arc", "DataType": "Arc", "IsOptional": false }],
      "Outputs": [
        { "Name": "Base Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false },
        { "Name": "Angle", "DataType": "Domain", "IsOptional": false }
      ]
    },
    {
      "Name": "Natural logarithm",
      "Description": "Compute the natural logarithm of a value.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Value", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Delete Vertices",
      "Description": "Delete vertices from a mesh",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Indices", "DataType": "Integer", "IsOptional": false },
        { "Name": "Shrink", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Contour (ex)",
      "Description": "Create a set of Brep or Mesh contours",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Shape", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Offsets", "DataType": "Number", "IsOptional": true },
        { "Name": "Distances", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Contours", "DataType": "Curve", "IsOptional": false }
      ]
    },
    {
      "Name": "Settings (Speed)",
      "Description": "Represents 'Jagged & faster' mesh settings.",
      "IsCoreComponent": true,
      "Inputs": [],
      "Outputs": [
        { "Name": "Settings", "DataType": "MeshParameters", "IsOptional": false }
      ]
    },
    {
      "Name": "Relative Items",
      "Description": "Retrieve a relative item combo from two data trees",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Tree A", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Tree B", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Offset", "DataType": "Text", "IsOptional": false },
        { "Name": "Wrap Paths", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Wrap Items", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Item A", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Item B", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Trim with Regions",
      "Description": "Trim a curve with multiple regions.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Regions", "DataType": "Curve", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Inside", "DataType": "Curve", "IsOptional": false },
        { "Name": "Outside", "DataType": "Curve", "IsOptional": false }
      ]
    },
    {
      "Name": "Mesh Box",
      "Description": "Create a mesh box.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Base", "DataType": "Box", "IsOptional": false },
        { "Name": "X Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "Y Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "Z Count", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Discontinuity",
      "Description": "Find all discontinuities along a curve.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Level", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Parameters", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Catenary",
      "Description": "Create a catenary chain between two points.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point A", "DataType": "Point", "IsOptional": false },
        { "Name": "Point B", "DataType": "Point", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false },
        { "Name": "Gravity", "DataType": "Vector", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Catenary", "DataType": "Curve", "IsOptional": false }
      ]
    },
    {
      "Name": "Logarithm",
      "Description": "Compute the Base-10 logarithm of a value.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Value", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Center Box",
      "Description": "Create a box centered on a plane.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Base", "DataType": "Plane", "IsOptional": false },
        { "Name": "X", "DataType": "Number", "IsOptional": false },
        { "Name": "Y", "DataType": "Number", "IsOptional": false },
        { "Name": "Z", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Box", "DataType": "Box", "IsOptional": false }]
    },
    {
      "Name": "Absolute",
      "Description": "Compute the absolute of a value.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Value", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Match Curve",
      "Description": "Match two curves.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve A", "DataType": "Curve", "IsOptional": false },
        { "Name": "Curve B", "DataType": "Curve", "IsOptional": false },
        { "Name": "Continuity", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Match", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Point Cloud Attributes",
      "Description": "Point Cloud Attributes",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Cloud", "DataType": "Point Cloud", "IsOptional": true },
        { "Name": "Locations", "DataType": "Point", "IsOptional": true },
        { "Name": "Normals", "DataType": "Vector", "IsOptional": true },
        { "Name": "Colours", "DataType": "Colour", "IsOptional": true },
        { "Name": "Extra", "DataType": "Number", "IsOptional": true },
        { "Name": "Hidden", "DataType": "Boolean", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Cloud", "DataType": "Point Cloud", "IsOptional": false },
        { "Name": "Locations", "DataType": "Point", "IsOptional": false },
        { "Name": "Normals", "DataType": "Vector", "IsOptional": false },
        { "Name": "Colours", "DataType": "Colour", "IsOptional": false },
        { "Name": "Extra", "DataType": "Number", "IsOptional": false },
        { "Name": "Hidden", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Render Material",
      "Description": "Object render material attributes",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Object Material",
          "DataType": "Object Material",
          "IsOptional": true
        },
        { "Name": "Source", "DataType": "Integer", "IsOptional": true },
        { "Name": "Material", "DataType": "Model Material", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Object Material",
          "DataType": "Object Material",
          "IsOptional": false
        },
        { "Name": "Source", "DataType": "Integer", "IsOptional": false },
        { "Name": "Material", "DataType": "Model Material", "IsOptional": false }
      ]
    },
    {
      "Name": "Text On Surface",
      "Description": "Create a collection of textual symbols aligned on a surface.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Text", "DataType": "Text", "IsOptional": false },
        { "Name": "Font", "DataType": "Text", "IsOptional": false },
        { "Name": "Height", "DataType": "Number", "IsOptional": false },
        { "Name": "Depth", "DataType": "Number", "IsOptional": false },
        { "Name": "Base Line", "DataType": "Curve", "IsOptional": false },
        { "Name": "Base Surface", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Symbols", "DataType": "Brep", "IsOptional": false }]
    },
    {
      "Name": "InCircle",
      "Description": "Create the incircle of a triangle.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Corner A", "DataType": "Point", "IsOptional": false },
        { "Name": "Corner B", "DataType": "Point", "IsOptional": false },
        { "Name": "Corner C", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Circle", "DataType": "Circle", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Annotation Dimension Settings",
      "Description": "Annotation Style Dimension Settings",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Dimension Settings",
          "DataType": "Dimension Settings",
          "IsOptional": true
        },
        { "Name": "View Oriented", "DataType": "Boolean", "IsOptional": true },
        { "Name": "Text Location", "DataType": "Integer", "IsOptional": true },
        { "Name": "Text Rotation", "DataType": "Integer", "IsOptional": true },
        {
          "Name": "Radial View Oriented",
          "DataType": "Boolean",
          "IsOptional": true
        },
        {
          "Name": "Radial Text Location",
          "DataType": "Integer",
          "IsOptional": true
        },
        {
          "Name": "Radial Text Rotation",
          "DataType": "Integer",
          "IsOptional": true
        },
        {
          "Name": "Dimension Line Extension",
          "DataType": "Number",
          "IsOptional": true
        },
        {
          "Name": "Extension Line Extension",
          "DataType": "Number",
          "IsOptional": true
        },
        {
          "Name": "Extension Line Offset",
          "DataType": "Number",
          "IsOptional": true
        },
        { "Name": "Fixed Extension", "DataType": "Boolean", "IsOptional": true },
        {
          "Name": "Fixed Extension Length",
          "DataType": "Number",
          "IsOptional": true
        },
        {
          "Name": "Suppress Extension 1",
          "DataType": "Boolean",
          "IsOptional": true
        },
        {
          "Name": "Suppress Extension 2",
          "DataType": "Boolean",
          "IsOptional": true
        },
        { "Name": "Baseline Spacing", "DataType": "Number", "IsOptional": true },
        { "Name": "Centermark Size", "DataType": "Number", "IsOptional": true },
        { "Name": "Centermark Type", "DataType": "Integer", "IsOptional": true },
        { "Name": "Decimal Separator", "DataType": "Text", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Dimension Settings",
          "DataType": "Dimension Settings",
          "IsOptional": false
        },
        { "Name": "View Oriented", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Text Location", "DataType": "Integer", "IsOptional": false },
        { "Name": "Text Rotation", "DataType": "Integer", "IsOptional": false },
        {
          "Name": "Radial View Oriented",
          "DataType": "Boolean",
          "IsOptional": false
        },
        {
          "Name": "Radial Text Location",
          "DataType": "Integer",
          "IsOptional": false
        },
        {
          "Name": "Radial Text Rotation",
          "DataType": "Integer",
          "IsOptional": false
        },
        {
          "Name": "Dimension Line Extension",
          "DataType": "Number",
          "IsOptional": false
        },
        {
          "Name": "Extension Line Extension",
          "DataType": "Number",
          "IsOptional": false
        },
        {
          "Name": "Extension Line Offset",
          "DataType": "Number",
          "IsOptional": false
        },
        { "Name": "Fixed Extension", "DataType": "Boolean", "IsOptional": false },
        {
          "Name": "Fixed Extension Length",
          "DataType": "Number",
          "IsOptional": false
        },
        {
          "Name": "Suppress Extension 1",
          "DataType": "Boolean",
          "IsOptional": false
        },
        {
          "Name": "Suppress Extension 2",
          "DataType": "Boolean",
          "IsOptional": false
        },
        { "Name": "Baseline Spacing", "DataType": "Number", "IsOptional": false },
        { "Name": "Centermark Size", "DataType": "Number", "IsOptional": false },
        { "Name": "Centermark Type", "DataType": "Integer", "IsOptional": false },
        { "Name": "Decimal Separator", "DataType": "Text", "IsOptional": false }
      ]
    },
    {
      "Name": "Plane | Plane",
      "Description": "Solve the intersection event of two planes.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Plane A", "DataType": "Plane", "IsOptional": false },
        { "Name": "Plane B", "DataType": "Plane", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Line", "DataType": "Line", "IsOptional": false }]
    },
    {
      "Name": "Scale NU",
      "Description": "Scale an object with non-uniform factors.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": true },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Scale X", "DataType": "Number", "IsOptional": false },
        { "Name": "Scale Y", "DataType": "Number", "IsOptional": false },
        { "Name": "Scale Z", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Curve To Polyline",
      "Description": "Convert a curve to a polyline.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        {
          "Name": "Tolerance (distance)",
          "DataType": "Number",
          "IsOptional": false
        },
        {
          "Name": "Tolerance (angle)",
          "DataType": "Number",
          "IsOptional": false
        },
        { "Name": "MinEdge", "DataType": "Number", "IsOptional": true },
        { "Name": "MaxEdge", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Polyline", "DataType": "Curve", "IsOptional": false },
        { "Name": "Segments", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Rectangular Light",
      "Description": "Rectangular Light",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Rectangular Light", "DataType": "Light", "IsOptional": true },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": true },
        { "Name": "Length", "DataType": "Number", "IsOptional": true },
        { "Name": "Width", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Rectangular Light", "DataType": "Light", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false },
        { "Name": "Width", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Colour Gradient",
      "Description": "Colour Gradient",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Gradient", "DataType": "Colour Gradient", "IsOptional": true },
        { "Name": "Start Point", "DataType": "Point", "IsOptional": true },
        { "Name": "End Point", "DataType": "Point", "IsOptional": true },
        { "Name": "Repeat", "DataType": "Number", "IsOptional": true },
        { "Name": "Type", "DataType": "Integer", "IsOptional": true },
        { "Name": "Colours", "DataType": "Colour Stop", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Gradient",
          "DataType": "Colour Gradient",
          "IsOptional": false
        },
        { "Name": "Start Point", "DataType": "Point", "IsOptional": false },
        { "Name": "End Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Repeat", "DataType": "Number", "IsOptional": false },
        { "Name": "Type", "DataType": "Integer", "IsOptional": false },
        { "Name": "Colours", "DataType": "Colour Stop", "IsOptional": false }
      ]
    },
    {
      "Name": "Sun",
      "Description": "Sun from Earth anchor point and date/time.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Sun", "DataType": "Data", "IsOptional": true },
        { "Name": "Enabled", "DataType": "Boolean", "IsOptional": true },
        { "Name": "Intensity", "DataType": "Number", "IsOptional": true },
        { "Name": "Date Time", "DataType": "Time", "IsOptional": true },
        { "Name": "Latitude", "DataType": "Number", "IsOptional": true },
        { "Name": "Longitude", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Sun", "DataType": "Data", "IsOptional": false },
        { "Name": "Enabled", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Intensity", "DataType": "Number", "IsOptional": false },
        { "Name": "Date Time", "DataType": "Time", "IsOptional": false },
        { "Name": "Latitude", "DataType": "Number", "IsOptional": true },
        { "Name": "Longitude", "DataType": "Number", "IsOptional": true }
      ]
    },
    {
      "Name": "Stretch",
      "Description": "Deforms objects by stretching them along a finite axis.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Axis", "DataType": "Line", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false },
        { "Name": "Rigid", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false }
      ]
    },
    {
      "Name": "Vector Display",
      "Description": "Preview vectors in the viewport",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Anchor", "DataType": "Point", "IsOptional": true },
        { "Name": "Vector", "DataType": "Vector", "IsOptional": true }
      ],
      "Outputs": []
    },
    {
      "Name": "Box 2Pt",
      "Description": "Create a box defined by two points.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point A", "DataType": "Point", "IsOptional": false },
        { "Name": "Point B", "DataType": "Point", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Box", "DataType": "Box", "IsOptional": false }]
    },
    {
      "Name": "Cross Product",
      "Description": "Compute vector cross product.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Vector A", "DataType": "Vector", "IsOptional": false },
        { "Name": "Vector B", "DataType": "Vector", "IsOptional": false },
        { "Name": "Unitize", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Vector", "DataType": "Vector", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Random",
      "Description": "Generate a list of pseudo random numbers.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Range", "DataType": "Domain", "IsOptional": false },
        { "Name": "Number", "DataType": "Integer", "IsOptional": false },
        { "Name": "Seed", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Random", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Shatter",
      "Description": "Shatter a curve into segments.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Parameters", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Segments", "DataType": "Curve", "IsOptional": false }
      ]
    },
    {
      "Name": "Interpolate",
      "Description": "Create an interpolated curve through a set of points.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Vertices", "DataType": "Point", "IsOptional": false },
        { "Name": "Degree", "DataType": "Integer", "IsOptional": false },
        { "Name": "Periodic", "DataType": "Boolean", "IsOptional": false },
        { "Name": "KnotStyle", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false },
        { "Name": "Domain", "DataType": "Domain", "IsOptional": false }
      ]
    },
    {
      "Name": "Mesh Edges",
      "Description": "Get all the edges of a mesh",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }],
      "Outputs": [
        { "Name": "Naked Edges", "DataType": "Line", "IsOptional": false },
        { "Name": "Interior Edges", "DataType": "Line", "IsOptional": false },
        { "Name": "Non-Manifold Edges", "DataType": "Line", "IsOptional": false }
      ]
    },
    {
      "Name": "Shape In Brep",
      "Description": "Tests whether a shape is inside a brep",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Brep", "DataType": "Brep", "IsOptional": false },
        { "Name": "Shape", "DataType": "Geometry", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Relation", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Box Slits",
      "Description": "Add slits to a collection of intersecting boxes",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Boxes", "DataType": "Box", "IsOptional": false },
        { "Name": "Gap", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Breps", "DataType": "Brep", "IsOptional": false },
        { "Name": "Topology", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Shift Paths",
      "Description": "Shift the indices in all data tree paths",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Data", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Offset", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Data", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Annotation Dot",
      "Description": "Annotation Dot",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Annotation Dot", "DataType": "Text Dot", "IsOptional": true },
        { "Name": "Location", "DataType": "Point", "IsOptional": true },
        { "Name": "Primary Text", "DataType": "Text", "IsOptional": true },
        { "Name": "Text Height", "DataType": "Integer", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Annotation Dot", "DataType": "Text Dot", "IsOptional": false },
        { "Name": "Location", "DataType": "Point", "IsOptional": false },
        { "Name": "Primary Text", "DataType": "Text", "IsOptional": false },
        { "Name": "Text Height", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Curve Closest Point",
      "Description": "Find the closest point on a curve.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Parameter", "DataType": "Number", "IsOptional": false },
        { "Name": "Distance", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Volume Moments",
      "Description": "Solve volume properties for closed breps and meshes.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Volume", "DataType": "Number", "IsOptional": true },
        { "Name": "Centroid", "DataType": "Point", "IsOptional": true },
        { "Name": "Inertia", "DataType": "Vector", "IsOptional": true },
        { "Name": "Secondary", "DataType": "Vector", "IsOptional": true },
        { "Name": "Gyration", "DataType": "Vector", "IsOptional": true }
      ]
    },
    {
      "Name": "Power of 10",
      "Description": "Raise 10 to the power of N.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Value", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Equality Filter",
      "Description": "Create a filter that determines if a value is equal to another",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Key", "DataType": "Text", "IsOptional": false },
        { "Name": "Value", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Equal", "DataType": "Predicate", "IsOptional": false },
        { "Name": "Unequal", "DataType": "Predicate", "IsOptional": false }
      ]
    },
    {
      "Name": "Annotation Units Settings",
      "Description": "Annotation Style Units Settings",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Units Settings",
          "DataType": "Units Settings",
          "IsOptional": true
        },
        {
          "Name": "Length Units Format",
          "DataType": "Integer",
          "IsOptional": true
        },
        { "Name": "Length Factor", "DataType": "Number", "IsOptional": true },
        {
          "Name": "Linear Resolution",
          "DataType": "Integer",
          "IsOptional": true
        },
        { "Name": "Roundoff", "DataType": "Number", "IsOptional": true },
        { "Name": "Prefix", "DataType": "Text", "IsOptional": true },
        { "Name": "Suffix", "DataType": "Text", "IsOptional": true },
        { "Name": "Zero Suppression", "DataType": "Integer", "IsOptional": true },
        { "Name": "Fraction Format", "DataType": "Integer", "IsOptional": true },
        {
          "Name": "Fraction Height Scale",
          "DataType": "Number",
          "IsOptional": true
        },
        {
          "Name": "Angular Units Format",
          "DataType": "Integer",
          "IsOptional": true
        },
        { "Name": "Angle Resolution", "DataType": "Integer", "IsOptional": true },
        { "Name": "Angle Roundoff", "DataType": "Number", "IsOptional": true },
        {
          "Name": "Angle Zero Suppression",
          "DataType": "Integer",
          "IsOptional": true
        }
      ],
      "Outputs": [
        {
          "Name": "Units Settings",
          "DataType": "Units Settings",
          "IsOptional": false
        },
        {
          "Name": "Length Units Format",
          "DataType": "Integer",
          "IsOptional": false
        },
        { "Name": "Length Factor", "DataType": "Number", "IsOptional": false },
        {
          "Name": "Linear Resolution",
          "DataType": "Integer",
          "IsOptional": false
        },
        { "Name": "Roundoff", "DataType": "Number", "IsOptional": false },
        { "Name": "Prefix", "DataType": "Text", "IsOptional": false },
        { "Name": "Suffix", "DataType": "Text", "IsOptional": false },
        {
          "Name": "Zero Suppression",
          "DataType": "Integer",
          "IsOptional": false
        },
        { "Name": "Fraction Format", "DataType": "Integer", "IsOptional": false },
        {
          "Name": "Fraction Height Scale",
          "DataType": "Number",
          "IsOptional": false
        },
        {
          "Name": "Angular Units Format",
          "DataType": "Integer",
          "IsOptional": false
        },
        {
          "Name": "Angle Resolution",
          "DataType": "Integer",
          "IsOptional": false
        },
        { "Name": "Angle Roundoff", "DataType": "Number", "IsOptional": false },
        {
          "Name": "Angle Zero Suppression",
          "DataType": "Integer",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "Fillet",
      "Description": "Fillet the sharp corners of a curve.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Curve", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Remap Numbers",
      "Description": "Remap numbers into a new numeric domain",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Value", "DataType": "Number", "IsOptional": false },
        { "Name": "Source", "DataType": "Domain", "IsOptional": false },
        { "Name": "Target", "DataType": "Domain", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Mapped", "DataType": "Number", "IsOptional": false },
        { "Name": "Clipped", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Trim with Region",
      "Description": "Trim a curve with a region.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Region", "DataType": "Curve", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Inside", "DataType": "Curve", "IsOptional": false },
        { "Name": "Outside", "DataType": "Curve", "IsOptional": false }
      ]
    },
    {
      "Name": "Bezier Span",
      "Description": "Construct a bezier span from endpoints and tangents.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Start point", "DataType": "Point", "IsOptional": false },
        { "Name": "Start tangent", "DataType": "Vector", "IsOptional": false },
        { "Name": "End point", "DataType": "Point", "IsOptional": false },
        { "Name": "End tangent", "DataType": "Vector", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false },
        { "Name": "Domain", "DataType": "Domain", "IsOptional": false }
      ]
    },
    {
      "Name": "Larger Than",
      "Description": "Larger than (or equal to)",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "First Number", "DataType": "Number", "IsOptional": false },
        { "Name": "Second Number", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Larger than", "DataType": "Boolean", "IsOptional": false },
        { "Name": "… or Equal to", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Divide",
      "Description": "Perform vector-scalar division.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Vector", "DataType": "Vector", "IsOptional": false },
        { "Name": "Factor", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Vector", "DataType": "Vector", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Combine Date & Time",
      "Description": "Combine a pure date and a pure time into a single date",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Date", "DataType": "Time", "IsOptional": false },
        { "Name": "Time", "DataType": "Time", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Result", "DataType": "Time", "IsOptional": false }]
    },
    {
      "Name": "Import 3DM",
      "Description": "Import geometry into a RhinoDoc",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "File", "DataType": "Text", "IsOptional": false },
        { "Name": "Layer", "DataType": "Text", "IsOptional": false },
        { "Name": "Name", "DataType": "Text", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false }
      ]
    },
    {
      "Name": "Closed",
      "Description": "Test if a curve is closed or periodic.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Curve", "DataType": "Curve", "IsOptional": false }],
      "Outputs": [
        { "Name": "Closed", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Periodic", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Sift Pattern",
      "Description": "Sift elements in a list using a repeating index pattern.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "List", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Sift Pattern", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Output 0", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Output 1", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Mesh Split Plane",
      "Description": "Split a mesh with an infinite plane.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Above", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Below", "DataType": "Mesh", "IsOptional": false }
      ]
    },
    {
      "Name": "Spatial Deform (custom)",
      "Description": "Perform spatial deformation based on custom space syntax.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Syntax", "DataType": "Point", "IsOptional": false },
        { "Name": "Forces", "DataType": "Vector", "IsOptional": false },
        { "Name": "Falloff", "DataType": "Text", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false }
      ]
    },
    {
      "Name": "Surface Frames",
      "Description": "Generate a grid of {uv} frames on a surface",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false },
        { "Name": "U Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "V Count", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Frames", "DataType": "Plane", "IsOptional": false },
        { "Name": "Parameters", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Make2D Perspective View",
      "Description": "Define a perspective view for a Make2D solution",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Camera", "DataType": "Point", "IsOptional": false },
        { "Name": "Frame", "DataType": "Rectangle", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "View", "DataType": "View", "IsOptional": false }]
    },
    {
      "Name": "Less Than Filter",
      "Description": "Create a filter that determines if a value is less than another",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Key", "DataType": "Text", "IsOptional": false },
        { "Name": "Value", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Less Than", "DataType": "Predicate", "IsOptional": false },
        { "Name": "… or Equal", "DataType": "Predicate", "IsOptional": false }
      ]
    },
    {
      "Name": "Weighted Average",
      "Description": "Solve the arithmetic weighted average for a set of items",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Input", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Weights", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        {
          "Name": "Arithmetic mean",
          "DataType": "Generic Data",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "Plane Fit",
      "Description": "Fit a plane through a set of points.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Points", "DataType": "Point", "IsOptional": false }],
      "Outputs": [
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Deviation", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Timeline",
      "Description": "A timeline of values",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "A", "DataType": "Domain", "IsOptional": false }],
      "Outputs": [
        { "Name": "Value A", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Fit Loft",
      "Description": "Create a loft fitted through a set of curves.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curves", "DataType": "Curve", "IsOptional": false },
        { "Name": "Count U", "DataType": "Integer", "IsOptional": false },
        { "Name": "Degree U", "DataType": "Integer", "IsOptional": false },
        { "Name": "Degree V", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false }
      ]
    },
    {
      "Name": "Split ARGB",
      "Description": "Split a colour into floating point {ARGB} channels.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Colour", "DataType": "Colour", "IsOptional": false }],
      "Outputs": [
        { "Name": "Alpha", "DataType": "Number", "IsOptional": false },
        { "Name": "Red", "DataType": "Number", "IsOptional": false },
        { "Name": "Green", "DataType": "Number", "IsOptional": false },
        { "Name": "Blue", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Evaluate Surface",
      "Description": "Evaluate local surface properties at a {uv} coordinate.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false },
        { "Name": "Point", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Normal", "DataType": "Vector", "IsOptional": false },
        { "Name": "U direction", "DataType": "Vector", "IsOptional": false },
        { "Name": "V direction", "DataType": "Vector", "IsOptional": false },
        { "Name": "Frame", "DataType": "Plane", "IsOptional": false }
      ]
    },
    {
      "Name": "Construct Point",
      "Description": "Construct a point from {xyz} coordinates.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "X coordinate", "DataType": "Number", "IsOptional": false },
        { "Name": "Y coordinate", "DataType": "Number", "IsOptional": false },
        { "Name": "Z coordinate", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Point", "DataType": "Point", "IsOptional": false }]
    },
    {
      "Name": "Edge Surface",
      "Description": "Create a surface from two, three or four edge curves.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve A", "DataType": "Curve", "IsOptional": false },
        { "Name": "Curve B", "DataType": "Curve", "IsOptional": false },
        { "Name": "Curve C", "DataType": "Curve", "IsOptional": true },
        { "Name": "Curve D", "DataType": "Curve", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Surface", "DataType": "Brep", "IsOptional": false }]
    },
    {
      "Name": "Quad Sphere",
      "Description": "Create a spherical brep made from quad nurbs patches.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Base", "DataType": "Plane", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Sphere", "DataType": "Brep", "IsOptional": false }]
    },
    {
      "Name": "Cross Reference",
      "Description": "Cross Reference data from multiple lists",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "List (A)", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "List (B)", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "List (A)", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "List (B)", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Orthocentre",
      "Description": "Generate the triangle orthocentre from altitudes.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point A", "DataType": "Point", "IsOptional": false },
        { "Name": "Point B", "DataType": "Point", "IsOptional": false },
        { "Name": "Point C", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Orthocentre", "DataType": "Point", "IsOptional": false },
        { "Name": "Altitude AB", "DataType": "Line", "IsOptional": false },
        { "Name": "Altitude BC", "DataType": "Line", "IsOptional": false },
        { "Name": "Altitude CA", "DataType": "Line", "IsOptional": false }
      ]
    },
    {
      "Name": "Extremes",
      "Description": "Find the extremes in a list of values",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "A", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "B", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Mininum", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Maximum", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Match Text",
      "Description": "Match a text against a pattern",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Text", "DataType": "Text", "IsOptional": false },
        { "Name": "Pattern", "DataType": "Text", "IsOptional": true },
        { "Name": "RegEx", "DataType": "Text", "IsOptional": true },
        { "Name": "Case", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Match", "DataType": "Boolean", "IsOptional": false }]
    },
    {
      "Name": "Orient",
      "Description": "Orient an object. Orientation is sometimes called a 'ChangeBasis tranformation'. It allows for remapping of geometry from one axis-system to another.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": true },
        { "Name": "Source", "DataType": "Plane", "IsOptional": false },
        { "Name": "Target", "DataType": "Plane", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Import PDB",
      "Description": "Import data from Protein Data Bank *.pdb files.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "File", "DataType": "Text", "IsOptional": false }],
      "Outputs": [
        { "Name": "Atoms", "DataType": "Atom", "IsOptional": false },
        { "Name": "Bonds", "DataType": "Line", "IsOptional": false }
      ]
    },
    {
      "Name": "Date Range",
      "Description": "Create a range of successive dates or times",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Time A", "DataType": "Time", "IsOptional": false },
        { "Name": "Time B", "DataType": "Time", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Range", "DataType": "Time", "IsOptional": false }]
    },
    {
      "Name": "Extrude Along",
      "Description": "Extrude curves and surfaces along a curve.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Base", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Extrusion", "DataType": "Brep", "IsOptional": false }
      ]
    },
    {
      "Name": "Deconstruct Material",
      "Description": "Deconstruct a display material (ie. shader) into its various attributes",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Material", "DataType": "Shader", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Diffuse", "DataType": "Colour", "IsOptional": false },
        { "Name": "Specular", "DataType": "Colour", "IsOptional": false },
        { "Name": "Emission", "DataType": "Colour", "IsOptional": false },
        { "Name": "Transparency", "DataType": "Number", "IsOptional": false },
        { "Name": "Shine", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Plane Offset",
      "Description": "Offset a plane.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Base Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Offset", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Plane", "DataType": "Plane", "IsOptional": false }]
    },
    {
      "Name": "Tree Branch",
      "Description": "Retrieve a specific branch from a data tree.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Tree", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Path", "DataType": "Path", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Branch", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Deconstruct Matrix",
      "Description": "Deconstruct a matrix into its component parts",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Matrix", "DataType": "Matrix", "IsOptional": false }],
      "Outputs": [
        { "Name": "Rows", "DataType": "Integer", "IsOptional": false },
        { "Name": "Columns", "DataType": "Integer", "IsOptional": false },
        { "Name": "Values", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Rotate Axis",
      "Description": "Rotate an object around an axis.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": true },
        { "Name": "Angle", "DataType": "Number", "IsOptional": false },
        { "Name": "Axis", "DataType": "Line", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Contour",
      "Description": "Create a set of Brep or Mesh contours",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Shape", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Direction", "DataType": "Vector", "IsOptional": false },
        { "Name": "Distance", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Contours", "DataType": "Curve", "IsOptional": false }
      ]
    },
    {
      "Name": "Mesh | Plane",
      "Description": "Solve intersection events for a Mesh and a Plane (otherwise known as section).",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Curves", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Text Tag",
      "Description": "Represents a list of text tags in a Rhino viewport",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Location", "DataType": "Point", "IsOptional": false },
        { "Name": "Text", "DataType": "Text", "IsOptional": false },
        { "Name": "Colour", "DataType": "Colour", "IsOptional": true }
      ],
      "Outputs": []
    },
    {
      "Name": "Model Hatch",
      "Description": "Model Hatch",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Hatch", "DataType": "Hatch", "IsOptional": true },
        { "Name": "Boundary", "DataType": "Surface", "IsOptional": true },
        {
          "Name": "Hatch Pattern",
          "DataType": "Model Hatch Pattern",
          "IsOptional": true
        },
        { "Name": "Base Point", "DataType": "Point", "IsOptional": true },
        { "Name": "Rotation", "DataType": "Number", "IsOptional": true },
        { "Name": "Scale", "DataType": "Number", "IsOptional": true },
        { "Name": "Show Boundary", "DataType": "Boolean", "IsOptional": true },
        { "Name": "Background", "DataType": "Colour", "IsOptional": true },
        {
          "Name": "Fill Style",
          "DataType": "Colour Gradient",
          "IsOptional": true
        }
      ],
      "Outputs": [
        { "Name": "Hatch", "DataType": "Hatch", "IsOptional": false },
        { "Name": "Boundary", "DataType": "Curve", "IsOptional": false },
        {
          "Name": "Hatch Pattern",
          "DataType": "Model Hatch Pattern",
          "IsOptional": false
        },
        { "Name": "Base Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Rotation", "DataType": "Number", "IsOptional": false },
        { "Name": "Scale", "DataType": "Number", "IsOptional": false },
        { "Name": "Show Boundary", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Background", "DataType": "Colour", "IsOptional": false },
        {
          "Name": "Fill Style",
          "DataType": "Colour Gradient",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "Merge",
      "Description": "Merge a bunch of data streams",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Data 1", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Data 2", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Deconstruct Plane",
      "Description": "Deconstruct a plane into its component parts.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Plane", "DataType": "Plane", "IsOptional": false }],
      "Outputs": [
        { "Name": "Origin", "DataType": "Point", "IsOptional": false },
        { "Name": "X-Axis", "DataType": "Vector", "IsOptional": false },
        { "Name": "Y-Axis", "DataType": "Vector", "IsOptional": false },
        { "Name": "Z-Axis", "DataType": "Vector", "IsOptional": false }
      ]
    },
    {
      "Name": "Annotation Tolerance Settings",
      "Description": "Annotation Style Tolerance Settings",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Tolerance Settings",
          "DataType": "Tolerance Settings",
          "IsOptional": true
        },
        { "Name": "Tolerance Format", "DataType": "Integer", "IsOptional": true },
        {
          "Name": "Tolerance Resolution",
          "DataType": "Integer",
          "IsOptional": true
        },
        {
          "Name": "Alt. Tolerance Resolution",
          "DataType": "Integer",
          "IsOptional": true
        },
        {
          "Name": "Tolerance Upper Value",
          "DataType": "Number",
          "IsOptional": true
        },
        {
          "Name": "Tolerance Lower Value",
          "DataType": "Number",
          "IsOptional": true
        },
        {
          "Name": "Tolerance Height Scale",
          "DataType": "Number",
          "IsOptional": true
        }
      ],
      "Outputs": [
        {
          "Name": "Tolerance Settings",
          "DataType": "Tolerance Settings",
          "IsOptional": false
        },
        {
          "Name": "Tolerance Format",
          "DataType": "Integer",
          "IsOptional": false
        },
        {
          "Name": "Tolerance Resolution",
          "DataType": "Integer",
          "IsOptional": false
        },
        {
          "Name": "Alt. Tolerance Resolution",
          "DataType": "Integer",
          "IsOptional": false
        },
        {
          "Name": "Tolerance Upper Value",
          "DataType": "Number",
          "IsOptional": false
        },
        {
          "Name": "Tolerance Lower Value",
          "DataType": "Number",
          "IsOptional": false
        },
        {
          "Name": "Tolerance Height Scale",
          "DataType": "Number",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "User Text",
      "Description": "Modify the key/value pair text collection of a model element.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Content", "DataType": "Data", "IsOptional": false },
        { "Name": "Keys", "DataType": "Text", "IsOptional": true },
        { "Name": "Values", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Content", "DataType": "Data", "IsOptional": false },
        { "Name": "Keys", "DataType": "Text", "IsOptional": false },
        { "Name": "Values", "DataType": "Text", "IsOptional": false }
      ]
    },
    {
      "Name": "Aligned Dimension",
      "Description": "Create a distance annotation between two points",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Point A", "DataType": "Point", "IsOptional": false },
        { "Name": "Point B", "DataType": "Point", "IsOptional": false },
        { "Name": "Offset", "DataType": "Number", "IsOptional": false },
        { "Name": "Text", "DataType": "Text", "IsOptional": false },
        { "Name": "Size", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": []
    },
    {
      "Name": "Rotate 3D",
      "Description": "Rotate an object around a center point and an axis vector.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": true },
        { "Name": "Angle", "DataType": "Number", "IsOptional": false },
        { "Name": "Center", "DataType": "Point", "IsOptional": false },
        { "Name": "Axis", "DataType": "Vector", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Contour (ex)",
      "Description": "Create a set of Curve contours",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Offsets", "DataType": "Number", "IsOptional": true },
        { "Name": "Distances", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Contours", "DataType": "Point", "IsOptional": false },
        { "Name": "Parameters", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Trim with Brep",
      "Description": "Trim a curve with a Brep.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Brep", "DataType": "Brep", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Inside", "DataType": "Curve", "IsOptional": false },
        { "Name": "Outside", "DataType": "Curve", "IsOptional": false }
      ]
    },
    {
      "Name": "Drafting Attributes",
      "Description": "Object drafting attributes",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Drafting",
          "DataType": "Drafting Attributes",
          "IsOptional": true
        },
        { "Name": "Linetype", "DataType": "Linetype", "IsOptional": true },
        { "Name": "Linetype Scale", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Drafting",
          "DataType": "Drafting Attributes",
          "IsOptional": false
        },
        { "Name": "Linetype", "DataType": "Linetype", "IsOptional": false },
        { "Name": "Linetype Scale", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Hatch Line",
      "Description": "Hatch Line",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Hatch Line", "DataType": "Hatch Line", "IsOptional": true },
        { "Name": "Start", "DataType": "Point", "IsOptional": true },
        { "Name": "Direction", "DataType": "Vector", "IsOptional": true },
        { "Name": "Shift", "DataType": "Number", "IsOptional": true },
        { "Name": "Offset", "DataType": "Number", "IsOptional": true },
        { "Name": "Segments", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Hatch Line", "DataType": "Hatch Line", "IsOptional": false },
        { "Name": "Start", "DataType": "Point", "IsOptional": false },
        { "Name": "Direction", "DataType": "Vector", "IsOptional": false },
        { "Name": "Shift", "DataType": "Number", "IsOptional": false },
        { "Name": "Offset", "DataType": "Number", "IsOptional": false },
        { "Name": "Segments", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Query Model Objects",
      "Description": "Query a Rhino document for all available rhino objects",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Name", "DataType": "Text Pattern", "IsOptional": true },
        { "Name": "Layer", "DataType": "Text Pattern", "IsOptional": true },
        { "Name": "Group", "DataType": "Text Pattern", "IsOptional": true },
        { "Name": "Locked", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Hidden", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Objects", "DataType": "Model Object", "IsOptional": false }
      ]
    },
    {
      "Name": "Swing Arc",
      "Description": "Create a polycurve consisting of arcs defined by center points.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Centers", "DataType": "Point", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": true },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Curve A", "DataType": "Curve", "IsOptional": false },
        { "Name": "Curve B", "DataType": "Curve", "IsOptional": false },
        { "Name": "Circles", "DataType": "Circle", "IsOptional": false }
      ]
    },
    {
      "Name": "Triangulate",
      "Description": "Triangulate all quads in a mesh",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }],
      "Outputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Make2D Parallel View",
      "Description": "Define a parallel view for a Make2D solution",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Projection", "DataType": "Rectangle", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "View", "DataType": "View", "IsOptional": false }]
    },
    {
      "Name": "Member Index",
      "Description": "Find the occurences of a specific member in a set.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Set", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Member", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Index", "DataType": "Integer", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Similarity",
      "Description": "Test for similarity of two numbers",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "First Number", "DataType": "Number", "IsOptional": false },
        { "Name": "Second Number", "DataType": "Number", "IsOptional": false },
        { "Name": "Threshold", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Similarity", "DataType": "Boolean", "IsOptional": false },
        {
          "Name": "Absolute difference",
          "DataType": "Number",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "Principal Curvature",
      "Description": "Evaluate the principal curvature of a surface at a {uv} coordinate.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false },
        { "Name": "Point", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Frame", "DataType": "Plane", "IsOptional": false },
        { "Name": "Maximum", "DataType": "Number", "IsOptional": false },
        { "Name": "Minimum", "DataType": "Number", "IsOptional": false },
        { "Name": "Max direction", "DataType": "Vector", "IsOptional": false },
        { "Name": "Min direction", "DataType": "Vector", "IsOptional": false }
      ]
    },
    {
      "Name": "Camera Obscura",
      "Description": "Camera Obscura (point mirror) transformation.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": true },
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Factor", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Interpolate Date",
      "Description": "Interpolate between two dates or times.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Date A", "DataType": "Time", "IsOptional": false },
        { "Name": "Date B", "DataType": "Time", "IsOptional": false },
        { "Name": "Interpolation", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Date", "DataType": "Time", "IsOptional": false }]
    },
    {
      "Name": "Model Linetype",
      "Description": "Model Linetype",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Model Linetype",
          "DataType": "Model Linetype",
          "IsOptional": true
        },
        { "Name": "Name", "DataType": "Text", "IsOptional": true },
        { "Name": "Segments", "DataType": "Number", "IsOptional": true },
        { "Name": "Cap Style", "DataType": "Integer", "IsOptional": true },
        { "Name": "Join Style", "DataType": "Integer", "IsOptional": true },
        { "Name": "Width", "DataType": "Number", "IsOptional": true },
        { "Name": "Width Units", "DataType": "Unit System", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Model Linetype",
          "DataType": "Model Linetype",
          "IsOptional": false
        },
        { "Name": "Name", "DataType": "Text", "IsOptional": false },
        { "Name": "Segments", "DataType": "Number", "IsOptional": false },
        { "Name": "Cap Style", "DataType": "Integer", "IsOptional": false },
        { "Name": "Join Style", "DataType": "Integer", "IsOptional": false },
        { "Name": "Width", "DataType": "Number", "IsOptional": true },
        { "Name": "Width Units", "DataType": "Unit System", "IsOptional": false }
      ]
    },
    {
      "Name": "Centermark",
      "Description": "Centermark",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Centermark",
          "DataType": "Radial Centermark",
          "IsOptional": true
        },
        { "Name": "Curve", "DataType": "Curve", "IsOptional": true },
        { "Name": "Parameter", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Centermark",
          "DataType": "Radial Centermark",
          "IsOptional": false
        },
        { "Name": "Center Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Surface Curvature",
      "Description": "Evaluate the surface curvature at a {uv} coordinate.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false },
        { "Name": "Point", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Frame", "DataType": "Plane", "IsOptional": false },
        { "Name": "Gaussian", "DataType": "Number", "IsOptional": false },
        { "Name": "Mean", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Substrate",
      "Description": "Substrate algorithm inspired by Jared Tarbell (Complexification.net)",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Border", "DataType": "Rectangle", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "Angles", "DataType": "Number", "IsOptional": false },
        { "Name": "Deviation", "DataType": "Number", "IsOptional": false },
        { "Name": "Seed", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Substrate", "DataType": "Line", "IsOptional": false }
      ]
    },
    {
      "Name": "Object Linetype",
      "Description": "Object linetype attributes",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Linetype", "DataType": "Linetype", "IsOptional": true },
        { "Name": "Source", "DataType": "Integer", "IsOptional": true },
        {
          "Name": "Model Linetype",
          "DataType": "Model Linetype",
          "IsOptional": true
        }
      ],
      "Outputs": [
        { "Name": "Linetype", "DataType": "Linetype", "IsOptional": false },
        { "Name": "Source", "DataType": "Integer", "IsOptional": false },
        {
          "Name": "Model Linetype",
          "DataType": "Model Linetype",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "Flip Matrix",
      "Description": "Flip a matrix-like data tree by swapping rows and columns.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Data", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Data", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Control Points",
      "Description": "Extract the nurbs control points and knots of a curve.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Curve", "DataType": "Curve", "IsOptional": false }],
      "Outputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Weights", "DataType": "Number", "IsOptional": false },
        { "Name": "Knots", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Sub Curve",
      "Description": "Construct a curve from the sub-domain of a base curve.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Base curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Domain", "DataType": "Domain", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Curve", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Seam",
      "Description": "Adjust the seam of a closed curve.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Seam", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Curve", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Modulus",
      "Description": "Divides two numbers and returns only the remainder.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "A", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "B", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Plane Surface",
      "Description": "Create a plane surface",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "X Size", "DataType": "Domain", "IsOptional": false },
        { "Name": "Y Size", "DataType": "Domain", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Plane", "DataType": "Surface", "IsOptional": false }]
    },
    {
      "Name": "Dot Product",
      "Description": "Compute vector dot product.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Vector A", "DataType": "Vector", "IsOptional": false },
        { "Name": "Vector B", "DataType": "Vector", "IsOptional": false },
        { "Name": "Unitize", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Dot product", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Clash",
      "Description": "Perform clash analysis on a set of shapes.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "First Set", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Second Set", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Distance", "DataType": "Number", "IsOptional": false },
        { "Name": "Result Limit", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Clash Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "Clash Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Clash Radii", "DataType": "Number", "IsOptional": false },
        { "Name": "First Index", "DataType": "Integer", "IsOptional": false },
        { "Name": "Second index", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Closest Points",
      "Description": "Find closest points in a point collection.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Cloud", "DataType": "Point", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Closest Point", "DataType": "Point", "IsOptional": false },
        { "Name": "CP Index", "DataType": "Integer", "IsOptional": false },
        { "Name": "Distance", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Random Reduce",
      "Description": "Randomly remove N items from a list",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "List", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Reduction", "DataType": "Integer", "IsOptional": false },
        { "Name": "Seed", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "List", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Proximity 2D",
      "Description": "Search for two-dimensional proximity within a point list",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Group", "DataType": "Integer", "IsOptional": false },
        { "Name": "Min Radius", "DataType": "Number", "IsOptional": true },
        { "Name": "Max Radius", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Links", "DataType": "Line", "IsOptional": false },
        { "Name": "Topology", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Loft Options",
      "Description": "Create loft options from atomic inputs",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Closed", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Adjust", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Rebuild", "DataType": "Integer", "IsOptional": false },
        { "Name": "Refit", "DataType": "Number", "IsOptional": false },
        { "Name": "Type", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Options", "DataType": "Loft Options", "IsOptional": false }
      ]
    },
    {
      "Name": "Match Tree",
      "Description": "Match one data tree with another.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Tree", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Guide", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Tree", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Ellipse",
      "Description": "Create an ellipse defined by base plane and two radii.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Radius 1", "DataType": "Number", "IsOptional": false },
        { "Name": "Radius 2", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Ellipse", "DataType": "Curve", "IsOptional": false },
        { "Name": "Focus 1", "DataType": "Point", "IsOptional": false },
        { "Name": "Focus 2", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Region Intersection",
      "Description": "Intersection between two sets of planar closed curves (regions)",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curves A", "DataType": "Curve", "IsOptional": false },
        { "Name": "Curves B", "DataType": "Curve", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Result", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Unweld Mesh",
      "Description": "Unweld (split) creases in a mesh",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Angle", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Result", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Circle 3Pt",
      "Description": "Create a circle defined by three points.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point A", "DataType": "Point", "IsOptional": false },
        { "Name": "Point B", "DataType": "Point", "IsOptional": false },
        { "Name": "Point C", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Circle", "DataType": "Circle", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Deconstruct Domain²",
      "Description": "Deconstruct a two-dimensional domain into four numbers",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Domain", "DataType": "Domain²", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "U min", "DataType": "Number", "IsOptional": false },
        { "Name": "U max", "DataType": "Number", "IsOptional": false },
        { "Name": "V min", "DataType": "Number", "IsOptional": false },
        { "Name": "V max", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Flip Mesh",
      "Description": "Flip the normal vectors of a mesh",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Vertex Normals", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Face Normals", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Face Orientation", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Result", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Merge 03",
      "Description": "Merge three streams into one.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Stream A", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream B", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream C", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Stream", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Logical Or Filter",
      "Description": "Combine two filters together using a logical OR operator.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Filter A", "DataType": "Predicate", "IsOptional": false },
        { "Name": "Filter B", "DataType": "Predicate", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Filter", "DataType": "Predicate", "IsOptional": false }
      ]
    },
    {
      "Name": "Blur Mesh",
      "Description": "Blur the colours on a mesh",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Iterations", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Duplicate Content",
      "Description": "Duplicates input content with a new identity.\r\nClears the current content Id and optionally lets you set a new parent and name.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Content", "DataType": "Data", "IsOptional": false },
        { "Name": "Name", "DataType": "Text", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Content", "DataType": "Data", "IsOptional": false }]
    },
    {
      "Name": "ArcCosine",
      "Description": "Compute the angle whose cosine is the specified value.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Value", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Colour RGB",
      "Description": "Create a colour from {RGB} channels.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Alpha", "DataType": "Integer", "IsOptional": false },
        { "Name": "Red", "DataType": "Integer", "IsOptional": false },
        { "Name": "Green", "DataType": "Integer", "IsOptional": false },
        { "Name": "Blue", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Colour", "DataType": "Colour", "IsOptional": false }]
    },
    {
      "Name": "Settings (Custom)",
      "Description": "Represents custom mesh settings.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Stitch Seams", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Simple Planes", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Refine", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Min Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "Max Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "Aspect Ratio", "DataType": "Number", "IsOptional": false },
        { "Name": "Max Distance", "DataType": "Number", "IsOptional": false },
        { "Name": "Max Angle", "DataType": "Number", "IsOptional": false },
        { "Name": "Min Edge", "DataType": "Number", "IsOptional": false },
        { "Name": "Max Edge", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Settings", "DataType": "MeshParameters", "IsOptional": false }
      ]
    },
    {
      "Name": "Surface Closest Point",
      "Description": "Find the closest point on a surface.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "UV Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Distance", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Make2D Rhino View",
      "Description": "Import a Rhino view for a Make2D solution",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Name", "DataType": "Text", "IsOptional": false },
        { "Name": "Clip", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "View", "DataType": "View", "IsOptional": false }]
    },
    {
      "Name": "Surface From Points",
      "Description": "Create a nurbs surface from a grid of points.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "U Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "Interpolate", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false }
      ]
    },
    {
      "Name": "Spin Force",
      "Description": "Create a field due to a spin force",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Strength", "DataType": "Number", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false },
        { "Name": "Decay", "DataType": "Number", "IsOptional": false },
        { "Name": "Bounds", "DataType": "Box", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Field", "DataType": "Field", "IsOptional": false }]
    },
    {
      "Name": "Fillet Edge",
      "Description": "Fillet some edges of a brep.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Shape", "DataType": "Brep", "IsOptional": false },
        { "Name": "Blend", "DataType": "Integer", "IsOptional": false },
        { "Name": "Metric", "DataType": "Integer", "IsOptional": false },
        { "Name": "Edges", "DataType": "Integer", "IsOptional": true },
        { "Name": "Radii", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Result", "DataType": "Brep", "IsOptional": false }]
    },
    {
      "Name": "Mesh Join",
      "Description": "Join a set of meshes into a single mesh",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Meshes", "DataType": "Mesh", "IsOptional": false }],
      "Outputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Split with Brep",
      "Description": "Split a curve with a Brep.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Brep", "DataType": "Brep", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Points", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Brep Closest Point",
      "Description": "Find the closest point on a brep",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Brep", "DataType": "Brep", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Normal", "DataType": "Vector", "IsOptional": false },
        { "Name": "Distance", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Mesh | Ray",
      "Description": "Intersect a mesh with a semi-infinite ray",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Direction", "DataType": "Vector", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Hit", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Line",
      "Description": "Create a line between two points.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Start Point", "DataType": "Point", "IsOptional": false },
        { "Name": "End Point", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Line", "DataType": "Line", "IsOptional": false }]
    },
    {
      "Name": "Line SDL",
      "Description": "Create a line segment defined by start point, tangent and length.}",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Start", "DataType": "Point", "IsOptional": false },
        { "Name": "Direction", "DataType": "Vector", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Line", "DataType": "Line", "IsOptional": false }]
    },
    {
      "Name": "Import Content",
      "Description": "Import a model from file",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "File Path", "DataType": "Text", "IsOptional": false },
        { "Name": "Name", "DataType": "Text", "IsOptional": false },
        { "Name": "Layer", "DataType": "Text", "IsOptional": false },
        { "Name": "Linetype", "DataType": "Text", "IsOptional": false },
        { "Name": "Hatch Pattern", "DataType": "Text", "IsOptional": false },
        { "Name": "Annotation Styles", "DataType": "Text", "IsOptional": false },
        { "Name": "Materials", "DataType": "Text", "IsOptional": false },
        { "Name": "Block Definitions", "DataType": "Text", "IsOptional": false }
      ],
      "Outputs": [
        {
          "Name": "Model Transform",
          "DataType": "Transform",
          "IsOptional": false
        },
        { "Name": "Objects", "DataType": "Model Object", "IsOptional": false },
        { "Name": "Layers", "DataType": "Model Layer", "IsOptional": false },
        {
          "Name": "Linetypes",
          "DataType": "Model Linetype",
          "IsOptional": false
        },
        {
          "Name": "Hatch Patterns",
          "DataType": "Model Hatch Pattern",
          "IsOptional": false
        },
        {
          "Name": "Annotation Styles",
          "DataType": "Model Annotation Style",
          "IsOptional": false
        },
        {
          "Name": "Materials",
          "DataType": "Model Material",
          "IsOptional": false
        },
        {
          "Name": "Block Definitions",
          "DataType": "Model Block Definition",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "Swap Columns",
      "Description": "Swap two columns in a matrix",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Matrix", "DataType": "Matrix", "IsOptional": false },
        { "Name": "Column A", "DataType": "Integer", "IsOptional": false },
        { "Name": "Column B", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Matrix", "DataType": "Matrix", "IsOptional": false }]
    },
    {
      "Name": "SubSet",
      "Description": "Test two sets for inclusion.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Set A", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Set B", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Scale",
      "Description": "Scale an object uniformly in all directions.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": true },
        { "Name": "Center", "DataType": "Point", "IsOptional": false },
        { "Name": "Factor", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Point Deform",
      "Description": "Deform a shape by moving control-points individually",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Motion", "DataType": "Vector", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false }
      ]
    },
    {
      "Name": "Disjoint Mesh",
      "Description": "Split a mesh into disjoint pieces.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }],
      "Outputs": [{ "Name": "Meshes", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Replace Text",
      "Description": "Replace all occurences of a specific text fragment with another",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Text", "DataType": "Text", "IsOptional": false },
        { "Name": "Find", "DataType": "Text", "IsOptional": true },
        { "Name": "Replace", "DataType": "Text", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Result", "DataType": "Text", "IsOptional": false }]
    },
    {
      "Name": "Sort Points",
      "Description": "Sort points by Euclidean coordinates (first x, then y, then z)",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Points", "DataType": "Point", "IsOptional": false }],
      "Outputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Indices", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Mesh Difference",
      "Description": "Perform a solid difference on two sets of meshes",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Meshes A", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Meshes B", "DataType": "Mesh", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Result", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Sun Preview",
      "Description": "Preview a sun.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Sun", "DataType": "Data", "IsOptional": false },
        { "Name": "Origin", "DataType": "Point", "IsOptional": true },
        { "Name": "Distance", "DataType": "Number", "IsOptional": true },
        { "Name": "Scale", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": []
    },
    {
      "Name": "Intersection Filter",
      "Description": "Combine multiple filters together into an intersection which returns true only if all input filters evaluate to true.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Filters", "DataType": "Predicate", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Filter", "DataType": "Predicate", "IsOptional": false }
      ]
    },
    {
      "Name": "Surface Box",
      "Description": "Create a twisted box on a surface patch.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false },
        { "Name": "Domain", "DataType": "Domain²", "IsOptional": false },
        { "Name": "Height", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Twisted Box", "DataType": "Twisted Box", "IsOptional": false }
      ]
    },
    {
      "Name": "Shift List",
      "Description": "Offset all items in a list.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "List", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Shift", "DataType": "Integer", "IsOptional": false },
        { "Name": "Wrap", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "List", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Brep | Plane",
      "Description": "Solve intersection events for a Brep and a plane (otherwise known as section).",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Brep", "DataType": "Brep", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Curves", "DataType": "Curve", "IsOptional": false },
        { "Name": "Points", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Move To Plane",
      "Description": "Translate (move) an object onto a plane.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Above", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Below", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Linear Dimension",
      "Description": "Create a distance annotation between points, projected to a line.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Line", "DataType": "Line", "IsOptional": false },
        { "Name": "Point A", "DataType": "Point", "IsOptional": false },
        { "Name": "Point B", "DataType": "Point", "IsOptional": false },
        { "Name": "Text", "DataType": "Text", "IsOptional": false },
        { "Name": "Size", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": []
    },
    {
      "Name": "Cull Index",
      "Description": "Cull (remove) indexed elements from a list.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "List", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Indices", "DataType": "Integer", "IsOptional": false },
        { "Name": "Wrap", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "List", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Circle TanTan",
      "Description": "Create a circle tangent to two curves.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve A", "DataType": "Curve", "IsOptional": false },
        { "Name": "Curve B", "DataType": "Curve", "IsOptional": false },
        { "Name": "Point", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Circle", "DataType": "Circle", "IsOptional": false }]
    },
    {
      "Name": "Weave",
      "Description": "Weave a set of input data using a custom pattern.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Pattern", "DataType": "Integer", "IsOptional": false },
        { "Name": "Stream 0", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Stream 1", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Weave", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Divide Surface",
      "Description": "Generate a grid of {uv} points on a surface.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false },
        { "Name": "U Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "V Count", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Normals", "DataType": "Vector", "IsOptional": false },
        { "Name": "Parameters", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Line 2Plane",
      "Description": "Create a line between two planes.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Line", "DataType": "Line", "IsOptional": false },
        { "Name": "Plane A", "DataType": "Plane", "IsOptional": false },
        { "Name": "Plane B", "DataType": "Plane", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Line", "DataType": "Line", "IsOptional": false }]
    },
    {
      "Name": "Project Point",
      "Description": "Project a point onto a collection of shapes",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Direction", "DataType": "Vector", "IsOptional": false },
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Index", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Inverse Transform",
      "Description": "Invert a transformation.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Model Font",
      "Description": "Typography Font",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Font", "DataType": "Font", "IsOptional": true },
        { "Name": "Font Family", "DataType": "Text", "IsOptional": true },
        { "Name": "Font Weight", "DataType": "Integer", "IsOptional": true },
        { "Name": "Font Style", "DataType": "Integer", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Font", "DataType": "Font", "IsOptional": false },
        { "Name": "Font Family", "DataType": "Text", "IsOptional": false },
        { "Name": "Font Weight", "DataType": "Integer", "IsOptional": false },
        { "Name": "Font Style", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Print Width",
      "Description": "Object print width attributes",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Print Width", "DataType": "Print Width", "IsOptional": true },
        { "Name": "Source", "DataType": "Integer", "IsOptional": true },
        { "Name": "Width", "DataType": "Print Width", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Print Width", "DataType": "Print Width", "IsOptional": false },
        { "Name": "Source", "DataType": "Integer", "IsOptional": false },
        { "Name": "Width", "DataType": "Print Width", "IsOptional": false }
      ]
    },
    {
      "Name": "Custom Preview",
      "Description": "Allows for customized geometry previews",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Material", "DataType": "Shader", "IsOptional": false }
      ],
      "Outputs": []
    },
    {
      "Name": "Bend Deform",
      "Description": "Deform a shape by bending it",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Bending Arc", "DataType": "Arc", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false }
      ]
    },
    {
      "Name": "Greater Than Filter",
      "Description": "Create a filter that determines if a value is greater than another",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Key", "DataType": "Text", "IsOptional": false },
        { "Name": "Value", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Greater Than", "DataType": "Predicate", "IsOptional": false },
        { "Name": "… or Equal", "DataType": "Predicate", "IsOptional": false }
      ]
    },
    {
      "Name": "Query Directory",
      "Description": "Query on the file system under the specified directory path.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Directory", "DataType": "Text", "IsOptional": false },
        { "Name": "Max Depth", "DataType": "Integer", "IsOptional": true },
        { "Name": "Name", "DataType": "Text Pattern", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Directories", "DataType": "Text", "IsOptional": false },
        { "Name": "Files", "DataType": "Text", "IsOptional": false }
      ]
    },
    {
      "Name": "Gate Nor",
      "Description": "Perform boolean joint denial (NOR gate).",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "A", "DataType": "Boolean", "IsOptional": false },
        { "Name": "B", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Construct Matrix",
      "Description": "Construct a matrix from initial values",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Rows", "DataType": "Integer", "IsOptional": false },
        { "Name": "Columns", "DataType": "Integer", "IsOptional": false },
        { "Name": "Values", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Matrix", "DataType": "Matrix", "IsOptional": false }]
    },
    {
      "Name": "Integer Division",
      "Description": "Mathematical integer division",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "A", "DataType": "Integer", "IsOptional": false },
        { "Name": "B", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Scalar Display",
      "Description": "Display the scalar values of a field section",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Field", "DataType": "Field", "IsOptional": false },
        { "Name": "Section", "DataType": "Rectangle", "IsOptional": false },
        { "Name": "Samples", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Display", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Annotation Style Overrides",
      "Description": "Get-Set annotation style and overridden attributes",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Annotation", "DataType": "Geometry", "IsOptional": false },
        {
          "Name": "Style",
          "DataType": "Model Annotation Style",
          "IsOptional": true
        },
        { "Name": "Model Scale", "DataType": "Number", "IsOptional": true },
        {
          "Name": "Text Settings",
          "DataType": "Text Settings",
          "IsOptional": true
        },
        {
          "Name": "Dimension Settings",
          "DataType": "Dimension Settings",
          "IsOptional": true
        },
        {
          "Name": "Arrow Settings",
          "DataType": "Annotation Arrow Settings",
          "IsOptional": true
        },
        {
          "Name": "Units Settings",
          "DataType": "Units Settings",
          "IsOptional": true
        },
        {
          "Name": "Leader Settings",
          "DataType": "Leader Settings",
          "IsOptional": true
        },
        {
          "Name": "Tolerance Settings",
          "DataType": "Tolerance Settings",
          "IsOptional": true
        }
      ],
      "Outputs": [
        { "Name": "Annotation", "DataType": "Geometry", "IsOptional": false },
        {
          "Name": "Style",
          "DataType": "Model Annotation Style",
          "IsOptional": false
        },
        { "Name": "Model Scale", "DataType": "Number", "IsOptional": false },
        {
          "Name": "Text Settings",
          "DataType": "Text Settings",
          "IsOptional": false
        },
        {
          "Name": "Dimension Settings",
          "DataType": "Dimension Settings",
          "IsOptional": false
        },
        {
          "Name": "Arrow Settings",
          "DataType": "Annotation Arrow Settings",
          "IsOptional": false
        },
        {
          "Name": "Units Settings",
          "DataType": "Units Settings",
          "IsOptional": false
        },
        {
          "Name": "Leader Settings",
          "DataType": "Leader Settings",
          "IsOptional": false
        },
        {
          "Name": "Tolerance Settings",
          "DataType": "Tolerance Settings",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "Vector XYZ",
      "Description": "Create a vector from {xyz} components.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "X component", "DataType": "Number", "IsOptional": false },
        { "Name": "Y component", "DataType": "Number", "IsOptional": false },
        { "Name": "Z component", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Vector", "DataType": "Vector", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Closest Point",
      "Description": "Find closest point in a point collection.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Cloud", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Closest Point", "DataType": "Point", "IsOptional": false },
        { "Name": "CP Index", "DataType": "Integer", "IsOptional": false },
        { "Name": "Distance", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Solid Intersection",
      "Description": "Perform a solid intersection on two Brep sets.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Breps A", "DataType": "Brep", "IsOptional": false },
        { "Name": "Breps B", "DataType": "Brep", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Result", "DataType": "Brep", "IsOptional": false }]
    },
    {
      "Name": "Minimum",
      "Description": "Return the lesser of two items.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "A", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "B", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Rectangle 2Pt",
      "Description": "Create a rectangle from a base plane and two points",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Point A", "DataType": "Point", "IsOptional": false },
        { "Name": "Point B", "DataType": "Point", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Rectangle", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Patch",
      "Description": "Create a patch surface",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curves", "DataType": "Curve", "IsOptional": true },
        { "Name": "Points", "DataType": "Point", "IsOptional": true },
        { "Name": "Spans", "DataType": "Integer", "IsOptional": false },
        { "Name": "Flexibility", "DataType": "Number", "IsOptional": false },
        { "Name": "Trim", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Patch", "DataType": "Surface", "IsOptional": false }]
    },
    {
      "Name": "Number Slider",
      "Description": "Numeric slider for single values",
      "IsCoreComponent": true,
      "Inputs": [],
      "Outputs": [{ "Name": "Value", "DataType": "Number", "IsOptional": false }]
    },
    {
      "Name": "Blur Numbers",
      "Description": "Blur a list of numbers by averaging neighbours",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Numbers", "DataType": "Number", "IsOptional": false },
        { "Name": "Strength", "DataType": "Number", "IsOptional": false },
        { "Name": "Iterations", "DataType": "Integer", "IsOptional": false },
        { "Name": "Lock", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Wrap", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Numbers", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Cull Faces",
      "Description": "Cull faces from a mesh",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Pattern", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Planar",
      "Description": "Test a curve for planarity.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Curve", "DataType": "Curve", "IsOptional": false }],
      "Outputs": [
        { "Name": "Planar", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Deviation", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Series Addition",
      "Description": "Perform serial addition until a goal has been reached",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Numbers", "DataType": "Integer", "IsOptional": false },
        { "Name": "Goal", "DataType": "Integer", "IsOptional": false },
        { "Name": "Start", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Series", "DataType": "Integer", "IsOptional": false },
        { "Name": "Remainder", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Surface Morph",
      "Description": "Morph geometry into surface UVW coordinates",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Reference", "DataType": "Box", "IsOptional": false },
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false },
        { "Name": "U Domain", "DataType": "Domain", "IsOptional": false },
        { "Name": "V Domain", "DataType": "Domain", "IsOptional": false },
        { "Name": "W Domain", "DataType": "Domain", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false }
      ]
    },
    {
      "Name": "Mesh Surface",
      "Description": "Create a Surface UV mesh",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false },
        { "Name": "U Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "V Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "Overhang", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Equalize", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Blend Curve",
      "Description": "Create a blend curve between two curves.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve A", "DataType": "Curve", "IsOptional": false },
        { "Name": "Curve B", "DataType": "Curve", "IsOptional": false },
        { "Name": "Bulge A", "DataType": "Number", "IsOptional": false },
        { "Name": "Bulge B", "DataType": "Number", "IsOptional": false },
        { "Name": "Continuity", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Blend", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Colour HSV",
      "Description": "Create a colour from floating point {HSV} channels.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Alpha", "DataType": "Number", "IsOptional": false },
        { "Name": "Hue", "DataType": "Number", "IsOptional": false },
        { "Name": "Saturation", "DataType": "Number", "IsOptional": false },
        { "Name": "Value", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Colour", "DataType": "Colour", "IsOptional": false }]
    },
    {
      "Name": "Construct Time",
      "Description": "Construct a time instance",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Hour", "DataType": "Integer", "IsOptional": false },
        { "Name": "Minute", "DataType": "Integer", "IsOptional": false },
        { "Name": "Second", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Time", "DataType": "Time", "IsOptional": false }]
    },
    {
      "Name": "Sort Along Curve",
      "Description": "Sort points along a curve",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Indices", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "List Item",
      "Description": "Retrieve a specific item from a list.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "List", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Index", "DataType": "Integer", "IsOptional": false },
        { "Name": "Wrap", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Item", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Panel",
      "Description": "A panel for custom notes and text values",
      "IsCoreComponent": true,
      "Inputs": [],
      "Outputs": [{ "Name": "Value", "DataType": "Text", "IsOptional": false }]
    },
    {
      "Name": "Solar Incidence",
      "Description": "Gets the solar incidence vector for a certain time and place",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Location", "DataType": "Location", "IsOptional": false },
        { "Name": "Time", "DataType": "Time", "IsOptional": false },
        { "Name": "Orientation", "DataType": "Plane", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Direction", "DataType": "Vector", "IsOptional": false },
        { "Name": "Elevation", "DataType": "Number", "IsOptional": false },
        { "Name": "Horizon", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Colour", "DataType": "Colour", "IsOptional": false }
      ]
    },
    {
      "Name": "Polygon Center",
      "Description": "Find the center point (average) for a polyline.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Polyline", "DataType": "Curve", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Center(V)", "DataType": "Point", "IsOptional": false },
        { "Name": "Center(E)", "DataType": "Point", "IsOptional": false },
        { "Name": "Center(A)", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Shortest List",
      "Description": "Shrink a collection of lists to the shortest length amongst them",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "List (A)", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "List (B)", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "List (A)", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "List (B)", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Shear",
      "Description": "Shear an object based on a shearing vector.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": true },
        { "Name": "Base", "DataType": "Plane", "IsOptional": false },
        { "Name": "Grip", "DataType": "Point", "IsOptional": false },
        { "Name": "Target", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Text Tag 3D",
      "Description": "Represents a list of 3D text tags in a Rhino viewport",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Location", "DataType": "Plane", "IsOptional": false },
        { "Name": "Text", "DataType": "Text", "IsOptional": true },
        { "Name": "Size", "DataType": "Number", "IsOptional": false },
        { "Name": "Colour", "DataType": "Colour", "IsOptional": true },
        { "Name": "Justification", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": []
    },
    {
      "Name": "Mesh Triangle",
      "Description": "Create a mesh triangle.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Corner A", "DataType": "Integer", "IsOptional": false },
        { "Name": "Corner B", "DataType": "Integer", "IsOptional": false },
        { "Name": "Corner C", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Face", "DataType": "Mesh face", "IsOptional": false }
      ]
    },
    {
      "Name": "Partition List",
      "Description": "Partition a list into sub-lists",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "List", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Size", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Chunks", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Cube Root",
      "Description": "Compute the cube root of a value",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Value", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Smooth Numbers",
      "Description": "Smooth out changing numbers over time",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Numbers", "DataType": "Number", "IsOptional": true }],
      "Outputs": [
        { "Name": "Numbers", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Split with Breps",
      "Description": "Split a curve with multiple Breps.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Brep", "DataType": "Brep", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Points", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Mass Addition",
      "Description": "Perform mass addition of a list of items",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Input", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false },
        {
          "Name": "Partial Results",
          "DataType": "Generic Data",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "Direction Display",
      "Description": "Display the force directions of a field section",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Field", "DataType": "Field", "IsOptional": false },
        { "Name": "Section", "DataType": "Rectangle", "IsOptional": false },
        { "Name": "Samples", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Display", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Control Point Loft",
      "Description": "Create a loft through curve control points.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curves", "DataType": "Curve", "IsOptional": false },
        { "Name": "Degree", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false }
      ]
    },
    {
      "Name": "Smooth Polyline",
      "Description": "Smooth the vertices of a polyline curve.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Polyline", "DataType": "Curve", "IsOptional": false },
        { "Name": "Strength", "DataType": "Number", "IsOptional": false },
        { "Name": "Times", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Polyline", "DataType": "Curve", "IsOptional": false }
      ]
    },
    {
      "Name": "Gate Nand",
      "Description": "Perform boolean alternative denial (NAND gate).",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "A", "DataType": "Boolean", "IsOptional": false },
        { "Name": "B", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Gate Or",
      "Description": "Perform boolean disjunction (OR gate).",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "A", "DataType": "Boolean", "IsOptional": true },
        { "Name": "B", "DataType": "Boolean", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Copy Trim",
      "Description": "Copy UV trim data from one surface to another.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Source", "DataType": "Surface", "IsOptional": false },
        { "Name": "Target", "DataType": "Surface", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false }
      ]
    },
    {
      "Name": "Equality",
      "Description": "Test for (in)equality of two numbers",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "First Number", "DataType": "Number", "IsOptional": false },
        { "Name": "Second Number", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Equality", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Inequality", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Sum Surface",
      "Description": "Create a sum surface from two edge curves.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve A", "DataType": "Curve", "IsOptional": false },
        { "Name": "Curve B", "DataType": "Curve", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Surface", "DataType": "Brep", "IsOptional": false }]
    },
    {
      "Name": "Rotate Direction",
      "Description": "Rotate an object from one direction to another.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": true },
        { "Name": "Center", "DataType": "Point", "IsOptional": false },
        { "Name": "From", "DataType": "Vector", "IsOptional": false },
        { "Name": "To", "DataType": "Vector", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Plane Coordinates",
      "Description": "Get the coordinates of a point in a plane axis system.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "System", "DataType": "Plane", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "X coordinate", "DataType": "Number", "IsOptional": false },
        { "Name": "Y coordinate", "DataType": "Number", "IsOptional": false },
        { "Name": "Z coordinate", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Pattern Hatch",
      "Description": "Create a patterned hatch",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Boundaries", "DataType": "Curve", "IsOptional": false },
        { "Name": "Pattern", "DataType": "Integer", "IsOptional": false },
        { "Name": "Scale", "DataType": "Number", "IsOptional": false },
        { "Name": "Angle", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": []
    },
    {
      "Name": "Stack Data",
      "Description": "Duplicate individual items in a list of data",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Data", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Stack", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Data", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Secant",
      "Description": "Compute the secant (reciprocal of the Cosine) of an angle.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Value", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Mesh Brep",
      "Description": "Create a mesh that approximates Brep geometry",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Brep", "DataType": "Brep", "IsOptional": false },
        { "Name": "Settings", "DataType": "MeshParameters", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Transform",
      "Description": "Transform an object.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false }
      ]
    },
    {
      "Name": "To Polar",
      "Description": "Convert a 3D point to plane polar coordinates.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "System", "DataType": "Plane", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Phi", "DataType": "Number", "IsOptional": false },
        { "Name": "Theta", "DataType": "Number", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Triangle Mapping",
      "Description": "Transform geometry from one triangle into another.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": true },
        { "Name": "Source", "DataType": "Curve", "IsOptional": false },
        { "Name": "Target", "DataType": "Curve", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Blend Box",
      "Description": "Create a twisted box between two surfaces.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Surface A", "DataType": "Surface", "IsOptional": false },
        { "Name": "Domain A", "DataType": "Domain²", "IsOptional": false },
        { "Name": "Surface B", "DataType": "Surface", "IsOptional": false },
        { "Name": "Domain B", "DataType": "Domain²", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Twisted Box", "DataType": "Twisted Box", "IsOptional": false }
      ]
    },
    {
      "Name": "Extend Curve",
      "Description": "Extend a curve by a specified distance.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Type", "DataType": "Integer", "IsOptional": false },
        { "Name": "Start", "DataType": "Number", "IsOptional": false },
        { "Name": "End", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Curve", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Symbol Display",
      "Description": "Display symbols",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Location", "DataType": "Point", "IsOptional": false },
        { "Name": "Display", "DataType": "Symbol Display", "IsOptional": false }
      ],
      "Outputs": []
    },
    {
      "Name": "Annotation Style",
      "Description": "Annotation Style",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Annotation Style",
          "DataType": "Model Annotation Style",
          "IsOptional": true
        },
        { "Name": "Name", "DataType": "Text", "IsOptional": true },
        { "Name": "Model Scale", "DataType": "Number", "IsOptional": true },
        {
          "Name": "Text Settings",
          "DataType": "Text Settings",
          "IsOptional": true
        },
        {
          "Name": "Dimension Settings",
          "DataType": "Dimension Settings",
          "IsOptional": true
        },
        {
          "Name": "Arrow Settings",
          "DataType": "Annotation Arrow Settings",
          "IsOptional": true
        },
        {
          "Name": "Units Settings",
          "DataType": "Units Settings",
          "IsOptional": true
        },
        {
          "Name": "Leader Settings",
          "DataType": "Leader Settings",
          "IsOptional": true
        },
        {
          "Name": "Tolerance Settings",
          "DataType": "Tolerance Settings",
          "IsOptional": true
        }
      ],
      "Outputs": [
        {
          "Name": "Annotation Style",
          "DataType": "Model Annotation Style",
          "IsOptional": false
        },
        { "Name": "Name", "DataType": "Text", "IsOptional": false },
        { "Name": "Model Scale", "DataType": "Number", "IsOptional": false },
        {
          "Name": "Text Settings",
          "DataType": "Text Settings",
          "IsOptional": false
        },
        {
          "Name": "Dimension Settings",
          "DataType": "Dimension Settings",
          "IsOptional": false
        },
        {
          "Name": "Arrow Settings",
          "DataType": "Annotation Arrow Settings",
          "IsOptional": false
        },
        {
          "Name": "Units Settings",
          "DataType": "Units Settings",
          "IsOptional": false
        },
        {
          "Name": "Leader Settings",
          "DataType": "Leader Settings",
          "IsOptional": false
        },
        {
          "Name": "Tolerance Settings",
          "DataType": "Tolerance Settings",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "Model Block Instance",
      "Description": "Block Instance",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Block Instance",
          "DataType": "Block Instance",
          "IsOptional": true
        },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": true },
        {
          "Name": "Block Definition",
          "DataType": "Model Block Definition",
          "IsOptional": true
        }
      ],
      "Outputs": [
        {
          "Name": "Block Instance",
          "DataType": "Block Instance",
          "IsOptional": false
        },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false },
        {
          "Name": "Block Definition",
          "DataType": "Model Block Definition",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "Union Filter",
      "Description": "Combine multiple filters together into a union which returns true if at least one input filter evaluates to true.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Filters", "DataType": "Predicate", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Filter", "DataType": "Predicate", "IsOptional": false }
      ]
    },
    {
      "Name": "Create Complex",
      "Description": "Create a complex number from a Real and an Imaginary component",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Real", "DataType": "Number", "IsOptional": false },
        { "Name": "Imaginary", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Complex", "DataType": "Complex", "IsOptional": false }
      ]
    },
    {
      "Name": "Multiply",
      "Description": "Perform vector-scalar multiplication.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Vector", "DataType": "Vector", "IsOptional": false },
        { "Name": "Factor", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Vector", "DataType": "Vector", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Text Entity",
      "Description": "Text Entity",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Text Entity", "DataType": "Text Entity", "IsOptional": true },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": true },
        { "Name": "Text", "DataType": "Text", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Text Entity", "DataType": "Text Entity", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Text", "DataType": "Text", "IsOptional": false }
      ]
    },
    {
      "Name": "Edges from Directions",
      "Description": "Select brep edges based on edge direction",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Brep", "DataType": "Brep", "IsOptional": false },
        { "Name": "Directions", "DataType": "Vector", "IsOptional": false },
        { "Name": "Reflex", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Angle", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Edges", "DataType": "Curve", "IsOptional": false },
        { "Name": "Indices", "DataType": "Integer", "IsOptional": false },
        { "Name": "Map", "DataType": "Text", "IsOptional": false }
      ]
    },
    {
      "Name": "Data Dam",
      "Description": "Delay data on its way through the document",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Data A", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Data A", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Read File",
      "Description": "Read the contents of a file",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "File", "DataType": "Text", "IsOptional": false }],
      "Outputs": [
        { "Name": "Content", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Control Polygon",
      "Description": "Extract the nurbs control polygon of a curve.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Curve", "DataType": "Curve", "IsOptional": false }],
      "Outputs": [
        { "Name": "Polygon", "DataType": "Curve", "IsOptional": false },
        { "Name": "Points", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Spatial Deform",
      "Description": "Perform spatial deformation based on custom space syntax.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Syntax", "DataType": "Point", "IsOptional": false },
        { "Name": "Forces", "DataType": "Vector", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false }
      ]
    },
    {
      "Name": "Radial",
      "Description": "2D radial grid",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Size", "DataType": "Number", "IsOptional": false },
        { "Name": "Extent R", "DataType": "Integer", "IsOptional": false },
        { "Name": "Extent P", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Cells", "DataType": "Curve", "IsOptional": false },
        { "Name": "Points", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Vector Length",
      "Description": "Compute the length (amplitude) of a vector.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Vector", "DataType": "Vector", "IsOptional": false }],
      "Outputs": [{ "Name": "Length", "DataType": "Number", "IsOptional": false }]
    },
    {
      "Name": "InEllipse",
      "Description": "Create the inscribed ellipse (Steiner ellipse) of a triangle.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Corner A", "DataType": "Point", "IsOptional": false },
        { "Name": "Corner B", "DataType": "Point", "IsOptional": false },
        { "Name": "Corner C", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Ellipse", "DataType": "Curve", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false }
      ]
    },
    {
      "Name": "Model Hatch Pattern",
      "Description": "Model Hatch Pattern",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Hatch Pattern",
          "DataType": "Model Hatch Pattern",
          "IsOptional": true
        },
        { "Name": "Name", "DataType": "Text", "IsOptional": true },
        { "Name": "Hatch Lines", "DataType": "Hatch Line", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Hatch Pattern",
          "DataType": "Model Hatch Pattern",
          "IsOptional": false
        },
        { "Name": "Name", "DataType": "Text", "IsOptional": false },
        { "Name": "Hatch Lines", "DataType": "Hatch Line", "IsOptional": false }
      ]
    },
    {
      "Name": "Annotation Text Settings",
      "Description": "Annotation Style Text Settings",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Text Settings",
          "DataType": "Text Settings",
          "IsOptional": true
        },
        { "Name": "Font", "DataType": "Font", "IsOptional": true },
        { "Name": "Text Height", "DataType": "Number", "IsOptional": true },
        { "Name": "Text Gap", "DataType": "Number", "IsOptional": true },
        { "Name": "Mask Frame", "DataType": "Integer", "IsOptional": true },
        { "Name": "Mask Colour", "DataType": "Colour", "IsOptional": true },
        { "Name": "Mask Margins", "DataType": "Number", "IsOptional": true },
        { "Name": "View Oriented", "DataType": "Boolean", "IsOptional": true },
        {
          "Name": "Horizontal Alignment",
          "DataType": "Integer",
          "IsOptional": true
        },
        {
          "Name": "Vertical Alignment",
          "DataType": "Integer",
          "IsOptional": true
        },
        { "Name": "Fit Text", "DataType": "Integer", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Text Settings",
          "DataType": "Text Settings",
          "IsOptional": false
        },
        { "Name": "Font", "DataType": "Font", "IsOptional": false },
        { "Name": "Text Height", "DataType": "Number", "IsOptional": false },
        { "Name": "Text Gap", "DataType": "Number", "IsOptional": false },
        { "Name": "Mask Frame", "DataType": "Integer", "IsOptional": false },
        { "Name": "Mask Colour", "DataType": "Colour", "IsOptional": false },
        { "Name": "Mask Margins", "DataType": "Number", "IsOptional": false },
        { "Name": "View Oriented", "DataType": "Boolean", "IsOptional": false },
        {
          "Name": "Horizontal Alignment",
          "DataType": "Integer",
          "IsOptional": false
        },
        {
          "Name": "Vertical Alignment",
          "DataType": "Integer",
          "IsOptional": false
        },
        { "Name": "Fit Text", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Surface | Curve",
      "Description": "Solve intersection events for a surface and a curve.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false },
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Curves", "DataType": "Curve", "IsOptional": false },
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "UV Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Normals", "DataType": "Vector", "IsOptional": false },
        { "Name": "Parameters", "DataType": "Number", "IsOptional": false },
        { "Name": "Tangents", "DataType": "Vector", "IsOptional": false }
      ]
    },
    {
      "Name": "Perp Frame",
      "Description": "Solve the perpendicular (zero-twisting) frame at a specified curve parameter.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Parameter", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Frame", "DataType": "Plane", "IsOptional": false }]
    },
    {
      "Name": "Linear Light",
      "Description": "Linear Light",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Linear Light", "DataType": "Light", "IsOptional": true },
        { "Name": "Line", "DataType": "Line", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Linear Light", "DataType": "Light", "IsOptional": false },
        { "Name": "Line", "DataType": "Line", "IsOptional": false }
      ]
    },
    {
      "Name": "Isotrim",
      "Description": "Extract an isoparametric subset of a surface.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false },
        { "Name": "Domain", "DataType": "Domain²", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false }
      ]
    },
    {
      "Name": "Evaluate Length",
      "Description": "Evaluate a curve at a certain factor along its length. Length factors can be supplied both in curve units and normalized units. Change the [N] parameter to toggle between the two modes.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false },
        { "Name": "Normalized", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Tangent", "DataType": "Vector", "IsOptional": false },
        { "Name": "Parameter", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Dot Display",
      "Description": "Draw a collection of coloured dots",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Colour", "DataType": "Colour", "IsOptional": false },
        { "Name": "Size", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": []
    },
    {
      "Name": "Curve Frame",
      "Description": "Get the curvature frame of a curve at a specified parameter.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Parameter", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Frame", "DataType": "Plane", "IsOptional": false }]
    },
    {
      "Name": "Pull Curve",
      "Description": "Pull a curve onto a surface.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Curve", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Curve Proximity",
      "Description": "Find the pair of closest points between two curves.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve A", "DataType": "Curve", "IsOptional": false },
        { "Name": "Curve B", "DataType": "Curve", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Point A", "DataType": "Point", "IsOptional": false },
        { "Name": "Point B", "DataType": "Point", "IsOptional": false },
        { "Name": "Distance", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Render Attributes",
      "Description": "Object render attributes",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Render", "DataType": "Render Attributes", "IsOptional": true },
        {
          "Name": "Object Material",
          "DataType": "Object Material",
          "IsOptional": true
        },
        { "Name": "Casts Shadows", "DataType": "Boolean", "IsOptional": true },
        { "Name": "Receives Shadows", "DataType": "Boolean", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Render",
          "DataType": "Render Attributes",
          "IsOptional": false
        },
        {
          "Name": "Object Material",
          "DataType": "Object Material",
          "IsOptional": false
        },
        { "Name": "Casts Shadows", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Receives Shadows", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Mirror Surface",
      "Description": "Mirror geometry in a freeform surface.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false },
        { "Name": "Frame", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false }
      ]
    },
    {
      "Name": "Gradient Hatch",
      "Description": "Create a gradient hatch",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Boundaries", "DataType": "Curve", "IsOptional": false },
        { "Name": "Axis", "DataType": "Line", "IsOptional": false },
        { "Name": "Colour 1", "DataType": "Colour", "IsOptional": false },
        { "Name": "Colour 2", "DataType": "Colour", "IsOptional": false }
      ],
      "Outputs": []
    },
    {
      "Name": "Line | Line",
      "Description": "Solve intersection events for two lines.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Line 1", "DataType": "Line", "IsOptional": false },
        { "Name": "Line 2", "DataType": "Line", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Param A", "DataType": "Number", "IsOptional": false },
        { "Name": "Param B", "DataType": "Number", "IsOptional": false },
        { "Name": "Point A", "DataType": "Point", "IsOptional": false },
        { "Name": "Point B", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Gradient",
      "Description": "Represents a multiple colour gradient",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Lower limit", "DataType": "Number", "IsOptional": false },
        { "Name": "Upper limit", "DataType": "Number", "IsOptional": false },
        { "Name": "Parameter", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Colour", "DataType": "Colour", "IsOptional": false }]
    },
    {
      "Name": "Ruled Surface",
      "Description": "Create a surface between two curves.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve A", "DataType": "Curve", "IsOptional": false },
        { "Name": "Curve B", "DataType": "Curve", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false }
      ]
    },
    {
      "Name": "Point Cloud Closest Point",
      "Description": "Find the closest point in a point cloud",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Cloud", "DataType": "Point Cloud", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Closest Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Index", "DataType": "Integer", "IsOptional": false },
        { "Name": "Distance", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Divide By Deviation",
      "Description": "Divide a curve into segments with equal deviation",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Tangents", "DataType": "Vector", "IsOptional": false },
        { "Name": "Parameters", "DataType": "Number", "IsOptional": false },
        { "Name": "Deviation", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Cull Duplicates",
      "Description": "Cull points that are coincident within tolerance",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Tolerance", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Indices", "DataType": "Integer", "IsOptional": false },
        { "Name": "Valence", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Amplitude",
      "Description": "Set the amplitude (length) of a vector.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Vector", "DataType": "Vector", "IsOptional": false },
        { "Name": "Amplitude", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Vector", "DataType": "Vector", "IsOptional": false }]
    },
    {
      "Name": "Reverse List",
      "Description": "Reverse the order of a list.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "List", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "List", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Kinky Curve",
      "Description": "Construct an interpolated curve through a set of points with a kink angle threshold.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Vertices", "DataType": "Point", "IsOptional": false },
        { "Name": "Degree", "DataType": "Integer", "IsOptional": false },
        { "Name": "Angle", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false },
        { "Name": "Domain", "DataType": "Domain", "IsOptional": false }
      ]
    },
    {
      "Name": "Sort List",
      "Description": "Sort a list of numeric keys.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Keys", "DataType": "Number", "IsOptional": false },
        { "Name": "Values A", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Keys", "DataType": "Number", "IsOptional": false },
        { "Name": "Values A", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Fillet Distance",
      "Description": "Fillet the sharp corners of a curve by distance.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Distance", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Curve", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Model Material",
      "Description": "Model Material",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Material", "DataType": "Model Material", "IsOptional": true },
        { "Name": "Name", "DataType": "Text", "IsOptional": true },
        { "Name": "Shader", "DataType": "Shader", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Material", "DataType": "Model Material", "IsOptional": false },
        { "Name": "Name", "DataType": "Text", "IsOptional": false },
        { "Name": "Shader", "DataType": "Shader", "IsOptional": false }
      ]
    },
    {
      "Name": "Closed Edges",
      "Description": "Select closed edges.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Brep", "DataType": "Brep", "IsOptional": false },
        { "Name": "Tangency", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Closed", "DataType": "Curve", "IsOptional": false },
        { "Name": "Closed Indices", "DataType": "Integer", "IsOptional": false },
        { "Name": "Open", "DataType": "Curve", "IsOptional": false },
        { "Name": "Open Indices", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Group Content",
      "Description": "Group content by key",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Content", "DataType": "Data", "IsOptional": false },
        { "Name": "Key", "DataType": "Text", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Content", "DataType": "Data", "IsOptional": false },
        { "Name": "Values", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Network Surface",
      "Description": "Create a surface from curve networks",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curves U", "DataType": "Curve", "IsOptional": false },
        { "Name": "Curves V", "DataType": "Curve", "IsOptional": false },
        { "Name": "Continuity", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false }
      ]
    },
    {
      "Name": "PolyArc",
      "Description": "Create a polycurve consisting of arc and line segments.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Vertices", "DataType": "Point", "IsOptional": false },
        { "Name": "Tangent", "DataType": "Vector", "IsOptional": true },
        { "Name": "Closed", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "PolyArc", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Square",
      "Description": "2D grid with square cells",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Size", "DataType": "Number", "IsOptional": false },
        { "Name": "Extent X", "DataType": "Integer", "IsOptional": false },
        { "Name": "Extent Y", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Cells", "DataType": "Rectangle", "IsOptional": false },
        { "Name": "Points", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "PolyLine",
      "Description": "Create a polyline connecting a number of points.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Vertices", "DataType": "Point", "IsOptional": false },
        { "Name": "Closed", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Polyline", "DataType": "Curve", "IsOptional": false }
      ]
    },
    {
      "Name": "Edges from Faces",
      "Description": "Select all brep edges that delineate certain faces",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Brep", "DataType": "Brep", "IsOptional": false },
        { "Name": "Points", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Edges", "DataType": "Curve", "IsOptional": false },
        { "Name": "Indices", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Stream Gate",
      "Description": "Redirects a stream into specific outputs.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Stream", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Gate", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Target 0", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Target 1", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Export Model Block Definition",
      "Description": "Export a block definition as a Rhino (*.3dm) file.",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Block Definition",
          "DataType": "Model Block Definition",
          "IsOptional": false
        },
        { "Name": "File Path", "DataType": "Text", "IsOptional": false },
        { "Name": "Overwrite", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        {
          "Name": "Block Definition",
          "DataType": "Model Block Definition",
          "IsOptional": false
        },
        { "Name": "File Path", "DataType": "Text", "IsOptional": false },
        { "Name": "Exported", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Import Model Material",
      "Description": "Import Model Material",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "File Path", "DataType": "Text", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Material", "DataType": "Model Material", "IsOptional": false }
      ]
    },
    {
      "Name": "Skylight",
      "Description": "The Rhino skylight",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Skylight", "DataType": "Data", "IsOptional": true },
        { "Name": "Enabled", "DataType": "Boolean", "IsOptional": true },
        {
          "Name": "Custom Environment",
          "DataType": "Boolean",
          "IsOptional": true
        },
        {
          "Name": "Environment",
          "DataType": "Model Environment",
          "IsOptional": true
        }
      ],
      "Outputs": [
        { "Name": "Skylight", "DataType": "Data", "IsOptional": false },
        { "Name": "Enabled", "DataType": "Boolean", "IsOptional": false },
        {
          "Name": "Custom Environment",
          "DataType": "Boolean",
          "IsOptional": false
        },
        {
          "Name": "Environment",
          "DataType": "Model Environment",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "Context Print",
      "Description": "Textual data to print at the end of the GrasshopperPlayer command.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Text", "DataType": "Text", "IsOptional": false }],
      "Outputs": []
    },
    {
      "Name": "Edges from Points",
      "Description": "Select brep edges based on point coincidence",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Brep", "DataType": "Brep", "IsOptional": false },
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Valence", "DataType": "Integer", "IsOptional": false },
        { "Name": "Tolerance", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Edges", "DataType": "Curve", "IsOptional": false },
        { "Name": "Indices", "DataType": "Integer", "IsOptional": false },
        { "Name": "Map", "DataType": "Text", "IsOptional": false }
      ]
    },
    {
      "Name": "Curvature Graph",
      "Description": "Draws Rhino Curvature Graphs.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Density", "DataType": "Integer", "IsOptional": false },
        { "Name": "Scale", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": []
    },
    {
      "Name": "Curve Nearest Object",
      "Description": "Find the object nearest to a curve.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Point A", "DataType": "Point", "IsOptional": false },
        { "Name": "Point B", "DataType": "Point", "IsOptional": false },
        { "Name": "Index", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Explode Tree",
      "Description": "Extract all the branches from a tree",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Data", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Branch 0", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Branch 1", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Sweep2",
      "Description": "Create a sweep surface with two rail curves.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Rail 1", "DataType": "Curve", "IsOptional": false },
        { "Name": "Rail 2", "DataType": "Curve", "IsOptional": false },
        { "Name": "Sections", "DataType": "Curve", "IsOptional": false },
        { "Name": "Same Height", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Brep", "DataType": "Brep", "IsOptional": false }]
    },
    {
      "Name": "Format",
      "Description": "Format some data using placeholders and formatting tags",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Format", "DataType": "Text", "IsOptional": false },
        { "Name": "Culture", "DataType": "Culture", "IsOptional": false },
        { "Name": "Data 0", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Data 1", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Text", "DataType": "Text", "IsOptional": false }]
    },
    {
      "Name": "Colour LCH",
      "Description": "Create a colour from floating point {CIE LCH} channels.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Alpha", "DataType": "Number", "IsOptional": false },
        { "Name": "Luminance", "DataType": "Number", "IsOptional": false },
        { "Name": "Chroma", "DataType": "Number", "IsOptional": false },
        { "Name": "Hue", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Colour", "DataType": "Colour", "IsOptional": false }]
    },
    {
      "Name": "Divide Domain²",
      "Description": "Divides a two-dimensional domain into equal segments.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Domain", "DataType": "Domain²", "IsOptional": false },
        { "Name": "U Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "V Count", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Segments", "DataType": "Domain²", "IsOptional": false }
      ]
    },
    {
      "Name": "Line | Plane",
      "Description": "Solve intersection event for a line and a plane.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Line", "DataType": "Line", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Param L", "DataType": "Number", "IsOptional": false },
        { "Name": "Param P", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Interpolate (t)",
      "Description": "Create an interpolated curve through a set of points with tangents.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Vertices", "DataType": "Point", "IsOptional": false },
        { "Name": "Tangent Start", "DataType": "Vector", "IsOptional": false },
        { "Name": "Tangent End", "DataType": "Vector", "IsOptional": false },
        { "Name": "KnotStyle", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false },
        { "Name": "Domain", "DataType": "Domain", "IsOptional": false }
      ]
    },
    {
      "Name": "Plane Origin",
      "Description": "Change the origin point of a plane",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Base", "DataType": "Plane", "IsOptional": false },
        { "Name": "Origin", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Plane", "DataType": "Plane", "IsOptional": false }]
    },
    {
      "Name": "Divide Domain",
      "Description": "Divide a domain into equal segments.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Domain", "DataType": "Domain", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Segments", "DataType": "Domain", "IsOptional": false }
      ]
    },
    {
      "Name": "BiArc",
      "Description": "Create a bi-arc based on endpoints and tangents.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Start Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Start Tangent", "DataType": "Vector", "IsOptional": false },
        { "Name": "End Point", "DataType": "Point", "IsOptional": false },
        { "Name": "End Tangent", "DataType": "Vector", "IsOptional": false },
        { "Name": "Ratio", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "First arc", "DataType": "Arc", "IsOptional": false },
        { "Name": "Second arc", "DataType": "Arc", "IsOptional": false },
        { "Name": "Bi-Arc", "DataType": "Curve", "IsOptional": false }
      ]
    },
    {
      "Name": "Sine",
      "Description": "Compute the sine of a value",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Value", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Create Material",
      "Description": "Create an OpenGL material.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Diffuse", "DataType": "Colour", "IsOptional": false },
        { "Name": "Specular", "DataType": "Colour", "IsOptional": false },
        { "Name": "Emission", "DataType": "Colour", "IsOptional": false },
        { "Name": "Transparency", "DataType": "Number", "IsOptional": false },
        { "Name": "Shine", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Material", "DataType": "Shader", "IsOptional": false }
      ]
    },
    {
      "Name": "Catenary Ex",
      "Description": "Create a variable catenary chain between two points.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point A", "DataType": "Point", "IsOptional": false },
        { "Name": "Point B", "DataType": "Point", "IsOptional": false },
        { "Name": "Lengths", "DataType": "Number", "IsOptional": false },
        { "Name": "Weights", "DataType": "Number", "IsOptional": false },
        { "Name": "Gravity", "DataType": "Vector", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Catenary", "DataType": "Curve", "IsOptional": false },
        { "Name": "Segments", "DataType": "Curve", "IsOptional": false }
      ]
    },
    {
      "Name": "Aligned Dimension",
      "Description": "Aligned Dimension",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Aligned Dimension",
          "DataType": "Linear Dimension",
          "IsOptional": true
        },
        { "Name": "Point A", "DataType": "Point", "IsOptional": true },
        { "Name": "Point B", "DataType": "Point", "IsOptional": true },
        { "Name": "Offset", "DataType": "Number", "IsOptional": true },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Aligned Dimension",
          "DataType": "Linear Dimension",
          "IsOptional": false
        },
        { "Name": "Point A", "DataType": "Point", "IsOptional": false },
        { "Name": "Point B", "DataType": "Point", "IsOptional": false },
        { "Name": "Offset", "DataType": "Number", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false }
      ]
    },
    {
      "Name": "Mesh Sphere Ex",
      "Description": "Create a mesh sphere from square patches.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Base", "DataType": "Plane", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Colour XYZ",
      "Description": "Create a colour from floating point {XYZ} channels (CIE 1931 spec).",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Alpha", "DataType": "Number", "IsOptional": false },
        { "Name": "X", "DataType": "Number", "IsOptional": false },
        { "Name": "Y", "DataType": "Number", "IsOptional": false },
        { "Name": "Z", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Colour", "DataType": "Colour", "IsOptional": false }]
    },
    {
      "Name": "Gate Majority",
      "Description": "Calculates the majority vote among three booleans.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "A", "DataType": "Boolean", "IsOptional": false },
        { "Name": "B", "DataType": "Boolean", "IsOptional": false },
        { "Name": "C", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Power",
      "Description": "Raise a value to a power.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "A", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "B", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Symbol (Simple)",
      "Description": "Simple symbol display properties",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Style", "DataType": "Integer", "IsOptional": false },
        { "Name": "Size", "DataType": "Number", "IsOptional": false },
        { "Name": "Rotation", "DataType": "Number", "IsOptional": false },
        { "Name": "Colour", "DataType": "Colour", "IsOptional": false }
      ],
      "Outputs": [
        {
          "Name": "Symbol Display",
          "DataType": "Symbol Display",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "One Over X",
      "Description": "Compute one over x.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Value", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Average",
      "Description": "Solve the arithmetic average for a set of items",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Input", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        {
          "Name": "Arithmetic mean",
          "DataType": "Generic Data",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "Clean Tree",
      "Description": "Removed all null and invalid items from a data tree.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Tree", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Clean Invalid", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Clean Empty", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Tree", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Domain Box",
      "Description": "Create a box defined by a base plane and size domains.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Base", "DataType": "Plane", "IsOptional": false },
        { "Name": "X", "DataType": "Domain", "IsOptional": false },
        { "Name": "Y", "DataType": "Domain", "IsOptional": false },
        { "Name": "Z", "DataType": "Domain", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Box", "DataType": "Box", "IsOptional": false }]
    },
    {
      "Name": "Unit X",
      "Description": "Unit vector parallel to the world {x} axis.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Factor", "DataType": "Number", "IsOptional": false }],
      "Outputs": [
        { "Name": "Unit vector", "DataType": "Vector", "IsOptional": false }
      ]
    },
    {
      "Name": "Power of 2",
      "Description": "Raise 2 to the power of N.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Value", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Replace Items",
      "Description": "Replace certain items in a list.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "List", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Item", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Indices", "DataType": "Integer", "IsOptional": true },
        { "Name": "Wrap", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "List", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Log N",
      "Description": "Return the N-base logarithm of a number.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Number", "DataType": "Number", "IsOptional": false },
        { "Name": "Base", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Result", "DataType": "Number", "IsOptional": false }]
    },
    {
      "Name": "Voronoi Cell",
      "Description": "Compute a single 3D Voronoi cell",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Neighbours", "DataType": "Point", "IsOptional": false },
        { "Name": "Box", "DataType": "Box", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Cell", "DataType": "Brep", "IsOptional": false }]
    },
    {
      "Name": "Atom Data",
      "Description": "Get detailed information for an atom",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Atom", "DataType": "Atom", "IsOptional": false }],
      "Outputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Element", "DataType": "Text", "IsOptional": false },
        { "Name": "Chain", "DataType": "Text", "IsOptional": false },
        { "Name": "Residue", "DataType": "Text", "IsOptional": false },
        { "Name": "Charge", "DataType": "Integer", "IsOptional": false },
        { "Name": "Occupancy", "DataType": "Number", "IsOptional": false },
        { "Name": "Temperature", "DataType": "Number", "IsOptional": false },
        { "Name": "Atomic Number", "DataType": "Integer", "IsOptional": false },
        { "Name": "Serial Number", "DataType": "Integer", "IsOptional": false },
        { "Name": "Residue Number", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Volume",
      "Description": "Solve volume properties for closed breps and meshes.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Volume", "DataType": "Number", "IsOptional": true },
        { "Name": "Centroid", "DataType": "Point", "IsOptional": true }
      ]
    },
    {
      "Name": "Complex Conjugate",
      "Description": "Create the conjugate of a Complex number",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Complex", "DataType": "Complex", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Conjugate", "DataType": "Complex", "IsOptional": false }
      ]
    },
    {
      "Name": "Surface Split",
      "Description": "Split a surface with a bunch of curves.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false },
        { "Name": "Curves", "DataType": "Curve", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Fragments", "DataType": "Surface", "IsOptional": false }
      ]
    },
    {
      "Name": "Serial Dimension",
      "Description": "Create a distance annotation between multiple points, projected to a line.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Line", "DataType": "Line", "IsOptional": false },
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Text", "DataType": "Text", "IsOptional": false },
        { "Name": "Size", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": []
    },
    {
      "Name": "Query Model Linetypes",
      "Description": "Query a Rhino document for all available linetypes",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Name", "DataType": "Text Pattern", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Linetypes", "DataType": "Model Linetype", "IsOptional": false }
      ]
    },
    {
      "Name": "Cube",
      "Description": "Compute the cube of a value",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Value", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Circular Dimension",
      "Description": "Create an angle annotation projected to a circle.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Circle", "DataType": "Circle", "IsOptional": false },
        { "Name": "Point A", "DataType": "Point", "IsOptional": false },
        { "Name": "Point B", "DataType": "Point", "IsOptional": false },
        { "Name": "Text", "DataType": "Text", "IsOptional": false },
        { "Name": "Size", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": []
    },
    {
      "Name": "Point Light",
      "Description": "Point Light",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point Light", "DataType": "Light", "IsOptional": true },
        { "Name": "Location", "DataType": "Point", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Point Light", "DataType": "Light", "IsOptional": false },
        { "Name": "Location", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Logical And Filter",
      "Description": "Combine two filters together using a logical AND operator",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Filter A", "DataType": "Predicate", "IsOptional": false },
        { "Name": "Filter B", "DataType": "Predicate", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Filter", "DataType": "Predicate", "IsOptional": false }
      ]
    },
    {
      "Name": "Display Colour",
      "Description": "Object display colour attributes",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Display Colour",
          "DataType": "Display Colour",
          "IsOptional": true
        },
        { "Name": "Source", "DataType": "Integer", "IsOptional": true },
        { "Name": "Colour", "DataType": "Colour", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Display Colour",
          "DataType": "Display Colour",
          "IsOptional": false
        },
        { "Name": "Source", "DataType": "Integer", "IsOptional": false },
        { "Name": "Colour", "DataType": "Colour", "IsOptional": false }
      ]
    },
    {
      "Name": "Join Curves",
      "Description": "Join as many curves as possible",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curves", "DataType": "Curve", "IsOptional": false },
        { "Name": "Preserve", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Curves", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Circle",
      "Description": "Create a circle defined by base plane and radius.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Circle", "DataType": "Circle", "IsOptional": false }]
    },
    {
      "Name": "Plane Region",
      "Description": "Create a bounded region from intersecting planes.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Bounds", "DataType": "Plane", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Region", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Offset Curve Loose",
      "Description": "Offset the control-points of a curve with a specified distance.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Distance", "DataType": "Number", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Curve", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "QuadTree",
      "Description": "A two-dimensional quadtree structure",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": true },
        { "Name": "Square", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Group", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Quads", "DataType": "Curve", "IsOptional": false },
        { "Name": "Points", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Disjoint",
      "Description": "Test whether two sets are disjoint.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Set A", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Set B", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Point Groups",
      "Description": "Create groups from nearby points",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Distance", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Groups", "DataType": "Point", "IsOptional": false },
        { "Name": "Indices", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Convex Edges",
      "Description": "Select concave or convex brep edges.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Brep", "DataType": "Brep", "IsOptional": false }],
      "Outputs": [
        { "Name": "Convex", "DataType": "Integer", "IsOptional": false },
        { "Name": "Concave", "DataType": "Integer", "IsOptional": false },
        { "Name": "Mixed", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Deconstruct Domain",
      "Description": "Deconstruct a numeric domain into its component parts.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Domain", "DataType": "Domain", "IsOptional": false }],
      "Outputs": [
        { "Name": "Start", "DataType": "Number", "IsOptional": false },
        { "Name": "End", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Set Intersection",
      "Description": "Creates the intersection of two sets (the collection of unique objects present in both sets).",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Set A", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Set B", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Union", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "SubD Faces",
      "Description": "Extract all face data from a SubD.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "SubD", "DataType": "SubD", "IsOptional": false }],
      "Outputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "Edges", "DataType": "Text", "IsOptional": false },
        { "Name": "Vertices", "DataType": "Text", "IsOptional": false }
      ]
    },
    {
      "Name": "Longest List",
      "Description": "Grow a collection of lists to the longest length amongst them",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "List (A)", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "List (B)", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "List (A)", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "List (B)", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Polygon",
      "Description": "Create a polygon with optional round edges.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false },
        { "Name": "Segments", "DataType": "Integer", "IsOptional": false },
        { "Name": "Fillet Radius", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Polygon", "DataType": "Curve", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Curve | Curve",
      "Description": "Solve intersection events for two curves.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve A", "DataType": "Curve", "IsOptional": false },
        { "Name": "Curve B", "DataType": "Curve", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Params A", "DataType": "Number", "IsOptional": false },
        { "Name": "Params B", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Knot Vector",
      "Description": "Construct a nurbs curve knot vector.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "Degree", "DataType": "Integer", "IsOptional": false },
        { "Name": "Periodic", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Knots", "DataType": "Number", "IsOptional": false }]
    },
    {
      "Name": "Box Mapping",
      "Description": "Transform geometry from one box into another.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": true },
        { "Name": "Source", "DataType": "Box", "IsOptional": false },
        { "Name": "Target", "DataType": "Box", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Reverse Surface",
      "Description": "Reverse directions of surface parameterization (U, V, and W)",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false },
        { "Name": "U", "DataType": "Boolean", "IsOptional": false },
        { "Name": "V", "DataType": "Boolean", "IsOptional": false },
        { "Name": "W", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false }
      ]
    },
    {
      "Name": "Construct Domain²",
      "Description": "Create a two-dimensional domain from two simple domains.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Domain U", "DataType": "Domain", "IsOptional": false },
        { "Name": "Domain V", "DataType": "Domain", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "2D Domain", "DataType": "Domain²", "IsOptional": false }
      ]
    },
    {
      "Name": "SubD from Mesh",
      "Description": "Create a SubD from a control mesh",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Creases", "DataType": "Integer", "IsOptional": false },
        { "Name": "Corners", "DataType": "Integer", "IsOptional": false },
        { "Name": "Interpolate", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "SubD", "DataType": "SubD", "IsOptional": false }]
    },
    {
      "Name": "Point In Breps",
      "Description": "Test whether a point is inside a collection of closed breps",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Brep", "DataType": "Brep", "IsOptional": false },
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Strict", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Inside", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Index", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Swap Rows",
      "Description": "Swap two rows in a matrix",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Matrix", "DataType": "Matrix", "IsOptional": false },
        { "Name": "Row A", "DataType": "Integer", "IsOptional": false },
        { "Name": "Row B", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Matrix", "DataType": "Matrix", "IsOptional": false }]
    },
    {
      "Name": "Characters",
      "Description": "Break text into individual characters",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Text", "DataType": "Text", "IsOptional": false }],
      "Outputs": [
        { "Name": "Result", "DataType": "Text", "IsOptional": false },
        { "Name": "Unicode", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Brep Topology",
      "Description": "Get and display the topology of a brep.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Brep", "DataType": "Brep", "IsOptional": false }],
      "Outputs": [
        {
          "Name": "Face|Face Adjacency",
          "DataType": "Integer",
          "IsOptional": false
        },
        {
          "Name": "Face|Edge Adjacency",
          "DataType": "Integer",
          "IsOptional": false
        },
        {
          "Name": "Edge|Face Adjacency",
          "DataType": "Integer",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "Merge",
      "Description": "Merge two streams into one.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Stream A", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream B", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Stream", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Triangular",
      "Description": "2D grid with triangular cells",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Size", "DataType": "Number", "IsOptional": false },
        { "Name": "Extent X", "DataType": "Integer", "IsOptional": false },
        { "Name": "Extent Y", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Cells", "DataType": "Curve", "IsOptional": false },
        { "Name": "Points", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Area",
      "Description": "Solve area properties for breps, meshes and planar closed curves.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Area", "DataType": "Number", "IsOptional": true },
        { "Name": "Centroid", "DataType": "Point", "IsOptional": true }
      ]
    },
    {
      "Name": "Group",
      "Description": "Group a set of objects",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Objects", "DataType": "Geometry", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Group", "DataType": "Group", "IsOptional": false }]
    },
    {
      "Name": "Graft Tree",
      "Description": "Graft a data tree by adding an extra branch for every item.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Tree", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Tree", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Mesh Union",
      "Description": "Perform a solid union on a set of meshes",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Meshes", "DataType": "Mesh", "IsOptional": false }],
      "Outputs": [{ "Name": "Result", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Reduce",
      "Description": "Reduce a polyline by removing least significant vertices.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Polyline", "DataType": "Curve", "IsOptional": false },
        { "Name": "Tolerance", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Polyline", "DataType": "Curve", "IsOptional": false },
        { "Name": "Reduction", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Pipe Variable",
      "Description": "Create a pipe surface with variable radii around a rail curve.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Parameters", "DataType": "Number", "IsOptional": false },
        { "Name": "Radii", "DataType": "Number", "IsOptional": false },
        { "Name": "Caps", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Pipe", "DataType": "Brep", "IsOptional": false }]
    },
    {
      "Name": "DotNET C# Script (LEGACY)",
      "Description": "A C#.NET scriptable component",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "x", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "y", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Output", "DataType": "Text", "IsOptional": false },
        { "Name": "A", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Curve Contour",
      "Description": "Create a set of Curve contours",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Direction", "DataType": "Vector", "IsOptional": false },
        { "Name": "Distance", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Contours", "DataType": "Point", "IsOptional": false },
        { "Name": "Parameters", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Complex Modulus",
      "Description": "Get the modulus of a Complex number",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Complex", "DataType": "Complex", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Modulus", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Mesh Plane",
      "Description": "Create a mesh plane.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Boundary", "DataType": "Rectangle", "IsOptional": false },
        { "Name": "Width count", "DataType": "Integer", "IsOptional": false },
        { "Name": "Height count", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Area", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Blend Colours",
      "Description": "Interpolate (blend) between two colours.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Colour A", "DataType": "Colour", "IsOptional": false },
        { "Name": "Colour B", "DataType": "Colour", "IsOptional": false },
        { "Name": "Factor", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Colour", "DataType": "Colour", "IsOptional": false }]
    },
    {
      "Name": "XZ Plane",
      "Description": "World XZ plane.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Origin", "DataType": "Point", "IsOptional": false }],
      "Outputs": [{ "Name": "Plane", "DataType": "Plane", "IsOptional": false }]
    },
    {
      "Name": "Line Charge",
      "Description": "Create a field due to a line charge",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Line", "DataType": "Line", "IsOptional": false },
        { "Name": "Charge", "DataType": "Number", "IsOptional": false },
        { "Name": "Bounds", "DataType": "Box", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Field", "DataType": "Field", "IsOptional": false }]
    },
    {
      "Name": "Horizontal Frames",
      "Description": "Generate a number of equally spaced, horizontally aligned curve frames.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Frames", "DataType": "Plane", "IsOptional": false },
        { "Name": "Parameters", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Deconstruct Brep",
      "Description": "Deconstruct a brep into its constituent parts.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Brep", "DataType": "Brep", "IsOptional": false }],
      "Outputs": [
        { "Name": "Faces", "DataType": "Surface", "IsOptional": false },
        { "Name": "Edges", "DataType": "Curve", "IsOptional": false },
        { "Name": "Vertices", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Evaluate Annotation Text",
      "Description": "Get the annotation value with text field expressions evaluated",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Annotation", "DataType": "Geometry", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Value", "DataType": "Text", "IsOptional": false }]
    },
    {
      "Name": "Set Union",
      "Description": "Creates the union of two sets (the collection of unique objects present in either set).",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Set A", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Set B", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Union", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Extrude Linear",
      "Description": "Extrude curves and surfaces along a straight path.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Profile", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Orientation (P)", "DataType": "Plane", "IsOptional": false },
        { "Name": "Axis", "DataType": "Line", "IsOptional": false },
        { "Name": "Orientation (A)", "DataType": "Plane", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Extrusion", "DataType": "Brep", "IsOptional": false }
      ]
    },
    {
      "Name": "Match Text Filter",
      "Description": "Create a filter that determines if a text value matches a pattern.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Key", "DataType": "Text", "IsOptional": false },
        { "Name": "Pattern", "DataType": "Text", "IsOptional": false },
        { "Name": "Case", "DataType": "Boolean", "IsOptional": true },
        { "Name": "Culture", "DataType": "Culture", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Filter", "DataType": "Predicate", "IsOptional": false }
      ]
    },
    {
      "Name": "Pull Point",
      "Description": "Pull a point to a variety of geometry.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Closest Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Distance", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Query Model Location",
      "Description": "Query a Rhino document for its location on earth",
      "IsCoreComponent": true,
      "Inputs": [],
      "Outputs": [
        { "Name": "Location", "DataType": "Earth Location", "IsOptional": false }
      ]
    },
    {
      "Name": "Brep | Brep",
      "Description": "Solve intersection events for two Breps.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Brep A", "DataType": "Brep", "IsOptional": false },
        { "Name": "Brep B", "DataType": "Brep", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Curves", "DataType": "Curve", "IsOptional": false },
        { "Name": "Points", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Query Render Options",
      "Description": "Query a Rhino document for its render options",
      "IsCoreComponent": true,
      "Inputs": [],
      "Outputs": [
        { "Name": "Sun", "DataType": "Data", "IsOptional": false },
        { "Name": "Skylight", "DataType": "Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Construct Domain²",
      "Description": "Create a two-dimensinal domain from four numbers.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "U min", "DataType": "Number", "IsOptional": false },
        { "Name": "U max", "DataType": "Number", "IsOptional": false },
        { "Name": "V min", "DataType": "Number", "IsOptional": false },
        { "Name": "V max", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "2D Domain", "DataType": "Domain²", "IsOptional": false }
      ]
    },
    {
      "Name": "Unit Z",
      "Description": "Unit vector parallel to the world {z} axis.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Factor", "DataType": "Number", "IsOptional": false }],
      "Outputs": [
        { "Name": "Unit vector", "DataType": "Vector", "IsOptional": false }
      ]
    },
    {
      "Name": "Split",
      "Description": "Split a compound transformation into fragments.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Fragments", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Trim with Breps",
      "Description": "Trim a curve with multiple Breps.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Brep", "DataType": "Brep", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Inside", "DataType": "Curve", "IsOptional": false },
        { "Name": "Outside", "DataType": "Curve", "IsOptional": false }
      ]
    },
    {
      "Name": "Query Model Textures",
      "Description": "Query a Rhino document for all available render textures",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Name", "DataType": "Text Pattern", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Textures", "DataType": "Model Texture", "IsOptional": false }
      ]
    },
    {
      "Name": "Order Content",
      "Description": "Order content by key",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Content", "DataType": "Data", "IsOptional": false },
        { "Name": "Key", "DataType": "Text", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Content", "DataType": "Data", "IsOptional": false },
        { "Name": "Values", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Angular Dimensions (Mesh)",
      "Description": "Create angle annotations for all mesh corners.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Text", "DataType": "Text", "IsOptional": false },
        { "Name": "Size", "DataType": "Number", "IsOptional": false },
        { "Name": "Length Factor", "DataType": "Number", "IsOptional": false },
        { "Name": "Minimum Angle", "DataType": "Number", "IsOptional": true },
        { "Name": "Maximum Angle", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": []
    },
    {
      "Name": "Simplify Curve",
      "Description": "Simplify a curve.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Tolerance", "DataType": "Number", "IsOptional": true },
        { "Name": "Angle Tolerance", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Simplified", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Quadrangulate",
      "Description": "Quadrangulate as many triangles as possible in a mesh",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Angle", "DataType": "Number", "IsOptional": false },
        { "Name": "Ratio", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Triangle Trigonometry",
      "Description": "Generic triangle trigonometry",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Alpha", "DataType": "Number", "IsOptional": true },
        { "Name": "Beta", "DataType": "Number", "IsOptional": true },
        { "Name": "Gamma", "DataType": "Number", "IsOptional": true },
        { "Name": "A length", "DataType": "Number", "IsOptional": true },
        { "Name": "B length", "DataType": "Number", "IsOptional": true },
        { "Name": "C length", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Alpha", "DataType": "Number", "IsOptional": false },
        { "Name": "Beta", "DataType": "Number", "IsOptional": false },
        { "Name": "Gamma", "DataType": "Number", "IsOptional": false },
        { "Name": "A length", "DataType": "Number", "IsOptional": false },
        { "Name": "B length", "DataType": "Number", "IsOptional": false },
        { "Name": "C length", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Multiple Curves",
      "Description": "Solve intersection events for multiple curves.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Curves", "DataType": "Curve", "IsOptional": false }],
      "Outputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Index A", "DataType": "Integer", "IsOptional": false },
        { "Name": "Index B", "DataType": "Integer", "IsOptional": false },
        { "Name": "Param A", "DataType": "Number", "IsOptional": false },
        { "Name": "Param B", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Cull Nth",
      "Description": "Cull (remove) every Nth element in a list.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "List", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Cull frequency", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "List", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Rebuild Curve",
      "Description": "Rebuild a curve with a specific number of control-points.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Degree", "DataType": "Integer", "IsOptional": true },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "Tangents", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Curve", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Vector 2Pt",
      "Description": "Create a vector between two points.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point A", "DataType": "Point", "IsOptional": false },
        { "Name": "Point B", "DataType": "Point", "IsOptional": false },
        { "Name": "Unitize", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Vector", "DataType": "Vector", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Distance",
      "Description": "Compute Euclidean distance between two point coordinates.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point A", "DataType": "Point", "IsOptional": false },
        { "Name": "Point B", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Distance", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "IsoVist Ray",
      "Description": "Compute a single isovist sample at a location",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Sample", "DataType": "Line", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false },
        { "Name": "Obstacles", "DataType": "Geometry", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Distance", "DataType": "Number", "IsOptional": false },
        { "Name": "Index", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Range",
      "Description": "Create a range of numbers.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Domain", "DataType": "Domain", "IsOptional": false },
        { "Name": "Steps", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Range", "DataType": "Number", "IsOptional": false }]
    },
    {
      "Name": "Construct Path",
      "Description": "Construct a data tree branch path.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Indices", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Branch", "DataType": "Path", "IsOptional": false }]
    },
    {
      "Name": "Twist",
      "Description": "Deforms objects by twisting them around an axis.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Axis", "DataType": "Line", "IsOptional": false },
        { "Name": "Angle", "DataType": "Number", "IsOptional": false },
        { "Name": "Infinite", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Rigid", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false }
      ]
    },
    {
      "Name": "SubD Vertex Tags",
      "Description": "Set the vertex tags of a SubD shape.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "SubD", "DataType": "SubD", "IsOptional": false },
        { "Name": "Vertex Tag", "DataType": "Text", "IsOptional": false },
        { "Name": "Vertex IDs", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "SubD", "DataType": "SubD", "IsOptional": false }]
    },
    {
      "Name": "Dash Pattern",
      "Description": "Convert a curve to a dash pattern.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Pattern", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Dashes", "DataType": "Curve", "IsOptional": false },
        { "Name": "Gaps", "DataType": "Curve", "IsOptional": false }
      ]
    },
    {
      "Name": "Consecutive Domains",
      "Description": "Create consecutive domains from a list of numbers",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Numbers", "DataType": "Number", "IsOptional": false },
        { "Name": "Additive", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Domains", "DataType": "Domain", "IsOptional": false }
      ]
    },
    {
      "Name": "Mesh Intersection",
      "Description": "Perform a solid intersection on a set of meshes",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Meshes A", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Meshes B", "DataType": "Mesh", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Result", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Query Model Block Definitions",
      "Description": "Query a Rhino document for all available block definitions",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Name", "DataType": "Text Pattern", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Block Definitions",
          "DataType": "Model Block Definition",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "Extrude",
      "Description": "Extrude points, curves and surfaces along a vector.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Base", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Direction", "DataType": "Vector", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Extrusion", "DataType": "Geometry", "IsOptional": false }
      ]
    },
    {
      "Name": "Make2D",
      "Description": "Create a hidden line drawing from geometry",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Clipping Planes", "DataType": "Plane", "IsOptional": true },
        { "Name": "View", "DataType": "View", "IsOptional": false },
        { "Name": "Tangent Edges", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Tangent Seams", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Visible curves", "DataType": "Curve", "IsOptional": false },
        { "Name": "Visible index", "DataType": "Integer", "IsOptional": false },
        { "Name": "Visible type", "DataType": "Text", "IsOptional": false },
        { "Name": "Hidden curves", "DataType": "Curve", "IsOptional": false },
        { "Name": "Hidden index", "DataType": "Integer", "IsOptional": false },
        { "Name": "Hidden type", "DataType": "Text", "IsOptional": false }
      ]
    },
    {
      "Name": "Perp Frames",
      "Description": "Generate a number of equally spaced, perpendicular frames along a curve.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "Align", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Frames", "DataType": "Plane", "IsOptional": false },
        { "Name": "Parameters", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Create Set",
      "Description": "Creates the valid set from a list of items (a valid set only contains distinct elements).",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "List", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Set", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Map", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Tree Statistics",
      "Description": "Get some statistics regarding a data tree.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Tree", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Paths", "DataType": "Path", "IsOptional": false },
        { "Name": "Length", "DataType": "Integer", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Split List",
      "Description": "Split a list into separate parts.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "List", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Index", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "List A", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "List B", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Deconstruct",
      "Description": "Deconstruct a point into its component parts.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Point", "DataType": "Point", "IsOptional": false }],
      "Outputs": [
        { "Name": "X component", "DataType": "Number", "IsOptional": false },
        { "Name": "Y component", "DataType": "Number", "IsOptional": false },
        { "Name": "Z component", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Barycentric",
      "Description": "Create a point from barycentric {u,v,w} coordinates",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point A", "DataType": "Point", "IsOptional": false },
        { "Name": "Point B", "DataType": "Point", "IsOptional": false },
        { "Name": "Point C", "DataType": "Point", "IsOptional": false },
        { "Name": "Coordinate U", "DataType": "Number", "IsOptional": false },
        { "Name": "Coordinate V", "DataType": "Number", "IsOptional": false },
        { "Name": "Coordinate W", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Point", "DataType": "Point", "IsOptional": false }]
    },
    {
      "Name": "Rectangle 3Pt",
      "Description": "Create a rectangle from three points",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point A", "DataType": "Point", "IsOptional": false },
        { "Name": "Point B", "DataType": "Point", "IsOptional": false },
        { "Name": "Point C", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Rectangle", "DataType": "Rectangle", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Subtraction",
      "Description": "Mathematical subtraction",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "A", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "B", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Division",
      "Description": "Mathematical division",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "A", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "B", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Mirror Curve",
      "Description": "Mirror a shape in a freeform curve.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Tangent", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false }
      ]
    },
    {
      "Name": "Sporph",
      "Description": "Deforms an object from a source surface to a target surface",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Base", "DataType": "Surface", "IsOptional": false },
        { "Name": "Parameter", "DataType": "Point", "IsOptional": false },
        { "Name": "Target", "DataType": "Surface", "IsOptional": false },
        { "Name": "Parameter", "DataType": "Point", "IsOptional": false },
        { "Name": "Rigid", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false }
      ]
    },
    {
      "Name": "Adjust Plane",
      "Description": "Adjust a plane to match a new normal direction",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Normal", "DataType": "Vector", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Plane", "DataType": "Plane", "IsOptional": false }]
    },
    {
      "Name": "Convex Hull",
      "Description": "Compute the planar, convex hull for a collection of points",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Hull", "DataType": "Curve", "IsOptional": false },
        { "Name": "Hull(z)", "DataType": "Curve", "IsOptional": false },
        { "Name": "Indices", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Arc SED",
      "Description": "Create an arc defined by start point, end point and a tangent vector.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Start", "DataType": "Point", "IsOptional": false },
        { "Name": "End", "DataType": "Point", "IsOptional": false },
        { "Name": "Direction", "DataType": "Vector", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Arc", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Voronoi Groups",
      "Description": "Compute a custom set of nested voronoi diagrams.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Boundary", "DataType": "Rectangle", "IsOptional": false },
        { "Name": "Generation 1", "DataType": "Point", "IsOptional": true },
        { "Name": "Generation 2", "DataType": "Point", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Diagram 1", "DataType": "Curve", "IsOptional": false },
        { "Name": "Diagram 2", "DataType": "Curve", "IsOptional": false }
      ]
    },
    {
      "Name": "Cull Vertices",
      "Description": "Cull vertices from a mesh",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Pattern", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Shrink", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Modified Arc",
      "Description": "Create an arc based on another arc.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Arc", "DataType": "Arc", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": true },
        { "Name": "Angle", "DataType": "Domain", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Arc", "DataType": "Arc", "IsOptional": false }]
    },
    {
      "Name": "Expression",
      "Description": "Evaluate an expression",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Variable x",
          "DataType": "Expression Variant",
          "IsOptional": true
        },
        {
          "Name": "Variable y",
          "DataType": "Expression Variant",
          "IsOptional": true
        }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Hide Model Layer",
      "Description": "Defines layer visibility for model viewports and new details.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Layer", "DataType": "Model Layer", "IsOptional": false },
        { "Name": "Model", "DataType": "Boolean", "IsOptional": true },
        { "Name": "New Detail", "DataType": "Boolean", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Layer", "DataType": "Model Layer", "IsOptional": false },
        { "Name": "Model", "DataType": "Boolean", "IsOptional": false },
        { "Name": "New Detail", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Weld Mesh",
      "Description": "Weld (merge) creases in a mesh",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Angle", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Result", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Box Array",
      "Description": "Create a box array of geometry.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": true },
        { "Name": "Cell", "DataType": "Box", "IsOptional": false },
        { "Name": "X Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "Y Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "Z Count", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Arc 3Pt",
      "Description": "Create an arc through three points.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point A", "DataType": "Point", "IsOptional": false },
        { "Name": "Point B", "DataType": "Point", "IsOptional": false },
        { "Name": "Point C", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Arc", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Factorial",
      "Description": "Returns the factorial of an integer.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Number", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Factorial", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Addition",
      "Description": "Mathematical addition",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "A", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "B", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Box Corners",
      "Description": "Extract all 8 corners of a box.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Box", "DataType": "Box", "IsOptional": false }],
      "Outputs": [
        { "Name": "Corner A", "DataType": "Point", "IsOptional": false },
        { "Name": "Corner B", "DataType": "Point", "IsOptional": false },
        { "Name": "Corner C", "DataType": "Point", "IsOptional": false },
        { "Name": "Corner D", "DataType": "Point", "IsOptional": false },
        { "Name": "Corner E", "DataType": "Point", "IsOptional": false },
        { "Name": "Corner F", "DataType": "Point", "IsOptional": false },
        { "Name": "Corner G", "DataType": "Point", "IsOptional": false },
        { "Name": "Corner H", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "RandomEx",
      "Description": "Generate random data between extremes.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Min", "DataType": "Integer", "IsOptional": false },
        { "Name": "Max", "DataType": "Integer", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "Seed", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Values", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Length Parameter",
      "Description": "Measure the length of a curve to and from a parameter.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Parameter", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Length", "DataType": "Number", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Retrim",
      "Description": "Retrim a surface based on 3D trim data from another surface.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Source", "DataType": "Surface", "IsOptional": false },
        { "Name": "Target", "DataType": "Surface", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false }
      ]
    },
    {
      "Name": "Sinc",
      "Description": "Compute the sinc (Sinus Cardinalis) of a value.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Value", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Negative",
      "Description": "Compute the negative of a value.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Value", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Convert Units",
      "Description": "Performs a unit conversion on input Data",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Data", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Source", "DataType": "Unit System", "IsOptional": false },
        { "Name": "Target", "DataType": "Unit System", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Data", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Fit Curve",
      "Description": "Fit a curve along another curve.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Degree", "DataType": "Integer", "IsOptional": true },
        { "Name": "Tolerance", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Curve", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Voronoi",
      "Description": "Planar voronoi diagram for a collection of points",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": true },
        { "Name": "Boundary", "DataType": "Rectangle", "IsOptional": true },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Cells", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Point Polar",
      "Description": "Create a point from polar {phi,theta,offset} coordinates.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Base plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "XY angle", "DataType": "Number", "IsOptional": false },
        { "Name": "Z angle", "DataType": "Number", "IsOptional": false },
        { "Name": "Offset", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Point", "DataType": "Point", "IsOptional": false }]
    },
    {
      "Name": "Colour HSL",
      "Description": "Create a colour from floating point {HSL} channels.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Alpha", "DataType": "Number", "IsOptional": false },
        { "Name": "Hue", "DataType": "Number", "IsOptional": false },
        { "Name": "Saturation", "DataType": "Number", "IsOptional": false },
        { "Name": "Luminance", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Colour", "DataType": "Colour", "IsOptional": false }]
    },
    {
      "Name": "Point Cloud Contour",
      "Description": "Create a series of planar curves by intersecting planes with a cloud of points",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Cloud", "DataType": "Point Cloud", "IsOptional": false },
        { "Name": "Start", "DataType": "Point", "IsOptional": true },
        { "Name": "Direction", "DataType": "Vector", "IsOptional": true },
        { "Name": "Distance", "DataType": "Number", "IsOptional": true },
        { "Name": "Limit", "DataType": "Boolean", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Curves", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Ungroup",
      "Description": "Ungroup a set of objects",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Group", "DataType": "Group", "IsOptional": false }],
      "Outputs": [
        { "Name": "Objects", "DataType": "Geometry", "IsOptional": false }
      ]
    },
    {
      "Name": "Radians",
      "Description": "Convert an angle specified in degrees to radians",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Degrees", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Radians", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Round",
      "Description": "Round a floating point value.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Number", "DataType": "Number", "IsOptional": false }],
      "Outputs": [
        { "Name": "Nearest", "DataType": "Integer", "IsOptional": false },
        { "Name": "Floor", "DataType": "Integer", "IsOptional": false },
        { "Name": "Ceiling", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Deconstruct Vector",
      "Description": "Deconstruct a vector into its component parts.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Vector", "DataType": "Vector", "IsOptional": false }],
      "Outputs": [
        { "Name": "X component", "DataType": "Number", "IsOptional": false },
        { "Name": "Y component", "DataType": "Number", "IsOptional": false },
        { "Name": "Z component", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Mesh Closest Point",
      "Description": "Finds the closest point on a mesh",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Index", "DataType": "Integer", "IsOptional": false },
        { "Name": "Parameter", "DataType": "Mesh Parameter", "IsOptional": false }
      ]
    },
    {
      "Name": "Curve Depth",
      "Description": "Measure the depth of a curve.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Minimum", "DataType": "Number", "IsOptional": false },
        { "Name": "Maximum", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        {
          "Name": "Minimum Parameter",
          "DataType": "Number",
          "IsOptional": false
        },
        { "Name": "Minimum Depth", "DataType": "Number", "IsOptional": false },
        {
          "Name": "Maximum Parameter",
          "DataType": "Number",
          "IsOptional": false
        },
        { "Name": "Maximum Depth", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "OcTree",
      "Description": "A three-dimensional oc-tree structure",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Square", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Group", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Boxes", "DataType": "Box", "IsOptional": false },
        { "Name": "Points", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Merge 08",
      "Description": "Merge eight streams into one.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Stream A", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream B", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream C", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream D", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream E", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream F", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream G", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream H", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Stream", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Point In Curve",
      "Description": "Test a point for closed curve containment.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Relationship", "DataType": "Integer", "IsOptional": false },
        { "Name": "Point", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Item Index",
      "Description": "Retrieve the index of a certain item in a list.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "List", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Item", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Index", "DataType": "Integer", "IsOptional": false }]
    },
    {
      "Name": "Exposure",
      "Description": "Solve mesh exposure for a collection of energy rays and obstructions.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Shape", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Obstructions", "DataType": "Mesh", "IsOptional": true },
        { "Name": "Rays", "DataType": "Vector", "IsOptional": false },
        { "Name": "Energy", "DataType": "Number", "IsOptional": true },
        { "Name": "Lambert", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Exposure", "DataType": "Number", "IsOptional": false },
        { "Name": "Range", "DataType": "Domain", "IsOptional": false }
      ]
    },
    {
      "Name": "Loft",
      "Description": "Create a lofted surface through a set of section curves.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curves", "DataType": "Curve", "IsOptional": false },
        { "Name": "Options", "DataType": "Loft Options", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Loft", "DataType": "Brep", "IsOptional": false }]
    },
    {
      "Name": "Evaluate Field",
      "Description": "Evaluate a field at a point",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Field", "DataType": "Field", "IsOptional": false },
        { "Name": "Point", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Tensor", "DataType": "Vector", "IsOptional": false },
        { "Name": "Strength", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Surface | Line",
      "Description": "Solve intersection events for a surface and a line.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false },
        { "Name": "Line", "DataType": "Line", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Curves", "DataType": "Curve", "IsOptional": false },
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "UV Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Normal", "DataType": "Vector", "IsOptional": false }
      ]
    },
    {
      "Name": "Light Attributes",
      "Description": "Modify or inspect the attributes of a light.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Light", "DataType": "Light", "IsOptional": false },
        { "Name": "Enabled", "DataType": "Boolean", "IsOptional": true },
        { "Name": "Colour", "DataType": "Colour", "IsOptional": true },
        { "Name": "Intensity", "DataType": "Number", "IsOptional": true },
        { "Name": "Shadow Intensity", "DataType": "Number", "IsOptional": true },
        { "Name": "Falloff", "DataType": "Integer", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Light", "DataType": "Light", "IsOptional": false },
        { "Name": "Enabled", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Colour", "DataType": "Colour", "IsOptional": false },
        { "Name": "Intensity", "DataType": "Number", "IsOptional": false },
        { "Name": "Shadow Intensity", "DataType": "Number", "IsOptional": false },
        { "Name": "Falloff", "DataType": "Integer", "IsOptional": true }
      ]
    },
    {
      "Name": "Point Oriented",
      "Description": "Create a point from plane {u,v,w} coordinates.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Base plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "U component", "DataType": "Number", "IsOptional": false },
        { "Name": "V component", "DataType": "Number", "IsOptional": false },
        { "Name": "W component", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Point", "DataType": "Point", "IsOptional": false }]
    },
    {
      "Name": "Import SHP",
      "Description": "Import data from GIS *.shp files.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "File", "DataType": "Text", "IsOptional": false }],
      "Outputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Curves", "DataType": "Curve", "IsOptional": false },
        { "Name": "Regions", "DataType": "Brep", "IsOptional": false }
      ]
    },
    {
      "Name": "Curvature",
      "Description": "Evaluate the curvature of a curve at a specified parameter.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Parameter", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Curvature", "DataType": "Vector", "IsOptional": false },
        { "Name": "Curvature", "DataType": "Curve", "IsOptional": false }
      ]
    },
    {
      "Name": "Deconstruct Face",
      "Description": "Deconstruct a mesh face into its four corner indices.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Face", "DataType": "Mesh face", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Corner A", "DataType": "Integer", "IsOptional": false },
        { "Name": "Corner B", "DataType": "Integer", "IsOptional": false },
        { "Name": "Corner C", "DataType": "Integer", "IsOptional": false },
        { "Name": "Corner D", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Derivatives",
      "Description": "Evaluate the derivatives of a curve at a specified parameter.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Parameter", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "First derivative", "DataType": "Vector", "IsOptional": false }
      ]
    },
    {
      "Name": "Brep Wireframe",
      "Description": "Extract the wireframe curves of a brep.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Brep", "DataType": "Brep", "IsOptional": false },
        { "Name": "Density", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Wireframe", "DataType": "Curve", "IsOptional": false }
      ]
    },
    {
      "Name": "Merge 06",
      "Description": "Merge six streams into one.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Stream A", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream B", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream C", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream D", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream E", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream F", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Stream", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Drafting Scale",
      "Description": "Get or set the scale factor for annotations, linetypes, and/or hatch patterns.",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Annotation Model Scaling",
          "DataType": "Boolean",
          "IsOptional": true
        },
        {
          "Name": "Annotation Layout Scaling",
          "DataType": "Boolean",
          "IsOptional": true
        },
        { "Name": "Hatch Scaling", "DataType": "Boolean", "IsOptional": true },
        { "Name": "Hatch Scale", "DataType": "Number", "IsOptional": true },
        { "Name": "Linetype Scale", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Annotation Model Scaling",
          "DataType": "Boolean",
          "IsOptional": false
        },
        {
          "Name": "Annotation Layout Scaling",
          "DataType": "Boolean",
          "IsOptional": false
        },
        { "Name": "Hatch Scaling", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Hatch Scale", "DataType": "Number", "IsOptional": false },
        { "Name": "Linetype Scale", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Taper",
      "Description": "Deforms objects toward or away from an axis",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Axis", "DataType": "Line", "IsOptional": false },
        { "Name": "Start", "DataType": "Number", "IsOptional": false },
        { "Name": "End", "DataType": "Number", "IsOptional": false },
        { "Name": "Flat", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Infinite", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Rigid", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false }
      ]
    },
    {
      "Name": "Square Root",
      "Description": "Compute the square root of a value",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Value", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Field Line",
      "Description": "Compute the field line through a certain point",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Field", "DataType": "Field", "IsOptional": false },
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Steps", "DataType": "Integer", "IsOptional": false },
        { "Name": "Accuracy", "DataType": "Number", "IsOptional": false },
        { "Name": "Method", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Curve", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Context Bake",
      "Description": "Geometry for baking at the end of the GrasshopperPlayer command.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Content", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": []
    },
    {
      "Name": "Extrude Angled",
      "Description": "Extrude a planar polyline at angles",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Polyline", "DataType": "Curve", "IsOptional": false },
        { "Name": "Base height", "DataType": "Number", "IsOptional": false },
        { "Name": "Top height", "DataType": "Number", "IsOptional": false },
        { "Name": "Angles", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Shape", "DataType": "Brep", "IsOptional": false }]
    },
    {
      "Name": "Smaller Than",
      "Description": "Smaller than (or equal to)",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "First Number", "DataType": "Number", "IsOptional": false },
        { "Name": "Second Number", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Smaller than", "DataType": "Boolean", "IsOptional": false },
        { "Name": "… or Equal to", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "ShrinkWrap",
      "Description": "ShrinkWrap a mesh or point cloud object",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Edge Length", "DataType": "Number", "IsOptional": true },
        { "Name": "Offset", "DataType": "Number", "IsOptional": false },
        { "Name": "Smoothing", "DataType": "Integer", "IsOptional": false },
        { "Name": "Optimization", "DataType": "Integer", "IsOptional": false },
        { "Name": "Fill Holes", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Box Properties",
      "Description": "Get some properties of a box",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Box", "DataType": "Box", "IsOptional": false }],
      "Outputs": [
        { "Name": "Center", "DataType": "Point", "IsOptional": false },
        { "Name": "Diagonal", "DataType": "Vector", "IsOptional": false },
        { "Name": "Area", "DataType": "Number", "IsOptional": false },
        { "Name": "Volume", "DataType": "Number", "IsOptional": false },
        { "Name": "Degeneracy", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Explode",
      "Description": "Explode a curve into smaller segments.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Recursive", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Segments", "DataType": "Curve", "IsOptional": false },
        { "Name": "Vertices", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Centroid",
      "Description": "Generate the triangle centroid from medians.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point A", "DataType": "Point", "IsOptional": false },
        { "Name": "Point B", "DataType": "Point", "IsOptional": false },
        { "Name": "Point C", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Centroid", "DataType": "Point", "IsOptional": false },
        { "Name": "Median AB", "DataType": "Line", "IsOptional": false },
        { "Name": "Median BC", "DataType": "Line", "IsOptional": false },
        { "Name": "Median CA", "DataType": "Line", "IsOptional": false }
      ]
    },
    {
      "Name": "Mesh Split",
      "Description": "Mesh Mesh split",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Splitters", "DataType": "Mesh", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Result", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Plane Closest Point",
      "Description": "Find the closest point on a plane.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "UV Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Distance", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Sphere 4Pt",
      "Description": "Create a spherical surface from 4 points.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point 1", "DataType": "Point", "IsOptional": false },
        { "Name": "Point 2", "DataType": "Point", "IsOptional": false },
        { "Name": "Point 3", "DataType": "Point", "IsOptional": false },
        { "Name": "Point 4", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Center", "DataType": "Point", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false },
        { "Name": "Sphere", "DataType": "Surface", "IsOptional": false }
      ]
    },
    {
      "Name": "Text Case",
      "Description": "Change the CaSiNg of a piece of text",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Text", "DataType": "Text", "IsOptional": false },
        { "Name": "Culture", "DataType": "Culture", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Upper Case", "DataType": "Text", "IsOptional": false },
        { "Name": "Lower Case", "DataType": "Text", "IsOptional": false }
      ]
    },
    {
      "Name": "Model Basic Environment",
      "Description": "Model Basic Environment",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Environment",
          "DataType": "Model Environment",
          "IsOptional": true
        },
        { "Name": "Name", "DataType": "Text", "IsOptional": true },
        { "Name": "Background Colour", "DataType": "Colour", "IsOptional": true },
        { "Name": "Projection", "DataType": "Integer", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Environment",
          "DataType": "Model Environment",
          "IsOptional": false
        },
        { "Name": "Name", "DataType": "Text", "IsOptional": false },
        {
          "Name": "Background Colour",
          "DataType": "Colour",
          "IsOptional": false
        },
        { "Name": "Projection", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Offset Surface",
      "Description": "Offset a surface by a fixed amount.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false },
        { "Name": "Distance", "DataType": "Number", "IsOptional": false },
        { "Name": "Retrim", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false }
      ]
    },
    {
      "Name": "Break Field",
      "Description": "Break a field into individual elements",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Field", "DataType": "Field", "IsOptional": false }],
      "Outputs": [{ "Name": "Fields", "DataType": "Field", "IsOptional": false }]
    },
    {
      "Name": "Mesh Eval",
      "Description": "Evaluate a mesh at a given parameter",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Parameter", "DataType": "Mesh Parameter", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Normal", "DataType": "Vector", "IsOptional": false },
        { "Name": "Colour", "DataType": "Colour", "IsOptional": false }
      ]
    },
    {
      "Name": "Sub List",
      "Description": "Extract a subset from a list.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "List", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Domain", "DataType": "Domain", "IsOptional": false },
        { "Name": "Wrap", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "List", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Index", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Model Layer",
      "Description": "Model Layer",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Layer", "DataType": "Model Layer", "IsOptional": true },
        { "Name": "Name", "DataType": "Text", "IsOptional": true },
        { "Name": "Hidden", "DataType": "Boolean", "IsOptional": true },
        { "Name": "Locked", "DataType": "Boolean", "IsOptional": true },
        { "Name": "Display Colour", "DataType": "Colour", "IsOptional": true },
        { "Name": "Material", "DataType": "Model Material", "IsOptional": true },
        { "Name": "Linetype", "DataType": "Model Linetype", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Layer", "DataType": "Model Layer", "IsOptional": false },
        { "Name": "Name", "DataType": "Text", "IsOptional": false },
        { "Name": "Hidden", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Locked", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Display Colour", "DataType": "Colour", "IsOptional": false },
        { "Name": "Material", "DataType": "Model Material", "IsOptional": false },
        { "Name": "Linetype", "DataType": "Model Linetype", "IsOptional": false }
      ]
    },
    {
      "Name": "ArcTangent",
      "Description": "Compute the angle whose tangent is the specified value.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Value", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Angle",
      "Description": "Compute the angle between two vectors.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Vector A", "DataType": "Vector", "IsOptional": false },
        { "Name": "Vector B", "DataType": "Vector", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Angle", "DataType": "Number", "IsOptional": false },
        { "Name": "Reflex", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Query Model Materials",
      "Description": "Query a Rhino document for all available render materials",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Name", "DataType": "Text Pattern", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Materials", "DataType": "Model Material", "IsOptional": false }
      ]
    },
    {
      "Name": "Find similar member",
      "Description": "Find the most similar member in a set.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Data", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Set", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Hit", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Index", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Boundary Volume",
      "Description": "Create a closed polysurface from boundary surfaces",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Boundaries", "DataType": "Brep", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Solid", "DataType": "Brep", "IsOptional": false }]
    },
    {
      "Name": "Merge 04",
      "Description": "Merge four streams into one.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Stream A", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream B", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream C", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream D", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Stream", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Cap Holes",
      "Description": "Cap all planar holes in a Brep.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Brep", "DataType": "Brep", "IsOptional": false }],
      "Outputs": [{ "Name": "Brep", "DataType": "Brep", "IsOptional": false }]
    },
    {
      "Name": "Gate Xnor",
      "Description": "Perform boolean biconditional (XNOR gate).",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "A", "DataType": "Boolean", "IsOptional": false },
        { "Name": "B", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Natural logarithm",
      "Description": "Returns a factor of the natural number (e).",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Factor", "DataType": "Number", "IsOptional": false }],
      "Outputs": [{ "Name": "Output", "DataType": "Number", "IsOptional": false }]
    },
    {
      "Name": "Rotate",
      "Description": "Rotate a vector around an axis.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Vector", "DataType": "Vector", "IsOptional": false },
        { "Name": "Axis", "DataType": "Vector", "IsOptional": false },
        { "Name": "Angle", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Vector", "DataType": "Vector", "IsOptional": false }]
    },
    {
      "Name": "Offset on Srf",
      "Description": "Offset a curve on a surface with a specified distance.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Distance", "DataType": "Number", "IsOptional": false },
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Curve", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Rotate",
      "Description": "Rotate an object in a plane.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": true },
        { "Name": "Angle", "DataType": "Number", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Viewport Display",
      "Description": "Display viewport on canvas",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Visible", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Left", "DataType": "Integer", "IsOptional": false },
        { "Name": "Top", "DataType": "Integer", "IsOptional": false },
        { "Name": "Width", "DataType": "Integer", "IsOptional": false },
        { "Name": "Height", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": []
    },
    {
      "Name": "Osculating Circles",
      "Description": "Calculate the principal osculating circles of a surface at a {uv} coordinate.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false },
        { "Name": "Point", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "First circle", "DataType": "Curve", "IsOptional": false },
        { "Name": "Second circle", "DataType": "Curve", "IsOptional": false }
      ]
    },
    {
      "Name": "Curve | Plane",
      "Description": "Solve intersection events for a curve and a plane.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Params C", "DataType": "Number", "IsOptional": false },
        { "Name": "Params P", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Import Coordinates",
      "Description": "Import point coordinates from generic text files.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "File", "DataType": "Text", "IsOptional": false },
        { "Name": "Separator", "DataType": "Text", "IsOptional": false },
        { "Name": "Comment", "DataType": "Text", "IsOptional": true },
        { "Name": "X Index", "DataType": "Integer", "IsOptional": false },
        { "Name": "Y Index", "DataType": "Integer", "IsOptional": false },
        { "Name": "Z Index", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Points", "DataType": "Point", "IsOptional": false }]
    },
    {
      "Name": "Unflatten Tree",
      "Description": "Unflatten a data tree by moving items back into branches.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Tree", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Guide", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Tree", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Kaleidoscope",
      "Description": "Apply a kaleidoscope transformation to an object.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": true },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Segments", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Line 4Pt",
      "Description": "Create a line from four points.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Line", "DataType": "Line", "IsOptional": false },
        { "Name": "Point A", "DataType": "Point", "IsOptional": false },
        { "Name": "Point B", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Line", "DataType": "Line", "IsOptional": false }]
    },
    {
      "Name": "Annotation Leader Settings",
      "Description": "Annotation Style Leader Settings",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Leader Settings",
          "DataType": "Leader Settings",
          "IsOptional": true
        },
        {
          "Name": "Leader Curve Type",
          "DataType": "Integer",
          "IsOptional": true
        },
        { "Name": "Has Landing", "DataType": "Boolean", "IsOptional": true },
        { "Name": "Landing Length", "DataType": "Number", "IsOptional": true },
        { "Name": "View Oriented", "DataType": "Boolean", "IsOptional": true },
        {
          "Name": "Horizontal Text Alignment",
          "DataType": "Integer",
          "IsOptional": true
        },
        {
          "Name": "Vertical Text Alignment",
          "DataType": "Integer",
          "IsOptional": true
        },
        {
          "Name": "Leader Text Orientation",
          "DataType": "Integer",
          "IsOptional": true
        }
      ],
      "Outputs": [
        {
          "Name": "Leader Settings",
          "DataType": "Leader Settings",
          "IsOptional": false
        },
        {
          "Name": "Leader Curve Type",
          "DataType": "Integer",
          "IsOptional": false
        },
        { "Name": "Has Landing", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Landing Length", "DataType": "Number", "IsOptional": false },
        { "Name": "View Oriented", "DataType": "Boolean", "IsOptional": false },
        {
          "Name": "Horizontal Text Alignment",
          "DataType": "Integer",
          "IsOptional": false
        },
        {
          "Name": "Vertical Text Alignment",
          "DataType": "Integer",
          "IsOptional": false
        },
        {
          "Name": "Leader Text Orientation",
          "DataType": "Integer",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "Deconstruct Mesh",
      "Description": "Deconstruct a mesh into its component parts.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }],
      "Outputs": [
        { "Name": "Vertices", "DataType": "Point", "IsOptional": false },
        { "Name": "Faces", "DataType": "Mesh face", "IsOptional": false },
        { "Name": "Colours", "DataType": "Colour", "IsOptional": false },
        { "Name": "Normals", "DataType": "Vector", "IsOptional": false }
      ]
    },
    {
      "Name": "Voronoi 3D",
      "Description": "Volumetric voronoi diagram for a collection of points",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Box", "DataType": "Box", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Cells", "DataType": "Brep", "IsOptional": false },
        { "Name": "Boundary", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Replace Members",
      "Description": "Replace members in a set.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Set", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Find", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Replace", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Print Colour",
      "Description": "Object print colour attributes",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Print Colour",
          "DataType": "Print Colour",
          "IsOptional": true
        },
        { "Name": "Source", "DataType": "Integer", "IsOptional": true },
        { "Name": "Colour", "DataType": "Colour", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Print Colour",
          "DataType": "Print Colour",
          "IsOptional": false
        },
        { "Name": "Source", "DataType": "Integer", "IsOptional": false },
        { "Name": "Colour", "DataType": "Colour", "IsOptional": false }
      ]
    },
    {
      "Name": "Curve Side",
      "Description": "Find on which side of a curve a point exists",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Side", "DataType": "Integer", "IsOptional": false },
        { "Name": "Left", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Right", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Arc",
      "Description": "Create an arc defined by base plane, radius and angle domain.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false },
        { "Name": "Angle", "DataType": "Domain", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Arc", "DataType": "Arc", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Sweep1",
      "Description": "Create a sweep surface with one rail curve.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Rail", "DataType": "Curve", "IsOptional": false },
        { "Name": "Sections", "DataType": "Curve", "IsOptional": false },
        { "Name": "Miter", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Brep", "DataType": "Brep", "IsOptional": false }]
    },
    {
      "Name": "Collision One|Many",
      "Description": "Test for one|many collision between objects",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Collider", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Obstacles", "DataType": "Geometry", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Collision", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Index", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Construct Plane",
      "Description": "Construct a plane from an origin point and {x}, {y} axes.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Origin", "DataType": "Point", "IsOptional": false },
        { "Name": "X-Axis", "DataType": "Vector", "IsOptional": false },
        { "Name": "Y-Axis", "DataType": "Vector", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Plane", "DataType": "Plane", "IsOptional": false }]
    },
    {
      "Name": "Query Model Lights",
      "Description": "Query a Rhino document for all available lights",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Name", "DataType": "Text Pattern", "IsOptional": true },
        { "Name": "Layer", "DataType": "Text Pattern", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Lights", "DataType": "Model Object", "IsOptional": false }
      ]
    },
    {
      "Name": "Truncate",
      "Description": "Perform truncation of numerical extremes",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Input", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Truncation factor", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Polyline Collapse",
      "Description": "Collapse short segments in a polyline curve.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Polyline", "DataType": "Curve", "IsOptional": false },
        { "Name": "Tolerance", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Polyline", "DataType": "Curve", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Circle Fit",
      "Description": "Fit a circle to a collection of points.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Points", "DataType": "Point", "IsOptional": false }],
      "Outputs": [
        { "Name": "Circle", "DataType": "Circle", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false },
        { "Name": "Deviation", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Extrude Point",
      "Description": "Extrude curves and surfaces to a point.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Base", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Point", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Extrusion", "DataType": "Brep", "IsOptional": false }
      ]
    },
    {
      "Name": "Complex Argument",
      "Description": "Get the argument of a Complex number",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Complex", "DataType": "Complex", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Argument", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Perpendicular Display",
      "Description": "Display the perpendicularity of a field through a section",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Field", "DataType": "Field", "IsOptional": false },
        { "Name": "Section", "DataType": "Rectangle", "IsOptional": false },
        { "Name": "Samples", "DataType": "Integer", "IsOptional": false },
        { "Name": "Positive Colour", "DataType": "Colour", "IsOptional": false },
        { "Name": "Negative Colour", "DataType": "Colour", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Display", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Replace Paths",
      "Description": "Find & replace paths in a data tree",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Data", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Search", "DataType": "Text", "IsOptional": false },
        { "Name": "Replace", "DataType": "Path", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Data", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Horizontal Frame",
      "Description": "Get a horizontally aligned frame along a curve at a specified parameter.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Parameter", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Frame", "DataType": "Plane", "IsOptional": false }]
    },
    {
      "Name": "Mesh from SubD",
      "Description": "Get the approximation mesh of a SubD.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "SubD", "DataType": "SubD", "IsOptional": false },
        { "Name": "Density", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Unit System",
      "Description": "Unit System",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Unit System", "DataType": "Unit System", "IsOptional": false },
        { "Name": "Name", "DataType": "Text", "IsOptional": true },
        { "Name": "Factor", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Unit System", "DataType": "Unit System", "IsOptional": false },
        { "Name": "Name", "DataType": "Text", "IsOptional": false },
        { "Name": "Meters", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "SubD Control Polygon",
      "Description": "Extract the control polygon from a SubD.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "SubD", "DataType": "SubD", "IsOptional": false }],
      "Outputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Tree Item",
      "Description": "Retrieve a specific item from a data tree.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Tree", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Path", "DataType": "Path", "IsOptional": false },
        { "Name": "Index", "DataType": "Integer", "IsOptional": false },
        { "Name": "Wrap", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Element", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "TwoByFourJam",
      "Description": "Jam a two-by-four into a crooked room",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Room", "DataType": "Curve", "IsOptional": false },
        { "Name": "Width", "DataType": "Number", "IsOptional": false },
        { "Name": "Samples", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Rectangle", "DataType": "Rectangle", "IsOptional": false }
      ]
    },
    {
      "Name": "Pipe",
      "Description": "Create a pipe surface around a rail curve.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false },
        { "Name": "Caps", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Pipe", "DataType": "Brep", "IsOptional": false }]
    },
    {
      "Name": "Import Image",
      "Description": "Import image data from bmp, jpg or png files.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "File", "DataType": "Text", "IsOptional": false },
        { "Name": "Rectangle", "DataType": "Rectangle", "IsOptional": true },
        { "Name": "X Samples", "DataType": "Integer", "IsOptional": true },
        { "Name": "Y Samples", "DataType": "Integer", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Image", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Flow",
      "Description": "Re-aligns objects from a base curve to a target curve.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Base", "DataType": "Curve", "IsOptional": false },
        { "Name": "Target", "DataType": "Curve", "IsOptional": false },
        { "Name": "Reverse Base", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Reverse Target", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Stretch", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Rigid", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false }
      ]
    },
    {
      "Name": "Incentre",
      "Description": "Generate the triangle incentre from angle bisectors.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point A", "DataType": "Point", "IsOptional": false },
        { "Name": "Point B", "DataType": "Point", "IsOptional": false },
        { "Name": "Point C", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Incentre", "DataType": "Point", "IsOptional": false },
        { "Name": "Bisector A", "DataType": "Line", "IsOptional": false },
        { "Name": "Bisector B", "DataType": "Line", "IsOptional": false },
        { "Name": "Bisector C", "DataType": "Line", "IsOptional": false }
      ]
    },
    {
      "Name": "Flip",
      "Description": "Flip the normals of a surface based on local or remote geometry",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false },
        { "Name": "Guide", "DataType": "Surface", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false },
        { "Name": "Result", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Mesh Shadow",
      "Description": "Compute the shadow outline for a mesh object",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Light", "DataType": "Vector", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Outlines", "DataType": "Curve", "IsOptional": false }
      ]
    },
    {
      "Name": "Simple Mesh",
      "Description": "Create a mesh that represents a Brep as simply as possible",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Brep", "DataType": "Brep", "IsOptional": false }],
      "Outputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Repeat Data",
      "Description": "Repeat a pattern until it reaches a certain length.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Data", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Length", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Data", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "MetaBall(t) Custom",
      "Description": "2D Metaball isosurface by threshold and custom charge values",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Charge", "DataType": "Number", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Threshold", "DataType": "Number", "IsOptional": false },
        { "Name": "Accuracy", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Isocurve", "DataType": "Curve", "IsOptional": false }
      ]
    },
    {
      "Name": "MetaBall(t)",
      "Description": "2D Metaball isosurface by threshold",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Threshold", "DataType": "Number", "IsOptional": false },
        { "Name": "Accuracy", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Isocurve", "DataType": "Curve", "IsOptional": false }
      ]
    },
    {
      "Name": "Import Model Block Definition",
      "Description": "Import a file and create a new block definition.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "File Path", "DataType": "Text", "IsOptional": false },
        { "Name": "Update Type", "DataType": "Integer", "IsOptional": false },
        { "Name": "Name", "DataType": "Text", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Block Definition",
          "DataType": "Model Block Definition",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "Marker Dimension",
      "Description": "Create a text annotation at a point",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Line", "DataType": "Line", "IsOptional": false },
        { "Name": "Text", "DataType": "Text", "IsOptional": false },
        { "Name": "Size", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": []
    },
    {
      "Name": "Reduce Point Cloud",
      "Description": "Reduce the number of points in a point cloud",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Cloud", "DataType": "Point Cloud", "IsOptional": false },
        { "Name": "Samples", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Cloud", "DataType": "Point Cloud", "IsOptional": false }
      ]
    },
    {
      "Name": "Query Installed Fonts",
      "Description": "Query for all available fonts",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Font Family", "DataType": "Text Pattern", "IsOptional": true },
        { "Name": "Font Weight", "DataType": "Integer", "IsOptional": true },
        { "Name": "Font Style", "DataType": "Integer", "IsOptional": true },
        { "Name": "Font Stretch", "DataType": "Integer", "IsOptional": true },
        { "Name": "Symbol", "DataType": "Boolean", "IsOptional": true },
        { "Name": "Single Stroke", "DataType": "Boolean", "IsOptional": true },
        { "Name": "Engraving", "DataType": "Boolean", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Font", "DataType": "Font", "IsOptional": false }]
    },
    {
      "Name": "Curve Array",
      "Description": "Create an array of geometry along a curve.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": true },
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Offset Loose 3D",
      "Description": "Offset the control-points of a curve with a specified distance in 3D.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Distance", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Curve", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Power of E",
      "Description": "Raise E to the power of N.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Value", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Flip Plane",
      "Description": "Flip or swap the axes of a plane",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Reverse X", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Reverse Y", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Swap axes", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Plane", "DataType": "Plane", "IsOptional": false }]
    },
    {
      "Name": "Null Item",
      "Description": "Test a data item for null or invalidity",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Item", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Null Flags", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Invalid Flags", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Description", "DataType": "Text", "IsOptional": false }
      ]
    },
    {
      "Name": "Length",
      "Description": "Measure the length of a curve.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Curve", "DataType": "Curve", "IsOptional": false }],
      "Outputs": [{ "Name": "Length", "DataType": "Number", "IsOptional": false }]
    },
    {
      "Name": "4Point Surface",
      "Description": "Create a surface connecting three or four corner points.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Corner A", "DataType": "Point", "IsOptional": false },
        { "Name": "Corner B", "DataType": "Point", "IsOptional": false },
        { "Name": "Corner C", "DataType": "Point", "IsOptional": false },
        { "Name": "Corner D", "DataType": "Point", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false }
      ]
    },
    {
      "Name": "Object Details",
      "Description": "Retrieve some details about referenced Rhino objects.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Object", "DataType": "Geometry", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Referenced", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Available", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Name", "DataType": "Text", "IsOptional": false },
        { "Name": "Layer", "DataType": "Text", "IsOptional": false },
        { "Name": "Colour", "DataType": "Colour", "IsOptional": false },
        { "Name": "Guid", "DataType": "Guid", "IsOptional": false }
      ]
    },
    {
      "Name": "Text Field Expression",
      "Description": "Build a field expression which can be used as a text field on annotations or as a user text value.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Object", "DataType": "Model Object", "IsOptional": false },
        { "Name": "Key", "DataType": "Text", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Field Expression", "DataType": "Text", "IsOptional": false }
      ]
    },
    {
      "Name": "Populate Geometry",
      "Description": "Populate generic geometry with points",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "Seed", "DataType": "Integer", "IsOptional": false },
        { "Name": "Points", "DataType": "Point", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Population", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Fillet",
      "Description": "Fillet a curve at a parameter.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Parameter", "DataType": "Number", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Parameter", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Entwine",
      "Description": "Flatten and combine a collection of data streams",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Branch {0;0}",
          "DataType": "Generic Data",
          "IsOptional": true
        },
        {
          "Name": "Branch {0;1}",
          "DataType": "Generic Data",
          "IsOptional": true
        },
        { "Name": "Branch {0;2}", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Plane 3Pt",
      "Description": "Create a plane through three points.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point A", "DataType": "Point", "IsOptional": false },
        { "Name": "Point B", "DataType": "Point", "IsOptional": false },
        { "Name": "Point C", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Plane", "DataType": "Plane", "IsOptional": false }]
    },
    {
      "Name": "Leader",
      "Description": "Leader",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Leader", "DataType": "Leader", "IsOptional": true },
        { "Name": "Curve", "DataType": "Curve", "IsOptional": true },
        { "Name": "Text", "DataType": "Text", "IsOptional": true },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Leader", "DataType": "Leader", "IsOptional": false },
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Text", "DataType": "Text", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false }
      ]
    },
    {
      "Name": "Unify Mesh",
      "Description": "Unify the normals of a mesh",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }],
      "Outputs": [
        { "Name": "Result", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Compound",
      "Description": "Compound two transformations.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Transforms", "DataType": "Transform", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Compound", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "IsoVist",
      "Description": "Compute an isovist sampling at a location",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false },
        { "Name": "Obstacles", "DataType": "Geometry", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Distance", "DataType": "Number", "IsOptional": false },
        { "Name": "Index", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Golden Ratio",
      "Description": "Returns a factor of the golden ratio (Phi).",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Factor", "DataType": "Number", "IsOptional": false }],
      "Outputs": [{ "Name": "Output", "DataType": "Number", "IsOptional": false }]
    },
    {
      "Name": "Gate Not",
      "Description": "Perform boolean negation (NOT gate).",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "A", "DataType": "Boolean", "IsOptional": false }],
      "Outputs": [
        { "Name": "Result", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Face Normals",
      "Description": "Extract the normals and center points of all faces in a mesh",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }],
      "Outputs": [
        { "Name": "Centers", "DataType": "Point", "IsOptional": false },
        { "Name": "Normals", "DataType": "Vector", "IsOptional": false }
      ]
    },
    {
      "Name": "Fragment Patch",
      "Description": "Create a fragmented patch from a polyline boundary",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Boundary", "DataType": "Curve", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Patch", "DataType": "Brep", "IsOptional": false }]
    },
    {
      "Name": "Point List",
      "Description": "Displays details about lists of points",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": true },
        { "Name": "Size", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": []
    },
    {
      "Name": "ArcSine",
      "Description": "Compute the angle whose sine is the specified value.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Value", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Evaluate",
      "Description": "Evaluate an expression with a flexible number of variables.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Expression", "DataType": "Expression", "IsOptional": false },
        {
          "Name": "Variable x",
          "DataType": "Expression Variant",
          "IsOptional": true
        },
        {
          "Name": "Variable y",
          "DataType": "Expression Variant",
          "IsOptional": true
        }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Line + Pt",
      "Description": "Create a plane from a line and a point.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Line", "DataType": "Line", "IsOptional": false },
        { "Name": "Point", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Plane", "DataType": "Plane", "IsOptional": false }]
    },
    {
      "Name": "Curve Middle",
      "Description": "Get the point in the middle of a curve",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Curve", "DataType": "Curve", "IsOptional": false }],
      "Outputs": [
        { "Name": "Midpoint", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Curve Domain",
      "Description": "Measure and set the curve domain",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Domain", "DataType": "Domain", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Domain", "DataType": "Domain", "IsOptional": false }
      ]
    },
    {
      "Name": "Revolution",
      "Description": "Create a surface of revolution.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Axis", "DataType": "Line", "IsOptional": false },
        { "Name": "Domain", "DataType": "Domain", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Surface", "DataType": "Brep", "IsOptional": false }]
    },
    {
      "Name": "Multiplication",
      "Description": "Mathematical multiplication",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "A", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "B", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Geodesic",
      "Description": "Construct a surface geodesic between two points.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false },
        { "Name": "Start", "DataType": "Point", "IsOptional": false },
        { "Name": "End", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geodesic", "DataType": "Curve", "IsOptional": false }
      ]
    },
    {
      "Name": "Sort Text",
      "Description": "Sort a collection of text fragments",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Keys", "DataType": "Text", "IsOptional": false },
        { "Name": "Values", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Culture", "DataType": "Culture", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Keys", "DataType": "Text", "IsOptional": false },
        { "Name": "Values", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Plane Normal",
      "Description": "Create a plane perpendicular to a vector.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Origin", "DataType": "Point", "IsOptional": false },
        { "Name": "Z-Axis", "DataType": "Vector", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Plane", "DataType": "Plane", "IsOptional": false }]
    },
    {
      "Name": "Point Charge",
      "Description": "Create a field due to a point charge",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Charge", "DataType": "Number", "IsOptional": false },
        { "Name": "Decay", "DataType": "Number", "IsOptional": false },
        { "Name": "Bounds", "DataType": "Box", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Field", "DataType": "Field", "IsOptional": false }]
    },
    {
      "Name": "Connect Curves",
      "Description": "Connect a sequence of curves.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curves", "DataType": "Curve", "IsOptional": false },
        { "Name": "Continuity", "DataType": "Integer", "IsOptional": false },
        { "Name": "Close", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Bulge", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Curve", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Box Rectangle",
      "Description": "Create a box defined by a rectangle and a height.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Rectangle", "DataType": "Rectangle", "IsOptional": false },
        { "Name": "Height", "DataType": "Domain", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Box", "DataType": "Box", "IsOptional": false }]
    },
    {
      "Name": "Spotlight",
      "Description": "Spotlight",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Spotlight", "DataType": "Light", "IsOptional": true },
        { "Name": "Location", "DataType": "Point", "IsOptional": true },
        { "Name": "Target", "DataType": "Point", "IsOptional": true },
        {
          "Name": "Spotlight Hardness",
          "DataType": "Number",
          "IsOptional": true
        },
        { "Name": "Spotlight Angle", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Spotlight", "DataType": "Light", "IsOptional": false },
        { "Name": "Location", "DataType": "Point", "IsOptional": false },
        { "Name": "Target", "DataType": "Point", "IsOptional": false },
        {
          "Name": "Spotlight Hardness",
          "DataType": "Number",
          "IsOptional": false
        },
        { "Name": "Spotlight Angle", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Delete Faces",
      "Description": "Delete faces from a mesh",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Indices", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Circle CNR",
      "Description": "Create a circle defined by center, normal and radius.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Center", "DataType": "Point", "IsOptional": false },
        { "Name": "Normal", "DataType": "Vector", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Circle", "DataType": "Circle", "IsOptional": false }]
    },
    {
      "Name": "Construct Domain",
      "Description": "Create a numeric domain from two numeric extremes.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Domain start", "DataType": "Number", "IsOptional": false },
        { "Name": "Domain end", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Domain", "DataType": "Domain", "IsOptional": false }]
    },
    {
      "Name": "Iso Curve",
      "Description": "Construct {uv} isocurves on a surface.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false },
        { "Name": "UV point", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "U Isocurve", "DataType": "Curve", "IsOptional": false },
        { "Name": "V Isocurve", "DataType": "Curve", "IsOptional": false }
      ]
    },
    {
      "Name": "CoSecant",
      "Description": "Compute the co-secant (reciprocal of the Sine) of an angle.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Value", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Points to Numbers",
      "Description": "Convert a list of points to a list of numbers",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Mask", "DataType": "Coordinate Mask", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Numbers", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Set Difference (S)",
      "Description": "Create the symmetric difference of two sets (the collection of objects present in A or B but not both).",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Set A", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Set B", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        {
          "Name": "ExDifference",
          "DataType": "Generic Data",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "Vector Force",
      "Description": "Create a field due to a vector force",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Line", "DataType": "Line", "IsOptional": false },
        { "Name": "Bounds", "DataType": "Box", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Field", "DataType": "Field", "IsOptional": false }]
    },
    {
      "Name": "Mesh Colours",
      "Description": "Assign a repeating colour pattern to a mesh object.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Colours", "DataType": "Colour", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Cosine",
      "Description": "Compute the cosine of a value",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Value", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Unit Vector",
      "Description": "Unitize vector.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Vector", "DataType": "Vector", "IsOptional": false }],
      "Outputs": [{ "Name": "Vector", "DataType": "Vector", "IsOptional": false }]
    },
    {
      "Name": "Unit Y",
      "Description": "Unit vector parallel to the world {y} axis.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Factor", "DataType": "Number", "IsOptional": false }],
      "Outputs": [
        { "Name": "Unit vector", "DataType": "Vector", "IsOptional": false }
      ]
    },
    {
      "Name": "Set Majority",
      "Description": "Determine majority member presence amongst three sets.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Set A", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Set B", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Set C", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Is Planar",
      "Description": "Test whether a surface is planar",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false },
        { "Name": "Interior", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Planar", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false }
      ]
    },
    {
      "Name": "Boundary Surfaces",
      "Description": "Create planar surfaces from a collection of boundary edge curves.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Edges", "DataType": "Curve", "IsOptional": false }],
      "Outputs": [
        { "Name": "Surfaces", "DataType": "Surface", "IsOptional": false }
      ]
    },
    {
      "Name": "Example",
      "Description": "Example",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Circle", "DataType": "Circle", "IsOptional": false },
        { "Name": "Line", "DataType": "Line", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Arc A", "DataType": "Arc", "IsOptional": false },
        { "Name": "Arc B", "DataType": "Arc", "IsOptional": false }
      ]
    },
    {
      "Name": "Reverse",
      "Description": "Reverse a vector (multiply by -1).",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Vector", "DataType": "Vector", "IsOptional": false }],
      "Outputs": [{ "Name": "Vector", "DataType": "Vector", "IsOptional": false }]
    },
    {
      "Name": "Deconstruct Date",
      "Description": "Deconstruct a date into years, months, days, hours, minutes and seconds",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Date", "DataType": "Time", "IsOptional": false }],
      "Outputs": [
        { "Name": "Year", "DataType": "Integer", "IsOptional": false },
        { "Name": "Month", "DataType": "Integer", "IsOptional": false },
        { "Name": "Day", "DataType": "Integer", "IsOptional": false },
        { "Name": "Hour", "DataType": "Integer", "IsOptional": false },
        { "Name": "Minute", "DataType": "Integer", "IsOptional": false },
        { "Name": "Second", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Merge Faces",
      "Description": "Merge all adjacent co-planar faces in a brep",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Brep", "DataType": "Brep", "IsOptional": false }],
      "Outputs": [
        { "Name": "Breps", "DataType": "Brep", "IsOptional": false },
        { "Name": "Before", "DataType": "Integer", "IsOptional": false },
        { "Name": "After", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Filter Content",
      "Description": "Separate content by filter condition",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Content", "DataType": "Data", "IsOptional": false },
        { "Name": "Filter", "DataType": "Predicate", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Content", "DataType": "Data", "IsOptional": false }]
    },
    {
      "Name": "Tangent Lines (Ex)",
      "Description": "Create external tangent lines between circles",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Circle A", "DataType": "Circle", "IsOptional": false },
        { "Name": "Circle B", "DataType": "Circle", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Tangent 1", "DataType": "Line", "IsOptional": false },
        { "Name": "Tangent 2", "DataType": "Line", "IsOptional": false }
      ]
    },
    {
      "Name": "Model Object",
      "Description": "Model Object",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Object", "DataType": "Model Object", "IsOptional": true },
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": true },
        { "Name": "Name", "DataType": "Text", "IsOptional": true },
        { "Name": "Layer", "DataType": "Model Layer", "IsOptional": true },
        {
          "Name": "Visibility",
          "DataType": "Visibility Attributes",
          "IsOptional": true
        },
        {
          "Name": "Display",
          "DataType": "Display Attributes",
          "IsOptional": true
        },
        {
          "Name": "Drafting",
          "DataType": "Drafting Attributes",
          "IsOptional": true
        },
        { "Name": "Render", "DataType": "Render Attributes", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Object", "DataType": "Model Object", "IsOptional": false },
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Name", "DataType": "Text", "IsOptional": false },
        { "Name": "Layer", "DataType": "Model Layer", "IsOptional": false },
        {
          "Name": "Visibility",
          "DataType": "Visibility Attributes",
          "IsOptional": false
        },
        {
          "Name": "Display",
          "DataType": "Display Attributes",
          "IsOptional": false
        },
        {
          "Name": "Drafting",
          "DataType": "Drafting Attributes",
          "IsOptional": false
        },
        { "Name": "Render", "DataType": "Render Attributes", "IsOptional": false }
      ]
    },
    {
      "Name": "Line + Line",
      "Description": "Create a plane from two line segments.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Line A", "DataType": "Line", "IsOptional": false },
        { "Name": "Line B", "DataType": "Line", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Plane", "DataType": "Plane", "IsOptional": false }]
    },
    {
      "Name": "Line Dimension",
      "Description": "Create a distance annotation along a line.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Line", "DataType": "Line", "IsOptional": false },
        { "Name": "Text", "DataType": "Text", "IsOptional": false },
        { "Name": "Size", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": []
    },
    {
      "Name": "Model Viewport",
      "Description": "Model Viewport",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Viewport", "DataType": "Model Viewport", "IsOptional": true },
        { "Name": "Name", "DataType": "Text", "IsOptional": true },
        { "Name": "View", "DataType": "View", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Viewport", "DataType": "Model Viewport", "IsOptional": false },
        { "Name": "Name", "DataType": "Text", "IsOptional": false },
        { "Name": "View", "DataType": "View", "IsOptional": false }
      ]
    },
    {
      "Name": "Project",
      "Description": "Project a curve onto a Brep.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Brep", "DataType": "Brep", "IsOptional": false },
        { "Name": "Direction", "DataType": "Vector", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Curve", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Logical Not Filter",
      "Description": "Create a filter as the logical NOT of another.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Filter", "DataType": "Predicate", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Not Filter", "DataType": "Predicate", "IsOptional": false }
      ]
    },
    {
      "Name": "Data Input",
      "Description": "Read a bunch of data from a file.",
      "IsCoreComponent": true,
      "Inputs": [],
      "Outputs": []
    },
    {
      "Name": "Dispatch",
      "Description": "Dispatch the items in a list into two target lists.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "List", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Dispatch pattern", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "List A", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "List B", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Split AHSV",
      "Description": "Split a colour into floating point {AHSV} channels",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Colour", "DataType": "Colour", "IsOptional": false }],
      "Outputs": [
        { "Name": "Alpha", "DataType": "Number", "IsOptional": false },
        { "Name": "Hue", "DataType": "Number", "IsOptional": false },
        { "Name": "Saturation", "DataType": "Number", "IsOptional": false },
        { "Name": "Value", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Plane Through Shape",
      "Description": "Make a rectangular surface that is larger than a given shape.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Shape", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Inflate", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false }
      ]
    },
    {
      "Name": "Box Morph",
      "Description": "Morph an object into a twisted box.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Reference", "DataType": "Box", "IsOptional": false },
        { "Name": "Target", "DataType": "Twisted Box", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false }
      ]
    },
    {
      "Name": "Split Tree",
      "Description": "Split a data tree into two parts using path masks.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Data", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Masks", "DataType": "Text", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Positive", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Negative", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Face Circles",
      "Description": "Solve the circumscribed circles for all mesh faces",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }],
      "Outputs": [
        { "Name": "Centers", "DataType": "Circle", "IsOptional": false },
        { "Name": "Ratio", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Rail Revolution",
      "Description": "Create a surface of revolution using a sweep rail.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Rail", "DataType": "Curve", "IsOptional": false },
        { "Name": "Axis", "DataType": "Line", "IsOptional": false },
        { "Name": "Scale", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Surface", "DataType": "Brep", "IsOptional": false }]
    },
    {
      "Name": "Model Earth Location",
      "Description": "Associates a model location and orientation with a latitude, longitude, and elevation value on Earth.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Location", "DataType": "Earth Location", "IsOptional": true },
        { "Name": "Name", "DataType": "Text", "IsOptional": true },
        { "Name": "Anchor", "DataType": "Plane", "IsOptional": true },
        { "Name": "Latitude", "DataType": "Number", "IsOptional": true },
        { "Name": "Longitude", "DataType": "Number", "IsOptional": true },
        { "Name": "Elevation", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Location", "DataType": "Earth Location", "IsOptional": false },
        { "Name": "Name", "DataType": "Text", "IsOptional": false },
        { "Name": "Anchor", "DataType": "Plane", "IsOptional": false },
        { "Name": "Latitude", "DataType": "Number", "IsOptional": false },
        { "Name": "Longitude", "DataType": "Number", "IsOptional": false },
        { "Name": "Elevation", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Rectangle",
      "Description": "Create a rectangle on a plane",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "X Size", "DataType": "Domain", "IsOptional": false },
        { "Name": "Y Size", "DataType": "Domain", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Rectangle", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Merge Fields",
      "Description": "Merge a collection of fields into one",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Fields", "DataType": "Field", "IsOptional": false }],
      "Outputs": [{ "Name": "Field", "DataType": "Field", "IsOptional": false }]
    },
    {
      "Name": "Fancy Curves",
      "Description": "Test new curve options",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Colour", "DataType": "Colour", "IsOptional": false },
        { "Name": "Thickness", "DataType": "Number", "IsOptional": false },
        { "Name": "CapStyle", "DataType": "Integer", "IsOptional": false },
        { "Name": "JoinStyle", "DataType": "Integer", "IsOptional": false },
        { "Name": "Pattern", "DataType": "Number", "IsOptional": false },
        {
          "Name": "PatternBySegment",
          "DataType": "Boolean",
          "IsOptional": false
        },
        { "Name": "PatternOffset", "DataType": "Number", "IsOptional": false },
        {
          "Name": "WorldPatternLengths",
          "DataType": "Boolean",
          "IsOptional": false
        },
        { "Name": "TaperPosition", "DataType": "Number", "IsOptional": false },
        { "Name": "TaperThickness", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": []
    },
    {
      "Name": "Sphere",
      "Description": "Create a spherical surface.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Base", "DataType": "Plane", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Sphere", "DataType": "Surface", "IsOptional": false }
      ]
    },
    {
      "Name": "Delaunay Edges",
      "Description": "Delaunay connectivity",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Connectivity", "DataType": "Integer", "IsOptional": false },
        { "Name": "Edges", "DataType": "Line", "IsOptional": false }
      ]
    },
    {
      "Name": "Align Vertices",
      "Description": "Align nearby vertices in a mesh",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Tolerance", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Deconstruct Box",
      "Description": "Deconstruct a box into its constituent parts.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Box", "DataType": "Box", "IsOptional": false }],
      "Outputs": [
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "X", "DataType": "Domain", "IsOptional": false },
        { "Name": "Y", "DataType": "Domain", "IsOptional": false },
        { "Name": "Z", "DataType": "Domain", "IsOptional": false }
      ]
    },
    {
      "Name": "Torsion",
      "Description": "Evaluate the torsion of a curve at a specified parameter.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Parameter", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Torsion", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "MetaBall",
      "Description": "2D Metaball isocurve through point",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Accuracy", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Isocurve", "DataType": "Curve", "IsOptional": false }
      ]
    },
    {
      "Name": "Text Length",
      "Description": "Get the length (character count) of some text",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Text", "DataType": "Text", "IsOptional": false }],
      "Outputs": [
        { "Name": "Length", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Circle TanTanTan",
      "Description": "Create a circle tangent to three curves.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve A", "DataType": "Curve", "IsOptional": false },
        { "Name": "Curve B", "DataType": "Curve", "IsOptional": false },
        { "Name": "Curve C", "DataType": "Curve", "IsOptional": false },
        { "Name": "Point", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Circle", "DataType": "Circle", "IsOptional": false }]
    },
    {
      "Name": "Data Output",
      "Description": "Write a bunch of data to a file.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Data Input", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": []
    },
    {
      "Name": "Relative Differences",
      "Description": "Compute relative differences for a list of data",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Values", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Differenced", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Bounds 2D",
      "Description": "Create a numeric two-dimensional domain which encompasses a list of coordinates.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Coordinates", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Domain", "DataType": "Domain²", "IsOptional": false }
      ]
    },
    {
      "Name": "Query Pages",
      "Description": "Query a Rhino document for all available page layouts",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Name", "DataType": "Text Pattern", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Pages", "DataType": "Model Page", "IsOptional": false }
      ]
    },
    {
      "Name": "Duplicate Data",
      "Description": "Duplicate data a predefined number of times.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Data", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Number", "DataType": "Integer", "IsOptional": false },
        { "Name": "Order", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Data", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Move Away From",
      "Description": "Translate (move) an object away from another object.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Emitter", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Distance", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Nurbs Curve",
      "Description": "Construct a nurbs curve from control points.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Vertices", "DataType": "Point", "IsOptional": false },
        { "Name": "Degree", "DataType": "Integer", "IsOptional": false },
        { "Name": "Periodic", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false },
        { "Name": "Domain", "DataType": "Domain", "IsOptional": false }
      ]
    },
    {
      "Name": "Gate Xor",
      "Description": "Perform boolean exclusive disjunction (XOR gate).",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "A", "DataType": "Boolean", "IsOptional": false },
        { "Name": "B", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Epsilon",
      "Description": "Returns a factor of double precision floating point epsilon.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Factor", "DataType": "Number", "IsOptional": false }],
      "Outputs": [{ "Name": "Output", "DataType": "Number", "IsOptional": false }]
    },
    {
      "Name": "Carthesian Product",
      "Description": "Create the Carthesian product for two sets of identical cardinality.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Set A", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Set B", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Product", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Deconstruct Path",
      "Description": "Deconstruct a data tree path into individual integers.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Branch", "DataType": "Path", "IsOptional": false }],
      "Outputs": [
        { "Name": "Indices", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Tangent Lines (In)",
      "Description": "Create internal tangent lines between circles",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Circle A", "DataType": "Circle", "IsOptional": false },
        { "Name": "Circle B", "DataType": "Circle", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Tangent 1", "DataType": "Line", "IsOptional": false },
        { "Name": "Tangent 2", "DataType": "Line", "IsOptional": false }
      ]
    },
    {
      "Name": "Point In Brep",
      "Description": "Test whether a point is inside a closed brep",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Brep", "DataType": "Brep", "IsOptional": false },
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Strict", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Inside", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Interpolate data",
      "Description": "Interpolate a collection of data.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Data", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Parameter", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Value", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Populate 3D",
      "Description": "Populate a 3-Dimensional region with points",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Region", "DataType": "Box", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "Seed", "DataType": "Integer", "IsOptional": false },
        { "Name": "Points", "DataType": "Point", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Population", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Insert Items",
      "Description": "Insert a collection of items into a list.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "List", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Item", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Indices", "DataType": "Integer", "IsOptional": false },
        { "Name": "Wrap", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "List", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Point Cloud Section",
      "Description": "Create a planar section by intersecting a plane with a cloud of points",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Cloud", "DataType": "Point Cloud", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Curves", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Construct Mesh",
      "Description": "Construct a mesh from vertices, faces and optional colours.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Vertices", "DataType": "Point", "IsOptional": false },
        { "Name": "Faces", "DataType": "Mesh face", "IsOptional": false },
        { "Name": "Colours", "DataType": "Colour", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Offset Polyline",
      "Description": "Offset a 2D polyline",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Polyline", "DataType": "Curve", "IsOptional": false },
        { "Name": "Distance", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Offset", "DataType": "Curve", "IsOptional": false },
        { "Name": "Valid", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Populate 2D",
      "Description": "Populate a 2-Dimensional region with points",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Region", "DataType": "Rectangle", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "Seed", "DataType": "Integer", "IsOptional": false },
        { "Name": "Points", "DataType": "Point", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Population", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Set Difference",
      "Description": "Create the difference of two sets (the collection of objects present in A but not in B).",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Set A", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Set B", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Union", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Linear Dimension",
      "Description": "Linear Dimension",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Linear Dimension",
          "DataType": "Linear Dimension",
          "IsOptional": true
        },
        { "Name": "Base Line", "DataType": "Line", "IsOptional": true },
        { "Name": "Point A", "DataType": "Point", "IsOptional": true },
        { "Name": "Point B", "DataType": "Point", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Linear Dimension",
          "DataType": "Linear Dimension",
          "IsOptional": false
        },
        { "Name": "Base Line", "DataType": "Line", "IsOptional": false },
        { "Name": "Point A", "DataType": "Point", "IsOptional": false },
        { "Name": "Point B", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Mass Multiplication",
      "Description": "Perform mass multiplication of a list of items",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Input", "DataType": "Generic Data", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false },
        {
          "Name": "Partial Results",
          "DataType": "Generic Data",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "Smooth Mesh",
      "Description": "Smooth the vertices of a mesh",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Strength", "DataType": "Number", "IsOptional": false },
        { "Name": "Skip Naked", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Iterations", "DataType": "Integer", "IsOptional": false },
        { "Name": "Limit", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Text Trim",
      "Description": "Remove whitespace characters from the start and end of some text.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Text", "DataType": "Text", "IsOptional": false },
        { "Name": "Start", "DataType": "Boolean", "IsOptional": false },
        { "Name": "End", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Result", "DataType": "Text", "IsOptional": false }]
    },
    {
      "Name": "Edges from Linearity",
      "Description": "Select brep edges based on linearity",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Brep", "DataType": "Brep", "IsOptional": false },
        { "Name": "Minimum", "DataType": "Number", "IsOptional": false },
        { "Name": "Maximum", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Edges", "DataType": "Curve", "IsOptional": false },
        { "Name": "Indices", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Proximity 3D",
      "Description": "Search for three-dimensional proximity within a point list",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Group", "DataType": "Integer", "IsOptional": false },
        { "Name": "Min Radius", "DataType": "Number", "IsOptional": true },
        { "Name": "Max Radius", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Links", "DataType": "Line", "IsOptional": false },
        { "Name": "Topology", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Rectangular Array",
      "Description": "Create a rectangular array of geometry.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": true },
        { "Name": "Cell", "DataType": "Rectangle", "IsOptional": false },
        { "Name": "X Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "Y Count", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Contains Text Filter",
      "Description": "Create a filter that determines if a piece of text occurs within another text",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Key", "DataType": "Text", "IsOptional": false },
        { "Name": "Text", "DataType": "Text", "IsOptional": false },
        { "Name": "Case", "DataType": "Boolean", "IsOptional": true },
        { "Name": "Culture", "DataType": "Culture", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Filter", "DataType": "Predicate", "IsOptional": false }
      ]
    },
    {
      "Name": "Visibility Attributes",
      "Description": "Object visibility attributes",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Visibility",
          "DataType": "Visibility Attributes",
          "IsOptional": true
        },
        { "Name": "Hidden", "DataType": "Boolean", "IsOptional": true },
        { "Name": "Locked", "DataType": "Boolean", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Visibility",
          "DataType": "Visibility Attributes",
          "IsOptional": false
        },
        { "Name": "Hidden", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Locked", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Deconstuct Rectangle",
      "Description": "Retrieve the base plane and side intervals of a rectangle.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Rectangle", "DataType": "Rectangle", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Base Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "X Interval", "DataType": "Domain", "IsOptional": false },
        { "Name": "Y Interval", "DataType": "Domain", "IsOptional": false }
      ]
    },
    {
      "Name": "Symbol (Advanced)",
      "Description": "Advanced symbol display properties",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Style", "DataType": "Integer", "IsOptional": false },
        { "Name": "Size Primary", "DataType": "Number", "IsOptional": false },
        { "Name": "Size Secondary", "DataType": "Number", "IsOptional": false },
        { "Name": "Rotation", "DataType": "Number", "IsOptional": false },
        { "Name": "Fill", "DataType": "Colour", "IsOptional": false },
        { "Name": "Edge", "DataType": "Colour", "IsOptional": false },
        { "Name": "Width", "DataType": "Number", "IsOptional": false },
        { "Name": "Adjust", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        {
          "Name": "Symbol Display",
          "DataType": "Symbol Display",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "Construct Exotic Date",
      "Description": "Construct a date using a specific calendar",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Year", "DataType": "Integer", "IsOptional": false },
        { "Name": "Month", "DataType": "Integer", "IsOptional": false },
        { "Name": "Day", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Time", "DataType": "Time", "IsOptional": false }]
    },
    {
      "Name": "Series",
      "Description": "Create a series of numbers.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Start", "DataType": "Number", "IsOptional": false },
        { "Name": "Step", "DataType": "Number", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Series", "DataType": "Number", "IsOptional": false }]
    },
    {
      "Name": "Right Trigonometry",
      "Description": "Right triangle trigonometry",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Alpha", "DataType": "Number", "IsOptional": true },
        { "Name": "Beta", "DataType": "Number", "IsOptional": true },
        { "Name": "P length", "DataType": "Number", "IsOptional": true },
        { "Name": "Q length", "DataType": "Number", "IsOptional": true },
        { "Name": "R length", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Alpha", "DataType": "Number", "IsOptional": false },
        { "Name": "Beta", "DataType": "Number", "IsOptional": false },
        { "Name": "P length", "DataType": "Number", "IsOptional": false },
        { "Name": "Q length", "DataType": "Number", "IsOptional": false },
        { "Name": "R length", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Align Plane",
      "Description": "Perform minimal rotation to align a plane with a guide vector",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Direction", "DataType": "Vector", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Angle", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Combine Data",
      "Description": "Combine non-null items out of several inputs",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Input 0", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Input 1", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Result", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Index", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Offset Surface Loose",
      "Description": "Offset a surface by moving the control points.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false },
        { "Name": "Distance", "DataType": "Number", "IsOptional": false },
        { "Name": "Retrim", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false }
      ]
    },
    {
      "Name": "Sphere Fit",
      "Description": "Fit a sphere to a 3D collection of points",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Points", "DataType": "Point", "IsOptional": false }],
      "Outputs": [
        { "Name": "Center", "DataType": "Point", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false },
        { "Name": "Sphere", "DataType": "Surface", "IsOptional": false }
      ]
    },
    {
      "Name": "Import Hatch Pattern",
      "Description": "Import Hatch Pattern",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "File Path", "DataType": "Text", "IsOptional": false }
      ],
      "Outputs": [
        {
          "Name": "Hatch Patterns",
          "DataType": "Model Hatch Pattern",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "Display Attributes",
      "Description": "Object display attributes",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Display",
          "DataType": "Display Attributes",
          "IsOptional": true
        },
        {
          "Name": "Display Colour",
          "DataType": "Display Colour",
          "IsOptional": true
        },
        { "Name": "Display Mode", "DataType": "Display Mode", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Display",
          "DataType": "Display Attributes",
          "IsOptional": false
        },
        {
          "Name": "Display Colour",
          "DataType": "Display Colour",
          "IsOptional": false
        },
        {
          "Name": "Display Mode",
          "DataType": "Display Mode",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "Linear Array",
      "Description": "Create a linear array of geometry.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": true },
        { "Name": "Direction", "DataType": "Vector", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Sequence",
      "Description": "Generate a sequence of numbers",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Notation", "DataType": "Text", "IsOptional": false },
        { "Name": "Length", "DataType": "Integer", "IsOptional": false },
        { "Name": "Initial", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Sequence", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Move",
      "Description": "Translate (move) an object along a vector.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": true },
        { "Name": "Motion", "DataType": "Vector", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Tangent Lines",
      "Description": "Create tangent lines between a point and a circle",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Circle", "DataType": "Circle", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Tangent 1", "DataType": "Line", "IsOptional": false },
        { "Name": "Tangent 2", "DataType": "Line", "IsOptional": false }
      ]
    },
    {
      "Name": "Model Block Definition",
      "Description": "Block Definition",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Block Definition",
          "DataType": "Model Block Definition",
          "IsOptional": true
        },
        { "Name": "Objects", "DataType": "Model Object", "IsOptional": true },
        { "Name": "Name", "DataType": "Text", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Block Definition",
          "DataType": "Model Block Definition",
          "IsOptional": false
        },
        { "Name": "Objects", "DataType": "Model Object", "IsOptional": false },
        { "Name": "Name", "DataType": "Text", "IsOptional": false }
      ]
    },
    {
      "Name": "Radial Dimension",
      "Description": "Radial Dimension",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Radial Dimension",
          "DataType": "Radial Dimension",
          "IsOptional": true
        },
        { "Name": "Dimension Type", "DataType": "Integer", "IsOptional": true },
        { "Name": "Curve", "DataType": "Curve", "IsOptional": true },
        { "Name": "Curve Point", "DataType": "Point", "IsOptional": true },
        { "Name": "Dimension Location", "DataType": "Point", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Radial Dimension",
          "DataType": "Radial Dimension",
          "IsOptional": false
        },
        { "Name": "Dimension Type", "DataType": "Integer", "IsOptional": false },
        { "Name": "Center Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Curve Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Dimension Location", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Extremes",
      "Description": "Find the extremes (highest and lowest points) on a curve.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Highest", "DataType": "Point", "IsOptional": false },
        { "Name": "Lowest", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Sun (Manual Control)",
      "Description": "Sun from North angle, azimuth, and altitude values.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Sun", "DataType": "Data", "IsOptional": true },
        { "Name": "Enabled", "DataType": "Boolean", "IsOptional": true },
        { "Name": "Intensity", "DataType": "Number", "IsOptional": true },
        { "Name": "Azimuth", "DataType": "Number", "IsOptional": true },
        { "Name": "Altitude", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Sun", "DataType": "Data", "IsOptional": false },
        { "Name": "Enabled", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Intensity", "DataType": "Number", "IsOptional": false },
        { "Name": "Azimuth", "DataType": "Number", "IsOptional": false },
        { "Name": "Altitude", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Brep | Line",
      "Description": "Solve intersection events for a Brep and a line.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Brep", "DataType": "Brep", "IsOptional": false },
        { "Name": "Line", "DataType": "Line", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Curves", "DataType": "Curve", "IsOptional": false },
        { "Name": "Points", "DataType": "Point", "IsOptional": false }
      ]
    },
    {
      "Name": "Content Details",
      "Description": "Retrieve some details about Rhino content elements.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Content", "DataType": "Data", "IsOptional": false }],
      "Outputs": [
        { "Name": "Content", "DataType": "Data", "IsOptional": false },
        { "Name": "Id", "DataType": "Guid", "IsOptional": false },
        { "Name": "Path", "DataType": "Text", "IsOptional": false },
        { "Name": "Attributes", "DataType": "Text", "IsOptional": false }
      ]
    },
    {
      "Name": "Mesh Spray",
      "Description": "Assign colours to a mesh based on spray points.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Mesh", "DataType": "Mesh", "IsOptional": false },
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Colours", "DataType": "Colour", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Mesh", "DataType": "Mesh", "IsOptional": false }]
    },
    {
      "Name": "Stream Filter",
      "Description": "Filters a collection of input streams",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Gate", "DataType": "Integer", "IsOptional": false },
        { "Name": "Stream 0", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream 1", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Stream", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Custom Curve Preview",
      "Description": "Custom Curve Preview",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Linetype", "DataType": "Model Linetype", "IsOptional": true },
        { "Name": "Colour", "DataType": "Colour", "IsOptional": false }
      ],
      "Outputs": []
    },
    {
      "Name": "Split Brep",
      "Description": "Split one brep with another.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Brep", "DataType": "Brep", "IsOptional": false },
        { "Name": "Cutter", "DataType": "Brep", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Result", "DataType": "Brep", "IsOptional": false }]
    },
    {
      "Name": "Import Model Environment",
      "Description": "Import Model Environment",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "File Path", "DataType": "Text", "IsOptional": false }
      ],
      "Outputs": [
        {
          "Name": "Environment",
          "DataType": "Model Environment",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "Jitter",
      "Description": "Randomly shuffles a list of values.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "List", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Jitter", "DataType": "Number", "IsOptional": false },
        { "Name": "Seed", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Values", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Indices", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Content Information",
      "Description": "Get or set some information about Rhino content elements.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Content", "DataType": "Data", "IsOptional": false },
        { "Name": "Parent", "DataType": "Text", "IsOptional": true },
        { "Name": "Name", "DataType": "Text", "IsOptional": true },
        { "Name": "Tags", "DataType": "Text", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Content", "DataType": "Data", "IsOptional": false },
        { "Name": "Parent", "DataType": "Text", "IsOptional": false },
        { "Name": "Name", "DataType": "Text", "IsOptional": false },
        { "Name": "Tags", "DataType": "Text", "IsOptional": false }
      ]
    },
    {
      "Name": "Explode Object",
      "Description": "Explode Object",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Object", "DataType": "Model Object", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Objects", "DataType": "Model Object", "IsOptional": false }
      ]
    },
    {
      "Name": "Deconstruct Domain²",
      "Description": "Deconstruct a two-dimensional domain into its component parts",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Domain", "DataType": "Domain²", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "U component", "DataType": "Domain", "IsOptional": false },
        { "Name": "V component", "DataType": "Domain", "IsOptional": false }
      ]
    },
    {
      "Name": "Trim Solid",
      "Description": "Cut holes into a shape with a set of solid cutters.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Shape", "DataType": "Brep", "IsOptional": false },
        { "Name": "Cutters", "DataType": "Brep", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Result", "DataType": "Brep", "IsOptional": false }]
    },
    {
      "Name": "Gradient Colour Stop",
      "Description": "Gradient Colour Stop",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Color Stop", "DataType": "Colour Stop", "IsOptional": true },
        { "Name": "Colour", "DataType": "Colour", "IsOptional": true },
        { "Name": "Position", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Color Stop", "DataType": "Colour Stop", "IsOptional": false },
        { "Name": "Colour", "DataType": "Colour", "IsOptional": false },
        { "Name": "Position", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Transpose Surface",
      "Description": "Transpose surface parameterization (swap U and V)",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false },
        { "Name": "U component", "DataType": "Domain", "IsOptional": false },
        { "Name": "V component", "DataType": "Domain", "IsOptional": false }
      ]
    },
    {
      "Name": "Mirror",
      "Description": "Mirror an object.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": true },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Construct Smooth Time",
      "Description": "Construct a time instance from smooth components",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Days", "DataType": "Number", "IsOptional": false },
        { "Name": "Hours", "DataType": "Number", "IsOptional": false },
        { "Name": "Minutes", "DataType": "Number", "IsOptional": false },
        { "Name": "Seconds", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Time", "DataType": "Time", "IsOptional": false }]
    },
    {
      "Name": "Shear Angle",
      "Description": "Shear an object based on tilt angles.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": true },
        { "Name": "Base", "DataType": "Plane", "IsOptional": false },
        { "Name": "Angle X", "DataType": "Number", "IsOptional": false },
        { "Name": "Angle Y", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Tangent Arcs",
      "Description": "Create tangent arcs between circles",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Circle A", "DataType": "Circle", "IsOptional": false },
        { "Name": "Circle B", "DataType": "Circle", "IsOptional": false },
        { "Name": "Radius", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Arc A", "DataType": "Arc", "IsOptional": false },
        { "Name": "Arc B", "DataType": "Arc", "IsOptional": false }
      ]
    },
    {
      "Name": "Plane | Plane | Plane",
      "Description": "Solve the intersection events of three planes.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Plane A", "DataType": "Plane", "IsOptional": false },
        { "Name": "Plane B", "DataType": "Plane", "IsOptional": false },
        { "Name": "Plane C", "DataType": "Plane", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Line AB", "DataType": "Line", "IsOptional": false },
        { "Name": "Line AC", "DataType": "Line", "IsOptional": false },
        { "Name": "Line BC", "DataType": "Line", "IsOptional": false }
      ]
    },
    {
      "Name": "Includes",
      "Description": "Test a numeric value to see if it is included in the domain",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Value", "DataType": "Number", "IsOptional": false },
        { "Name": "Domain", "DataType": "Domain", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Includes", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Deviation", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Dimensions",
      "Description": "Get the approximate dimensions of a surface",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "U dimension", "DataType": "Number", "IsOptional": false },
        { "Name": "V dimension", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Evaluate Text Fields",
      "Description": "Evaluates fields expressions of a text.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Text", "DataType": "Text", "IsOptional": false }],
      "Outputs": [
        { "Name": "Text", "DataType": "Text", "IsOptional": false },
        { "Name": "Values", "DataType": "Text", "IsOptional": false }
      ]
    },
    {
      "Name": "Cluster",
      "Description": "Contains a cluster of Grasshopper components",
      "IsCoreComponent": true,
      "Inputs": [],
      "Outputs": []
    },
    {
      "Name": "Replace Nulls",
      "Description": "Replace nulls or invalid data with other data",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Items", "DataType": "Generic Data", "IsOptional": false },
        {
          "Name": "Replacements",
          "DataType": "Generic Data",
          "IsOptional": false
        }
      ],
      "Outputs": [
        { "Name": "Items", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Colour RGB (f)",
      "Description": "Create a colour from floating point {RGB} channels.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Alpha", "DataType": "Number", "IsOptional": false },
        { "Name": "Red", "DataType": "Number", "IsOptional": false },
        { "Name": "Green", "DataType": "Number", "IsOptional": false },
        { "Name": "Blue", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Colour", "DataType": "Colour", "IsOptional": false }]
    },
    {
      "Name": "Test Crash",
      "Description": "Test crashing of GH",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Crash", "DataType": "Boolean", "IsOptional": false }],
      "Outputs": []
    },
    {
      "Name": "Bounds",
      "Description": "Create a numeric domain which encompasses a list of numbers.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Numbers", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Domain", "DataType": "Domain", "IsOptional": false }]
    },
    {
      "Name": "Polygon Edge",
      "Description": "Create a polygon from a single edge.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Edge Start", "DataType": "Point", "IsOptional": false },
        { "Name": "Edge End", "DataType": "Point", "IsOptional": false },
        { "Name": "Plane Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Segments", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Polygon", "DataType": "Curve", "IsOptional": false },
        { "Name": "Centre", "DataType": "Point", "IsOptional": false },
        { "Name": "Corner Radius", "DataType": "Number", "IsOptional": false },
        { "Name": "Edge Radius", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Merge 05",
      "Description": "Merge five streams into one.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Stream A", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream B", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream C", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream D", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "Stream E", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Stream", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Quad Remesh Settings",
      "Description": "Create setting for Quad-remeshing.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Target Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "Adaptive Size", "DataType": "Number", "IsOptional": false },
        { "Name": "Adaptive Count", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Hard Edges", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Seam Edges", "DataType": "Integer", "IsOptional": false },
        { "Name": "Symmetry", "DataType": "Integer", "IsOptional": false },
        { "Name": "Guide Curves", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        {
          "Name": "Settings",
          "DataType": "Quad meshing settings",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "Cap Holes Ex",
      "Description": "Cap as many holes as possible in a Brep.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Brep", "DataType": "Brep", "IsOptional": false }],
      "Outputs": [
        { "Name": "Brep", "DataType": "Brep", "IsOptional": false },
        { "Name": "Caps", "DataType": "Integer", "IsOptional": false },
        { "Name": "Solid", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Legend",
      "Description": "Display a legend consisting of Tags and Colours",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Colour", "DataType": "Colour", "IsOptional": true },
        { "Name": "Tags", "DataType": "Text", "IsOptional": true },
        { "Name": "Rectangle", "DataType": "Rectangle", "IsOptional": true }
      ],
      "Outputs": []
    },
    {
      "Name": "Rotate Plane",
      "Description": "Perform plane rotation around plane z-axis",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Angle", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Plane", "DataType": "Plane", "IsOptional": false }]
    },
    {
      "Name": "Region Difference",
      "Description": "Difference between two sets of planar closed curves (regions)",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curves A", "DataType": "Curve", "IsOptional": false },
        { "Name": "Curves B", "DataType": "Curve", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": true }
      ],
      "Outputs": [{ "Name": "Result", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Tangent Curve",
      "Description": "Create a curve through a set of points with tangents.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Vertices", "DataType": "Point", "IsOptional": false },
        { "Name": "Tangents", "DataType": "Vector", "IsOptional": false },
        { "Name": "Blend", "DataType": "Number", "IsOptional": false },
        { "Name": "Degree", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false },
        { "Name": "Domain", "DataType": "Domain", "IsOptional": false }
      ]
    },
    {
      "Name": "Text Distance",
      "Description": "Compute the Levenshtein distance between two fragments of text.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Text A", "DataType": "Text", "IsOptional": false },
        { "Name": "Text B", "DataType": "Text", "IsOptional": false },
        { "Name": "Case", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Distance", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Flatten Tree",
      "Description": "Flatten a data tree by removing all branching information.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Tree", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Path", "DataType": "Path", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Tree", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Point In Trim",
      "Description": "Test whether a {uv} coordinate is inside the trimmed portion of a surface",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false },
        { "Name": "UV Point", "DataType": "Point", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Inclusion", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Segment Lengths",
      "Description": "Finds the shortest and longest segments of a curve.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Curve", "DataType": "Curve", "IsOptional": false }],
      "Outputs": [
        { "Name": "Shortest Length", "DataType": "Number", "IsOptional": false },
        { "Name": "Shortest Domain", "DataType": "Domain", "IsOptional": false },
        { "Name": "Longest Length", "DataType": "Number", "IsOptional": false },
        { "Name": "Longest Domain", "DataType": "Domain", "IsOptional": false }
      ]
    },
    {
      "Name": "Colour L*ab",
      "Description": "Create a colour from floating point {CIE L*ab} channels.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Alpha", "DataType": "Number", "IsOptional": false },
        { "Name": "Luminance", "DataType": "Number", "IsOptional": false },
        { "Name": "A", "DataType": "Number", "IsOptional": false },
        { "Name": "B", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Colour", "DataType": "Colour", "IsOptional": false }]
    },
    {
      "Name": "Invert Matrix",
      "Description": "Invert a matrix",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Matrix", "DataType": "Matrix", "IsOptional": false },
        { "Name": "Tolerance", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Matrix", "DataType": "Matrix", "IsOptional": false },
        { "Name": "Success", "DataType": "Boolean", "IsOptional": false }
      ]
    },
    {
      "Name": "Untrim",
      "Description": "Remove all trim curves from a surface.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false }
      ]
    },
    {
      "Name": "Solid Difference",
      "Description": "Perform a solid difference on two Brep sets.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Breps A", "DataType": "Brep", "IsOptional": false },
        { "Name": "Breps B", "DataType": "Brep", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Result", "DataType": "Brep", "IsOptional": false }]
    },
    {
      "Name": "Relative Item",
      "Description": "Retrieve a relative item combo from a data tree",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Tree", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Offset", "DataType": "Text", "IsOptional": false },
        { "Name": "Wrap Paths", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Wrap Items", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Item A", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Item B", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "YZ Plane",
      "Description": "World YZ plane.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "Origin", "DataType": "Point", "IsOptional": false }],
      "Outputs": [{ "Name": "Plane", "DataType": "Plane", "IsOptional": false }]
    },
    {
      "Name": "Addition",
      "Description": "Perform vector-vector addition.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Vector A", "DataType": "Vector", "IsOptional": false },
        { "Name": "Vector B", "DataType": "Vector", "IsOptional": false },
        { "Name": "Unitize", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Vector", "DataType": "Vector", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "DotNET VB Script (LEGACY)",
      "Description": "A VB.NET scriptable component",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "x", "DataType": "Generic Data", "IsOptional": true },
        { "Name": "y", "DataType": "Generic Data", "IsOptional": true }
      ],
      "Outputs": [
        { "Name": "Output", "DataType": "Text", "IsOptional": false },
        { "Name": "A", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Point",
      "Description": "Contains a collection of three-dimensional points",
      "IsCoreComponent": true,
      "Inputs": [],
      "Outputs": [{ "Name": "Value", "DataType": "Point", "IsOptional": false }]
    },
    {
      "Name": "Map to Surface",
      "Description": "Map a curve onto a surface via control points.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Source", "DataType": "Surface", "IsOptional": false },
        { "Name": "Target", "DataType": "Surface", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Curve", "DataType": "Curve", "IsOptional": false }]
    },
    {
      "Name": "Evaluate Curve",
      "Description": "Evaluate a curve at the specified parameter.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Parameter", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Tangent", "DataType": "Vector", "IsOptional": false },
        { "Name": "Angle", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Angular Dimension",
      "Description": "Create an angle annotation between points.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Center", "DataType": "Point", "IsOptional": false },
        { "Name": "Point A", "DataType": "Point", "IsOptional": false },
        { "Name": "Point B", "DataType": "Point", "IsOptional": false },
        { "Name": "Reflex", "DataType": "Boolean", "IsOptional": false },
        { "Name": "Text", "DataType": "Text", "IsOptional": false },
        { "Name": "Size", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": []
    },
    {
      "Name": "SubD Vertices",
      "Description": "Extract all vertex data from a SubD.",
      "IsCoreComponent": true,
      "Inputs": [{ "Name": "SubD", "DataType": "SubD", "IsOptional": false }],
      "Outputs": [
        { "Name": "Point", "DataType": "Point", "IsOptional": false },
        { "Name": "Id", "DataType": "Text", "IsOptional": false },
        { "Name": "Tag", "DataType": "Text", "IsOptional": false }
      ]
    },
    {
      "Name": "Polar Array",
      "Description": "Create a polar array of geometry.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": true },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false },
        { "Name": "Angle", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Transform", "DataType": "Transform", "IsOptional": false }
      ]
    },
    {
      "Name": "Split Group",
      "Description": "Split a group",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Group", "DataType": "Group", "IsOptional": false },
        { "Name": "Indices", "DataType": "Integer", "IsOptional": false },
        { "Name": "Wrap", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Group A", "DataType": "Group", "IsOptional": false },
        { "Name": "Group B", "DataType": "Group", "IsOptional": false }
      ]
    },
    {
      "Name": "Divide Length",
      "Description": "Divide a curve into segments with a preset length",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Points", "DataType": "Point", "IsOptional": false },
        { "Name": "Tangents", "DataType": "Vector", "IsOptional": false },
        { "Name": "Parameters", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Prune Tree",
      "Description": "Remove small branches from a Data Tree.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Tree", "DataType": "Generic Data", "IsOptional": false },
        { "Name": "Minimum", "DataType": "Integer", "IsOptional": false },
        { "Name": "Maximum", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Tree", "DataType": "Generic Data", "IsOptional": false }
      ]
    },
    {
      "Name": "Fibonacci",
      "Description": "Creates a Fibonacci sequence.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Seed A", "DataType": "Number", "IsOptional": false },
        { "Name": "Seed B", "DataType": "Number", "IsOptional": false },
        { "Name": "Number", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [{ "Name": "Series", "DataType": "Number", "IsOptional": false }]
    },
    {
      "Name": "Fitness Landscape",
      "Description": "Display a 2.5D fitness landscape",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Bounds", "DataType": "Rectangle", "IsOptional": false },
        { "Name": "Values", "DataType": "Number", "IsOptional": false },
        { "Name": "Count", "DataType": "Integer", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Landscape", "DataType": "Mesh", "IsOptional": false }
      ]
    },
    {
      "Name": "Edges from Length",
      "Description": "Select brep edges based on length",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Brep", "DataType": "Brep", "IsOptional": false },
        { "Name": "Minimum", "DataType": "Number", "IsOptional": false },
        { "Name": "Maximum", "DataType": "Number", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Edges", "DataType": "Curve", "IsOptional": false },
        { "Name": "Indices", "DataType": "Integer", "IsOptional": false }
      ]
    },
    {
      "Name": "Splop",
      "Description": "Wraps geometry onto a surface.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false },
        { "Name": "Parameter", "DataType": "Point", "IsOptional": false },
        { "Name": "Angle", "DataType": "Number", "IsOptional": false },
        { "Name": "Rigid", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Geometry", "DataType": "Geometry", "IsOptional": false }
      ]
    },
    {
      "Name": "Query Model Hatch Patterns",
      "Description": "Query a Rhino document for all available hatch patterns",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Name", "DataType": "Text Pattern", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Hatch Patterns",
          "DataType": "Model Hatch Pattern",
          "IsOptional": false
        }
      ]
    },
    {
      "Name": "Ordinate Dimension",
      "Description": "Ordinate Dimension",
      "IsCoreComponent": true,
      "Inputs": [
        {
          "Name": "Ordinate Dimension",
          "DataType": "Ordinate Dimension",
          "IsOptional": true
        },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": true },
        { "Name": "Direction", "DataType": "Integer", "IsOptional": true },
        { "Name": "Feature Location", "DataType": "Point", "IsOptional": true },
        { "Name": "Dimension Location", "DataType": "Point", "IsOptional": true },
        { "Name": "Offset 1", "DataType": "Number", "IsOptional": true },
        { "Name": "Offset 2", "DataType": "Number", "IsOptional": true }
      ],
      "Outputs": [
        {
          "Name": "Ordinate Dimension",
          "DataType": "Ordinate Dimension",
          "IsOptional": false
        },
        { "Name": "Plane", "DataType": "Plane", "IsOptional": false },
        { "Name": "Direction", "DataType": "Integer", "IsOptional": false },
        { "Name": "Feature Location", "DataType": "Point", "IsOptional": true },
        {
          "Name": "Dimension Location",
          "DataType": "Point",
          "IsOptional": false
        },
        { "Name": "Offset 1", "DataType": "Number", "IsOptional": false },
        { "Name": "Offset 2", "DataType": "Number", "IsOptional": false }
      ]
    },
    {
      "Name": "Curve On Surface",
      "Description": "Create an interpolated curve through a set of points on a surface.",
      "IsCoreComponent": true,
      "Inputs": [
        { "Name": "Surface", "DataType": "Surface", "IsOptional": false },
        { "Name": "UV coordinates", "DataType": "Point", "IsOptional": false },
        { "Name": "Closed", "DataType": "Boolean", "IsOptional": false }
      ],
      "Outputs": [
        { "Name": "Curve", "DataType": "Curve", "IsOptional": false },
        { "Name": "Length", "DataType": "Number", "IsOptional": false },
        { "Name": "Domain", "DataType": "Domain", "IsOptional": false }
      ]
    }
  ]
}
